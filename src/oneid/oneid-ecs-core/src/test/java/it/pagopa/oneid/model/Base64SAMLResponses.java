package it.pagopa.oneid.model;

public abstract class Base64SAMLResponses {

  public static final String CORRECT_SAML_RESPONSE_01 = "";
  public static final String UNSIGNED_SAML_RESPONSE_02 = "PHNhbWxwOlJlc3BvbnNlDQogICAgRGVzdGluYXRpb249Imh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9zYW1sL2FjcyINCiAgICBJRD0iXzA0NzU4NzNhLWU3OTYtNDc1ZS05MjhlLWVhODcyMmJlNGJlYyINCiAgICBJblJlc3BvbnNlVG89Il81MjJkZmE2MTUwYjQyYzJkZDA0ZWE3NDZjYmEzYWQ5YyIgDQogICAgSXNzdWVJbnN0YW50PSIyMDI0LTA3LTE3VDIwOjQ5OjI0WiINCiAgICBWZXJzaW9uPSIyLjAiIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iDQogICAgeG1sbnM6c2FtbHA9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpwcm90b2NvbCI+DQogICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij5odHRwczovL2xvY2FsaG9zdDo4NDQzPC9zYW1sOklzc3Vlcj4NCg0KICAgIDxzYW1scDpTdGF0dXM+PHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPjwvc2FtbHA6U3RhdHVzPg0KICAgIDxzYW1sOkFzc2VydGlvbiBJRD0iXzU1MGM1ZTAwLWZiYzMtNDhmYy05NjZjLWVjNzgyMmIxY2VmOCIgSXNzdWVJbnN0YW50PSIyMDI0LTA3LTE3VDIwOjQ5OjI0WiINCiAgICAgICAgVmVyc2lvbj0iMi4wIiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiDQogICAgICAgIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KICAgICAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPmh0dHBzOi8vbG9jYWxob3N0Ojg0NDM8L3NhbWw6SXNzdWVyPg0KICAgICAgICA8c2FtbDpTdWJqZWN0Pg0KICAgICAgICAgICAgPHNhbWw6TmFtZUlEIA0KICAgICAgICAgICAgICAgIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6dHJhbnNpZW50Ig0KICAgICAgICAgICAgICAgIE5hbWVRdWFsaWZpZXI9Imh0dHBzOi8vbG9jYWxob3N0Ojg0NDMiPg0KICAgICAgICAgICAgICAgICAgICBfYWI1Y2UyODQtODhiZi00ZDUyLWFmMGItMDAzNDBjZDZmODFlDQogICAgICAgICAgICA8L3NhbWw6TmFtZUlEPg0KICAgICAgICAgICAgPHNhbWw6U3ViamVjdENvbmZpcm1hdGlvbiBNZXRob2Q9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpjbTpiZWFyZXIiPg0KICAgICAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb25EYXRhIA0KICAgICAgICAgICAgICAgICAgICBJblJlc3BvbnNlVG89Il81MjJkZmE2MTUwYjQyYzJkZDA0ZWE3NDZjYmEzYWQ5YyINCiAgICAgICAgICAgICAgICAgICAgTm90T25PckFmdGVyPSIyMDI0LTA3LTE3VDIwOjUyOjMwWiINCiAgICAgICAgICAgICAgICAgICAgUmVjaXBpZW50PSJodHRwOi8vbG9jYWxob3N0OjgwODAvc2FtbC9hY3MiIC8+DQogICAgICAgICAgICA8L3NhbWw6U3ViamVjdENvbmZpcm1hdGlvbj4NCiAgICAgICAgPC9zYW1sOlN1YmplY3Q+DQogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgDQogICAgICAgICAgICBOb3RCZWZvcmU9IjIwMjQtMDctMTdUMjA6NDk6MjRaIiANCiAgICAgICAgICAgIE5vdE9uT3JBZnRlcj0iMjAyNC0wNy0xN1QyMDo1MjozMFoiID4NCiAgICAgICAgICAgIDxzYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+DQogICAgICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2U+aHR0cDovL2xvY2FsaG9zdDo4MDgwPC9zYW1sOkF1ZGllbmNlPg0KICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+DQogICAgICAgIDwvc2FtbDpDb25kaXRpb25zPiANCiAgICAgICAgPHNhbWw6QXV0aG5TdGF0ZW1lbnQgDQogICAgICAgICAgICBBdXRobkluc3RhbnQ9IjIwMjQtMDctMTdUMjA6NDk6MjRaIg0KICAgICAgICAgICAgU2Vzc2lvbkluZGV4PSJfN2Q5MmY3NmQtNTZiNy00ZGIzLTg1MzEtMTc1YWM5NjVmZjRhIiA+DQogICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHQ+DQogICAgICAgICAgICAgICAgPHNhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWY+aHR0cHM6Ly93d3cuc3BpZC5nb3YuaXQvU3BpZEwyPC9zYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPg0KICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4NCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50Pg0KICAgICAgICA8c2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJkYXRlT2ZCaXJ0aCIgIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNhbWw6QXR0cmlidXRlVmFsdWUgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpkYXRlIj4yMDAwLTAxLTAxPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIiAgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDpiYXNpYyI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+VElOSVQtR0RBU0RWMDBBMDFINTAxSjwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlU3RhdGVtZW50Pg0KICAgIDwvc2FtbDpBc3NlcnRpb24+DQo8L3NhbWxwOlJlc3BvbnNlPg0K";
  public static final String UNSIGNED_ASSERTION_SAML_RESPONSE_03 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwOi8vbG9jYWxob3N0OjgwODAvc2FtbC9hY3MiIElEPSJfZTI0NjkwZGItNTViYS00NmM2LWE5ZDQtMmFkYWUyM2U0YWMxIiBJblJlc3BvbnNlVG89Il81MjJkZmE2MTUwYjQyYzJkZDA0ZWE3NDZjYmEzYWQ5YyIgSXNzdWVJbnN0YW50PSIyMDI0LTA3LTE3VDIwOjUwOjQ0WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4NCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPmh0dHBzOi8vbG9jYWxob3N0Ojg0NDM8L3NhbWw6SXNzdWVyPjxkczpTaWduYXR1cmUgeG1sbnM6ZHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPjxkczpTaWduZWRJbmZvPjxkczpDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+PGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz48ZHM6UmVmZXJlbmNlIFVSST0iI19lMjQ2OTBkYi01NWJhLTQ2YzYtYTlkNC0yYWRhZTIzZTRhYzEiPjxkczpUcmFuc2Zvcm1zPjxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPjxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz48L2RzOlRyYW5zZm9ybXM+PGRzOkRpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jI3NoYTI1NiIvPjxkczpEaWdlc3RWYWx1ZT4xRVpGZ2Y3SVcxNTdhbVJvVHkySjloaldFTHZHTWJUdjE2QTd0SGsrUmd3PTwvZHM6RGlnZXN0VmFsdWU+PC9kczpSZWZlcmVuY2U+PC9kczpTaWduZWRJbmZvPjxkczpTaWduYXR1cmVWYWx1ZT5INVZTV1VrZVN2dHVMeXhrWGRWRnZKZEdlQzNlcXpHVFYwZjJZN2xobzBEbGxDdlpPKzBwQzNRMHJ5OG9Zeno5MTMyeEUrb1VZM2N2bEw5N0NHZEYvM1FvVktFTldVcC84RnBZQklsdzhTS3U3RVF6Zi85aDNsNTRKTUJaUnBnNW5UQ2M5VHdtbkNsZDdyVkZLbTd6MDQrTVI0dkVhNys5RXVmaXBSS0N6YzFWNitWMGtubm9mYWZQNWF4dmJIcllQc1hPcXRjSDVBcWM4ZGs4T0Q1Q3F6ek1PcmozbC9LSEhwTmFIY2JweWEvUWp3TkdhYThYVzBSdXJKdE9MZ2dKeEQxVm8rUzlsWDEyZTJ2NEhla3B5dmJYMFNjWmdoU2I5YkhydWhwMk0zL3ZLQ0VCMkVLY3RhallKcHFOd0NBb28wMXZBMHl3RTJHcUM4VXhhRVJ5QXc9PTwvZHM6U2lnbmF0dXJlVmFsdWU+PGRzOktleUluZm8+PGRzOlg1MDlEYXRhPjxkczpYNTA5Q2VydGlmaWNhdGU+TUlJRUdEQ0NBd0NnQXdJQkFnSUpBT3JZajlvTEVKQ3dNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkREFlRncweE9UQTBNVEV4TURBeU1EaGFGdzB5TlRBek1EZ3hNREF5TURoYU1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLOGtKVm8rdWdScmJidjl4aFhDdVZycWk0QjcvTVF6UWM2Mm9jd2xGRnVqSk5kNG0xbVhrVUhGYmd2d2hSa1FxbzJEQW1GZUhpd0NrSlQzSzFlZVhJRmhORkZyb0V6R1B6T055ZWtMcGpOdm1ZSXMxQ0Z2aXJHT2owYmtFaUdhS0VzKy91bXpHanhJaHk1SlFscVhFOTZ5MStJenAyUWhKaW1ESzAvS05pajhJMWJ6eHNlUDBZZ2M0U0Z2ZUtTKzdRTytQckx6V2tsRVdHTXM0RE01WmMzVlJLN2c0TFdQV1poS2RJbUMxcm5TKy9sRW1IU3ZIaXNkVnAvREp0YlNyWndTWVRSdlRUejVJWkRTcTRrQXpyRGZwajE2aDdiM3QzbkZHYzhVb1kyUm80dFJaM2FoSjJyM2I3OXlLNkM1cGhZN0NBQU51VzNnRGRoVmppQk5ZczBDQXdFQUFhT0J5akNCeHpBZEJnTlZIUTRFRmdRVTMvN2tWMnRiZEZ0cGhiU0E0TEg3K3c4U2tjd3dnWmNHQTFVZEl3U0JqekNCaklBVTMvN2tWMnRiZEZ0cGhiU0E0TEg3K3c4U2tjeWhhYVJuTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGRJSUpBT3JZajlvTEVKQ3dNQXdHQTFVZEV3UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKTkZxWGcvVjNhaW1KS1VtVWFxbVFFRW9TYzNxdlhGSVR2VDVmNWJLdzl5ay9OVmhSNnduZEwrei8yNGgxT2RScXM3NmJsZ0g4azExNnFXTmtrRHR0MEFsU2pRT3g1cXZGWWgxVXZpT2pOZFJJNFdrWU9OU3crdnVhdmN4K2ZCNk81SkRITm1NaE15U0tUbm1ScVRreWhqcmNoN3phRklXVVNWN2hzQnV4cHFtcldEb0xXZFhiVjNlRkgzbUlOQTVBb0lZL20wYlp0elo3WU5naUZXenhRZ2VrcHhkMHZjVHNlTW5DY1huc0FsY3RkaXIwRm9DWnp0eE11WmpsQmp3TFR0TTZSeTMvNDhMTU04WitsdzdOTWNpS0xMVEdReVU4WG1LS1NTT2gwZEdoNUxybHQ1R3hJSUprSDgxQzBZaW1XZWJ6ODQ2NFFQTDNSYkxuVEtnK2M9PC9kczpYNTA5Q2VydGlmaWNhdGU+PC9kczpYNTA5RGF0YT48L2RzOktleUluZm8+PC9kczpTaWduYXR1cmU+DQoNCiAgICA8c2FtbHA6U3RhdHVzPjxzYW1scDpTdGF0dXNDb2RlIFZhbHVlPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6c3RhdHVzOlN1Y2Nlc3MiLz48L3NhbWxwOlN0YXR1cz4NCiAgICA8c2FtbDpBc3NlcnRpb24gSUQ9Il9kMGE1Mzc1ZC0yOTBmLTRjZTAtODFlZC01ZjRiZDcyNWRlMzAiIElzc3VlSW5zdGFudD0iMjAyNC0wNy0xN1QyMDo1MDo0NFoiIFZlcnNpb249IjIuMCIgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4NCiAgICAgICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij5odHRwczovL2xvY2FsaG9zdDo4NDQzPC9zYW1sOklzc3Vlcj4NCiAgICAgICAgPHNhbWw6U3ViamVjdD4NCiAgICAgICAgICAgIDxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIgTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly9sb2NhbGhvc3Q6ODQ0MyI+DQogICAgICAgICAgICAgICAgICAgIF80ZDBhZmM4Zi1iODVmLTQyZTAtYWU5OS01MDZkMzg3ZGI1YzUNCiAgICAgICAgICAgIDwvc2FtbDpOYW1lSUQ+DQogICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uIE1ldGhvZD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmNtOmJlYXJlciI+DQogICAgICAgICAgICAgICAgPHNhbWw6U3ViamVjdENvbmZpcm1hdGlvbkRhdGEgSW5SZXNwb25zZVRvPSJfNTIyZGZhNjE1MGI0MmMyZGQwNGVhNzQ2Y2JhM2FkOWMiIE5vdE9uT3JBZnRlcj0iMjAyNC0wNy0xN1QyMDo1MjozMFoiIFJlY2lwaWVudD0iaHR0cDovL2xvY2FsaG9zdDo4MDgwL3NhbWwvYWNzIi8+DQogICAgICAgICAgICA8L3NhbWw6U3ViamVjdENvbmZpcm1hdGlvbj4NCiAgICAgICAgPC9zYW1sOlN1YmplY3Q+DQogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTA3LTE3VDIwOjUwOjQ0WiIgTm90T25PckFmdGVyPSIyMDI0LTA3LTE3VDIwOjUyOjMwWiI+DQogICAgICAgICAgICA8c2FtbDpBdWRpZW5jZVJlc3RyaWN0aW9uPg0KICAgICAgICAgICAgICAgIDxzYW1sOkF1ZGllbmNlPmh0dHA6Ly9sb2NhbGhvc3Q6ODA4MDwvc2FtbDpBdWRpZW5jZT4NCiAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZVJlc3RyaWN0aW9uPg0KICAgICAgICA8L3NhbWw6Q29uZGl0aW9ucz4gDQogICAgICAgIDxzYW1sOkF1dGhuU3RhdGVtZW50IEF1dGhuSW5zdGFudD0iMjAyNC0wNy0xN1QyMDo1MDo0NFoiIFNlc3Npb25JbmRleD0iXzU3ZmQ1MjgxLWIzMzAtNDgzZS04MmYwLTZkNjkxNzYyNTViNiI+DQogICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHQ+DQogICAgICAgICAgICAgICAgPHNhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWY+aHR0cHM6Ly93d3cuc3BpZC5nb3YuaXQvU3BpZEwyPC9zYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPg0KICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4NCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50Pg0KICAgICAgICA8c2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJkYXRlT2ZCaXJ0aCIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDpiYXNpYyI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpkYXRlIj4yMDAwLTAxLTAxPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+VElOSVQtR0RBU0RWMDBBMDFINTAxSjwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlU3RhdGVtZW50Pg0KICAgIDwvc2FtbDpBc3NlcnRpb24+DQo8L3NhbWxwOlJlc3BvbnNlPg==";
  public static final String INVALID_SIGNATURE_SAML_RESPONSE_04 = "";
  public static final String NOT_SPECIFIED_ID_SAML_RESPONSE_08 = "";
  public static final String NOT_PRESENT_ID_SAML_RESPONSE_09 = "";
  public static final String VERSION_NOT_02_SAML_RESPONSE_10 = "";
  public static final String ISSUE_INSTANT_NOT_SPECIFIED_SAML_RESPONSE_11 = "";
  public static final String ISSUE_INSTANT_MISSING_SAML_RESPONSE_12 = "";
  public static final String ISSUE_INSTANT_BEFORE_REQUEST_SAML_RESPONSE_14 = "";
  public static final String ISSUE_INSTANT_AFTER_REQUEST_SAML_RESPONSE_15 = "";
  public static final String RESPONSE_IN_RESPONSE_TO_NOT_SPECIFIED_SAML_RESPONSE_16 = "";
  public static final String RESPONSE_IN_RESPONSE_TO_MISSING_SAML_RESPONSE_17 = "";
  public static final String DESTINATION_NOT_SPECIFIED_SAML_RESPONSE_19 = "";
  public static final String MISSING_DESTINATION_SAML_RESPONSE_20 = "";
  public static final String DESTINATION_DIFFERENT_FROM_ACS_SAML_RESPONSE_21 = "";
  public static final String NOT_SPECIFIED_STATUS_SAML_RESPONSE_22 = "";
  public static final String MISSING_STATUS_SAML_RESPONSE_23 = "";
  public static final String NOT_SPECIFIED_STATUS_CODE_SAML_RESPONSE_24 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfYWM4ZWQ4YmMtOGY4MC00YmM5LWJkZTktZTk2NzhlMmJjNmZmIiBJblJlc3BvbnNlVG89Il8wYWZmNjMyNTA5MjFjY2UzZTllZGJmYzY2MDBmMjY5YyIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDA4OjExOjMxWiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfYWM4ZWQ4YmMtOGY4MC00YmM5LWJkZTktZTk2NzhlMmJjNmZmIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBScTJHZk96dWdmYUNmQjhhczJGeE1XZFRqVCtYWUFVcm5BVkgvKzVjQmwwPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgbEVoWldKM1o4cEhzVXI4MmlHUXE4UmNZTkZPN3FhY0QxR0Vvdm9hVkxIbnBiZTdaa0c3M1ZQcUNFbXVlZHYzNWxsbnNUMlEwczR0WGhaWjlHdDJoQUpueTR1OTdsbDhlbmExQmNOQ1Y3RERnY2VWaWU4bm9ZN0ZNeTd5SXN3YUYrTDExbHJSYjJ5cmk0YUx5RjBTNTV0eWxxczBzWlYvVStUWGhGOTh5alRmdDVTdmtITG9lZXNCL0lSVzkxS3BmekJCajh3R3RCbi9BS1RsazF5TVR5SEVCNlh4SmNBc3JTc3RkNUE2d2NZL0RsVXJxbjZzdjVXK041MC8vUHJPQXJRRGRvY0lKRFd3RUNjMmhPZnk4Ukh3aUN5TGZPK1FGUzluQmI4dFpubkJTdjM4NWV5S3VaUWRudW5MK2ltMzJwUGgyS09RdEQ4SllPOHJweUZuWGt3PT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9IiIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKICAgIAogICAgPHNhbWw6QXNzZXJ0aW9uIElEPSJfYWM5NzQxZWQtYzU5Zi00ZjM5LTliMDktYTkzNjhkNGU3ZDdiIiBJc3N1ZUluc3RhbnQ9IjIwMjQtMTAtMTFUMDg6MTE6MzFaIiBWZXJzaW9uPSIyLjAiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij4KICAgICAgICAgICAgaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgIDwvc2FtbDpJc3N1ZXI+CiAgICAgICAgPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgICAgIDxkczpTaWduZWRJbmZvPgogICAgICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICA8ZHM6UmVmZXJlbmNlIFVSST0iI19hYzk3NDFlZC1jNTlmLTRmMzktOWIwOS1hOTM2OGQ0ZTdkN2IiPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICAgICAgPGRzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAvYkdCVEZIeUxlaTdEYTh1MmFVdnl6bEhZSmVycU1xSnFSejg2TWJrSnZRPQogICAgICAgICAgICAgICAgICAgIDwvZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICA8L2RzOlJlZmVyZW5jZT4KICAgICAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgICAgICA8ZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgICAgICBkamlpbVFxc00wUkpzbWdoVXJDMVNMYm9LOFROTGdOWG1JUTY5TVVXTXN4bklxRnUxeGxQdGFMYkk4TUNQYmRxOTRIZVgzZDI3d1hFeVhLbVM0UGI0d1F3c2lrcU02ditlQllXQVlQSWRRNTZBZVpheCtlTHptZXFPMGUzSUtMWEpYVnFWZEtZWU9OV2wxT2k0VGZwbCt6RzZvc3lrZUxjMC9EQmRsb1d2SHZIWHNqeVlFbGhVN2pnU3dBQytFT3ZPcXdzN01IQlNUUi9pcmFGR3B4dzMrd3Z5Ti9HTkxCdy9MNk4yeTBhRHhZMmlHWGN6RHNaVTc3VEhvN09CN0RidndidTB3SzEweStIY3ZWR2JYOTJEeUhEU3lpR3Vla0Jwc2dlNTZaUFRYaUkrQnVRSXMzTHo2eXdBeWg2Y1pxU1JkUUYrdXMxbE55Y3RFYnU0VzhEUFE9PQogICAgICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgICAgICA8ZHM6S2V5SW5mbz4KICAgICAgICAgICAgICAgIDxkczpYNTA5RGF0YT4KICAgICAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgICAgICBNSUlFR0RDQ0F3Q2dBd0lCQWdJSkFPcllqOW9MRUpDd01BMEdDU3FHU0liM0RRRUJDd1VBTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQWVGdzB4T1RBME1URXhNREF5TURoYUZ3MHlOVEF6TURneE1EQXlNRGhhTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs4a0pWbyt1Z1JyYmJ2OXhoWEN1VnJxaTRCNy9NUXpRYzYyb2N3bEZGdWpKTmQ0bTFtWGtVSEZiZ3Z3aFJrUXFvMkRBbUZlSGl3Q2tKVDNLMWVlWElGaE5GRnJvRXpHUHpPTnlla0xwak52bVlJczFDRnZpckdPajBia0VpR2FLRXMrL3VtekdqeEloeTVKUWxxWEU5NnkxK0l6cDJRaEppbURLMC9LTmlqOEkxYnp4c2VQMFlnYzRTRnZlS1MrN1FPK1ByTHpXa2xFV0dNczRETTVaYzNWUks3ZzRMV1BXWmhLZEltQzFyblMrL2xFbUhTdkhpc2RWcC9ESnRiU3Jad1NZVFJ2VFR6NUlaRFNxNGtBenJEZnBqMTZoN2IzdDNuRkdjOFVvWTJSbzR0UlozYWhKMnIzYjc5eUs2QzVwaFk3Q0FBTnVXM2dEZGhWamlCTllzMENBd0VBQWFPQnlqQ0J4ekFkQmdOVkhRNEVGZ1FVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N3d2daY0dBMVVkSXdTQmp6Q0JqSUFVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N5aGFhUm5NR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZElJSkFPcllqOW9MRUpDd01Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpORnFYZy9WM2FpbUpLVW1VYXFtUUVFb1NjM3F2WEZJVHZUNWY1Ykt3OXlrL05WaFI2d25kTCt6LzI0aDFPZFJxczc2YmxnSDhrMTE2cVdOa2tEdHQwQWxTalFPeDVxdkZZaDFVdmlPak5kUkk0V2tZT05Tdyt2dWF2Y3grZkI2TzVKREhObU1oTXlTS1RubVJxVGt5aGpyY2g3emFGSVdVU1Y3aHNCdXhwcW1yV0RvTFdkWGJWM2VGSDNtSU5BNUFvSVkvbTBiWnR6WjdZTmdpRld6eFFnZWtweGQwdmNUc2VNbkNjWG5zQWxjdGRpcjBGb0NaenR4TXVaamxCandMVHRNNlJ5My80OExNTThaK2x3N05NY2lLTExUR1F5VThYbUtLU1NPaDBkR2g1THJsdDVHeElJSmtIODFDMFlpbVdlYno4NDY0UVBMM1JiTG5US2crYz0KICAgICAgICAgICAgICAgICAgICA8L2RzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgICAgIDwvZHM6S2V5SW5mbz4KICAgICAgICA8L2RzOlNpZ25hdHVyZT4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpTdWJqZWN0PgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIgTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdCI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBfZjQ4NzQ0NTMtMDY1MC00YTZkLWI4ODktNTYxZWQ5NzA1OGFhCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6TmFtZUlEPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBJblJlc3BvbnNlVG89Il8wYWZmNjMyNTA5MjFjY2UzZTllZGJmYzY2MDBmMjY5YyIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDA4OjExOjE1WiIgUmVjaXBpZW50PSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiLz4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOlN1YmplY3RDb25maXJtYXRpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpTdWJqZWN0PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTEwLTExVDA4OjExOjMxWiIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDA4OjExOjE1WiI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgICAgICBodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQKICAgICAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpDb25kaXRpb25zPgogICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpBdXRoblN0YXRlbWVudCBBdXRobkluc3RhbnQ9IjIwMjQtMTAtMTFUMDg6MTE6MzFaIiBTZXNzaW9uSW5kZXg9Il83MmQ0NWRmMS0wNTAyLTQyYTctYmQyMC0wZTBmMDBjOTQyY2YiPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgICAgICBodHRwczovL3d3dy5zcGlkLmdvdi5pdC9TcGlkTDIKICAgICAgICAgICAgICAgIDwvc2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0ic3BpZENvZGUiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgQUdJRC0wMDEKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPgogICAgICAgICAgICAgICAgICAgIFRJTklULUdEQVNEVjAwQTAxSDUwMUoKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAKICAgIAogICAgPC9zYW1sOkFzc2VydGlvbj4KICAgIAoKPC9zYW1scDpSZXNwb25zZT4=";
  public static final String MISSING_STATUS_CODE_SAML_RESPONSE_25 = "";
  public static final String STATUS_CODE_DIFFERENT_FROM_SUCCESS_SAML_RESPONSE_26 = "";
  public static final String NOT_SPECIFIED_ISSUER_ELEMENT_SAML_RESPONSE_27 = "";
  public static final String MISSING_ISSUER_ELEMENT_SAML_RESPONSE_28 = "";
  public static final String ISSUER_DIFFERENT_FROM_IDP_ENTITY_ID_SAML_RESPONSE_29 = "";
  public static final String DIFFERENT_FORMAT_ATTRIBUTE_SAML_RESPONSE_30 = "";
  public static final String MISSING_FORMAT_ATTRIBUTE_SAML_RESPONSE_31 = "";
  public static final String MISSING_ASSERTION_SAML_RESPONSE_32 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfYWJkNTY1YjAtNzg1YS00MmRhLTk2ZjYtZTM1YjcwNWI2ZWY4IiBJblJlc3BvbnNlVG89Il8wYWZmNjMyNTA5MjFjY2UzZTllZGJmYzY2MDBmMjY5YyIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDA4OjI3OjU0WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfYWJkNTY1YjAtNzg1YS00MmRhLTk2ZjYtZTM1YjcwNWI2ZWY4Ij4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICA0dVRSdC9OeGg3MElTek5RSzB3UDE2QUlnQTVYTm1wM3FVUDV4aXg5WFFVPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgbmhZL3JaaE5JSEtYYTVsVVhjTmtkR2pMRjBodWhqS1M5ay9NQlJMMnUvWEY5eDhKQXR2UEN1bjlZSVpYa1liSFBuUjdOYjhXcEdUdU1VZ2VhQ1R6WlVUMTlIOTFLaEkyc0pPUkV0blNlU1Z1clZVNGpLdE96VTlrdXdTQ1ViWXk3Q0p2a3ZrZm4rbzJBdTVGcUxObjliMENiRkp4Y3FtMUlpdVJuaThlQnBLU01YN1BUSkFsQVdXdHVKS1RTSHpkUGszRDZHSEFWSUhuLzMzRm10RmpCNW1SRFJSQ3JFN043d0FrMnk3RGwvb0R1UlZPdXV1SlRsTDNpTkZQOStZZjlhd2tISkVhOEdxM3B0NTl4REU5QUcwczlpYXl3dmxiQjhxQ3hIRTF2TXYrUXJPWmt1NFpCaTM2L3FsSUY5QXR6OWkwVWt1UENBL1BzY1pPbVUzM2pnPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKIAoKPC9zYW1scDpSZXNwb25zZT4=";
  public static final String NOT_SPECIFIED_ASSERTION_ID_ATTRIBUTE_SAML_RESPONSE_33 = "";
  public static final String MISSING_ASSERTION_ID_ATTRIBUTE_SAML_RESPONSE_34 = "";
  public static final String VERSION_ASSERTION_ATTRIBUTE_DIFFERENT_SAML_RESPONSE_35 = "";
  public static final String ISSUE_INSTANT_ASSERTION_NOT_SPECIFIED_SAML_RESPONSE_36 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfMTljMjI0MTEtYzQ3YS00ZGEzLWI5ZWMtZDg1YThkZjAwMDhkIiBJblJlc3BvbnNlVG89Il81YWQxNjY5ZGIzZDVmYzBhZTUyMjcwN2M0NzA4YWUyMiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTE1VDA3OjAxOjQyWiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfMTljMjI0MTEtYzQ3YS00ZGEzLWI5ZWMtZDg1YThkZjAwMDhkIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICA3WUo1MmM3N2E4WE9UcjhBOHF6UDJoNzRDVEtoazJWaGw3anM2aEVlUU5jPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgR0FIMW1kcGN1VXlPN08xR3pERTY2cldyankzVXpEbUZOTm83aFVTQmxIaEZ2dW9Ray9VbGgrM1JMTFZGVDhMa2NGNzFjSjhBMjFYRERHVkh6VXBncU52Q05KRUozS1BvcWVYd2RlUGg1TXFOc2NCejNLMmtSbjBrMW9BS3BkTUtFSFdIVkIySHV3SkhYOWprOGVmbnVQNzlkTzZYUE4waEViS3VOWUxVZXlpU20vYmFENmRKaHlPMDRJcE9XbW9sQlozcU1UN3JiUURpL2ZwUHNGSEU1SGN2QlAzRndqR2FCNEdFZnlCQVczeVNtVDRhTTR4b3VyL1l0bUc4clV1UE9manV4RXhvZjBTYzFlck5WbXozazBHNC9lY3k1MWZvVm9ZQVVOcHhMMVRZVEhaUkxHU05ZUVlzZFNKT3JOTGpsOUhNNWxzcjd1QUJVZythdlhFNW9nPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKICAgIAogICAgPHNhbWw6QXNzZXJ0aW9uIElEPSJfYmE1OTMxYmItMDc5MS00YTFkLTg4MTAtYjdmMWYyNGM1ZmEzIiBJc3N1ZUluc3RhbnQ9IiIgVmVyc2lvbj0iMi4wIiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOklzc3VlciBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OmVudGl0eSI+CiAgICAgICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgICAgICA8L3NhbWw6SXNzdWVyPgogICAgICAgIDxkczpTaWduYXR1cmUgeG1sbnM6ZHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPgogICAgICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgICAgIDxkczpDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+CiAgICAgICAgICAgICAgICA8ZHM6U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxkc2lnLW1vcmUjcnNhLXNoYTI1NiIvPgogICAgICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfYmE1OTMxYmItMDc5MS00YTFkLTg4MTAtYjdmMWYyNGM1ZmEzIj4KICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNlbnZlbG9wZWQtc2lnbmF0dXJlIi8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgICAgICA8L2RzOlRyYW5zZm9ybXM+CiAgICAgICAgICAgICAgICAgICAgPGRzOkRpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jI3NoYTI1NiIvPgogICAgICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgS3NHdHBrQ2l4NFFWSkhMcUU2bHpzY0VQZFJKWnppci9vT3BSR3QwUDUvUT0KICAgICAgICAgICAgICAgICAgICA8L2RzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgICAgIDwvZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgICAgICAgICAgRzN2QVdCSktXeTdKczViWG9UUStjd2kycXJqLzFUUVNQSDllRWNCenNISTRhbzJEN2F6OFJCVjdzaE5kREd6U05STmJmTC81Ym9BYll0NFpsZ21hYlpvanZuNENmbkxxaEpTQ3dvVFcrSi9udnM3UHM2ellkdkV5Unk1L1FIT0ZCN2pnQ0xZcm9tWkxrMHhIandQN3VVUlBpeVNGdjkrcnBiT0l2cWRZd2E1WGRTanB5aGt3MllSYVNUOHNzK2NkNEprR0Jtc04yZUtWdCs2TXk4amtTZXJ6SmU3VUowS1JSVERaZ053RDFZYXQyamdZRnBDVkVSSFFGWFhzbTMzS01KS1lwYzhhR1lUbWI5dThCUVR2N2FUaFhUV2lpb2MyTmdnUFpSMmVjUjlEVDBhVjFzamdXQjNuSzJ5aloxRkZGTHdTL24vV3dmVGwyRVM3cUgyTnhBPT0KICAgICAgICAgICAgPC9kczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgPGRzOktleUluZm8+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICAgICAgPGRzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgTUlJRUdEQ0NBd0NnQXdJQkFnSUpBT3JZajlvTEVKQ3dNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkREFlRncweE9UQTBNVEV4TURBeU1EaGFGdzB5TlRBek1EZ3hNREF5TURoYU1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLOGtKVm8rdWdScmJidjl4aFhDdVZycWk0QjcvTVF6UWM2Mm9jd2xGRnVqSk5kNG0xbVhrVUhGYmd2d2hSa1FxbzJEQW1GZUhpd0NrSlQzSzFlZVhJRmhORkZyb0V6R1B6T055ZWtMcGpOdm1ZSXMxQ0Z2aXJHT2owYmtFaUdhS0VzKy91bXpHanhJaHk1SlFscVhFOTZ5MStJenAyUWhKaW1ESzAvS05pajhJMWJ6eHNlUDBZZ2M0U0Z2ZUtTKzdRTytQckx6V2tsRVdHTXM0RE01WmMzVlJLN2c0TFdQV1poS2RJbUMxcm5TKy9sRW1IU3ZIaXNkVnAvREp0YlNyWndTWVRSdlRUejVJWkRTcTRrQXpyRGZwajE2aDdiM3QzbkZHYzhVb1kyUm80dFJaM2FoSjJyM2I3OXlLNkM1cGhZN0NBQU51VzNnRGRoVmppQk5ZczBDQXdFQUFhT0J5akNCeHpBZEJnTlZIUTRFRmdRVTMvN2tWMnRiZEZ0cGhiU0E0TEg3K3c4U2tjd3dnWmNHQTFVZEl3U0JqekNCaklBVTMvN2tWMnRiZEZ0cGhiU0E0TEg3K3c4U2tjeWhhYVJuTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGRJSUpBT3JZajlvTEVKQ3dNQXdHQTFVZEV3UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKTkZxWGcvVjNhaW1KS1VtVWFxbVFFRW9TYzNxdlhGSVR2VDVmNWJLdzl5ay9OVmhSNnduZEwrei8yNGgxT2RScXM3NmJsZ0g4azExNnFXTmtrRHR0MEFsU2pRT3g1cXZGWWgxVXZpT2pOZFJJNFdrWU9OU3crdnVhdmN4K2ZCNk81SkRITm1NaE15U0tUbm1ScVRreWhqcmNoN3phRklXVVNWN2hzQnV4cHFtcldEb0xXZFhiVjNlRkgzbUlOQTVBb0lZL20wYlp0elo3WU5naUZXenhRZ2VrcHhkMHZjVHNlTW5DY1huc0FsY3RkaXIwRm9DWnp0eE11WmpsQmp3TFR0TTZSeTMvNDhMTU04WitsdzdOTWNpS0xMVEdReVU4WG1LS1NTT2gwZEdoNUxybHQ1R3hJSUprSDgxQzBZaW1XZWJ6ODQ2NFFQTDNSYkxuVEtnK2M9CiAgICAgICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgICAgICA8L2RzOlg1MDlEYXRhPgogICAgICAgICAgICA8L2RzOktleUluZm8+CiAgICAgICAgPC9kczpTaWduYXR1cmU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6U3ViamVjdD4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpOYW1lSUQgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDp0cmFuc2llbnQiIE5hbWVRdWFsaWZpZXI9Imh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgX2VhYjBjZmQ2LWRjMmMtNGY5NS1hZjZiLTBhOTdkMmU5ZTI0YwogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOk5hbWVJRD4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uIE1ldGhvZD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmNtOmJlYXJlciI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHNhbWw6U3ViamVjdENvbmZpcm1hdGlvbkRhdGEgSW5SZXNwb25zZVRvPSJfNWFkMTY2OWRiM2Q1ZmMwYWU1MjI3MDdjNDcwOGFlMjIiIE5vdE9uT3JBZnRlcj0iMjAyNC0xMC0xNVQwNzowNjoyOFoiIFJlY2lwaWVudD0iaHR0cHM6Ly9kZXYub25laWQucGFnb3BhLml0L3NhbWwvYWNzIi8+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWw6U3ViamVjdD4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpDb25kaXRpb25zIE5vdEJlZm9yZT0iMjAyNC0xMC0xNVQwNzowMTo0MloiIE5vdE9uT3JBZnRlcj0iMjAyNC0xMC0xNVQwNzowNjoyOFoiPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2U+CiAgICAgICAgICAgICAgICAgICAgaHR0cHM6Ly9kZXYub25laWQucGFnb3BhLml0CiAgICAgICAgICAgICAgICA8L3NhbWw6QXVkaWVuY2U+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZVJlc3RyaWN0aW9uPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWw6Q29uZGl0aW9ucz4KICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6QXV0aG5TdGF0ZW1lbnQgQXV0aG5JbnN0YW50PSIyMDI0LTEwLTE1VDA3OjAxOjQyWiIgU2Vzc2lvbkluZGV4PSJfY2YwNzk3MGQtZDg0Yy00Y2NmLWJhNjgtN2QwYjBlZTI0NjhjIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHQ+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHNhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWY+CiAgICAgICAgICAgICAgICAgICAgaHR0cHM6Ly93d3cuc3BpZC5nb3YuaXQvU3BpZEwyCiAgICAgICAgICAgICAgICA8L3NhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpBdXRobkNvbnRleHQ+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpBdXRoblN0YXRlbWVudD4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXR0cmlidXRlIE5hbWU9InNwaWRDb2RlIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPgogICAgICAgICAgICAgICAgICAgIEFHSUQtMDAxCiAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlVmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXR0cmlidXRlIE5hbWU9ImZpc2NhbE51bWJlciIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDpiYXNpYyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHNhbWw6QXR0cmlidXRlVmFsdWUgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4c2k6dHlwZT0ieHM6c3RyaW5nIj4KICAgICAgICAgICAgICAgICAgICBUSU5JVC1HREFTRFYwMEEwMUg1MDFKCiAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlVmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+CiAgICAgICAgCiAgICAKICAgIDwvc2FtbDpBc3NlcnRpb24+CiAgICAKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String ISSUE_INSTANT_ASSERTION_MISSING_SAML_RESPONSE_37 = "";
  public static final String ISSUE_INSTANT_ASSERTION_UNCORRECT_FORMAT_SAML_RESPONSE_38 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfMzEwNWVkN2QtZWQxZi00YjA1LTg2YTMtNWVhZDAwYzI1N2M0IiBJblJlc3BvbnNlVG89Il8wYWZmNjMyNTA5MjFjY2UzZTllZGJmYzY2MDBmMjY5YyIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDA4OjQwOjA5WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfMzEwNWVkN2QtZWQxZi00YjA1LTg2YTMtNWVhZDAwYzI1N2M0Ij4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBsVlFCMTJ0NldXcWJtMjBhTnhEV1Q2SGVjcFdPYk0vZjduUUJTc3JNT3hFPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgRnVlU2FFbC9XRjZtNUpnTlpGWExSdVFNbkJGZUdYK2p4REw4dmJONFFUOXBweVV3NmVMZ3A4elBnUXhPSDlpbTZtREtldGY4SXdKOUdRUnFxc1oyYVpIeWYxUXVuT1BFRitYdlhaOHJhcnNjQ3RVNXluaWdxRWdLYnFLQSt5V0o2UE5tUzFsWjN0dG1YcXJxSXUvdTVVYlY4S0xkSUZMRXJXOFF5Nm9CejdlaUlxQ0V4aVBlMWoxVEtkRUVZS1B5bk5aT0ZCaVcvZkUrVE1UZnVPRDRwRHEyYzBaNEh5cUgvTzJnQllnYTgzUUpjWGYxR3Vsbjk1MTkrSWJHbVREekxWQTUxd3R1SGF5UmtNbmZ2NUNRQmpReHQ1MHRtSE1VbDRpd3ozamJMdW03YTBEOWNIdnNEeXFHZWR0MzEvcWVVSFNxZnBZZXFVMDJxL1VJc016M1ZnPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKICAgIAogICAgPHNhbWw6QXNzZXJ0aW9uIElEPSJfMmE5MDgyZDQtYjlhNi00MmUzLTkzY2EtNzQ5M2EwNDUzOTlkIiBJc3N1ZUluc3RhbnQ9IjIwMTgtMDktMDYgMTY6MDAiIFZlcnNpb249IjIuMCIgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgICAgICBodHRwczovL3ZhbGlkYXRvci5kZXYub25laWQucGFnb3BhLml0CiAgICAgICAgPC9zYW1sOklzc3Vlcj4KICAgICAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICAgICAgPGRzOlNpZ25lZEluZm8+CiAgICAgICAgICAgICAgICA8ZHM6Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpSZWZlcmVuY2UgVVJJPSIjXzJhOTA4MmQ0LWI5YTYtNDJlMy05M2NhLTc0OTNhMDQ1Mzk5ZCI+CiAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybXM+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+CiAgICAgICAgICAgICAgICAgICAgPC9kczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgIDBKS0grRUMzNklrUkNodXdVL3RJUWVJcXN3Q3R6ckdYYUhOWU5OUUxCazA9CiAgICAgICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgIDwvZHM6UmVmZXJlbmNlPgogICAgICAgICAgICA8L2RzOlNpZ25lZEluZm8+CiAgICAgICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgICAgIGY5cnpzZmU0TG5hYVBuK2xIRTJCdjJCZHJMWEs4UTM5Ymk3TjN1bXAxdCtsVmFqaXloUlpCZDRBMDBSV0UzdXEyUDNha1Y0OUdabnRzdkNRZkVYaFdFZHZ4QUY4ZFVrTE82V3QxZnEvZkt3MHJvTGtBUTN3NytPeUVLUS9VeHNCN2I2eHYwS3BSd2ZUaEJYRlEzejVUYnJMWWhqb3hTTlNXbGdDZ3hUTTNBNm0zL1gwejA0a0xTVXduV1dycG9MWk9qeSs0RXlSMjZFMFZ3T05lbExlZjZ2SUdBUUQ0cjA4MWpBK25nN1lFdmJOUDhmbGxpVk1GTHJRdXEyejFNQkpoSGxtSzkrUnUxaTlyZG02NW51a09DVThzQk1XY2RKOVp3SWhPKzFtUm5zLzlXb1RKV0JRb1hpN24wcy8zbTlpWVZPenlvbUZuU3g2N2xvM3VzQmNLZz09CiAgICAgICAgICAgIDwvZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICAgICAgPGRzOlg1MDlEYXRhPgogICAgICAgICAgICAgICAgICAgIDxkczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgICAgIDwvZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgPC9kczpYNTA5RGF0YT4KICAgICAgICAgICAgPC9kczpLZXlJbmZvPgogICAgICAgIDwvZHM6U2lnbmF0dXJlPgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOlN1YmplY3Q+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6TmFtZUlEIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6dHJhbnNpZW50IiBOYW1lUXVhbGlmaWVyPSJodHRwczovL3ZhbGlkYXRvci5kZXYub25laWQucGFnb3BhLml0Ij4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIF8xODIzNjMzOC0wODYxLTQzNGYtYWI2Yi1hZjI0ZTk1YjRhZTMKICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpOYW1lSUQ+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6U3ViamVjdENvbmZpcm1hdGlvbiBNZXRob2Q9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpjbTpiZWFyZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb25EYXRhIEluUmVzcG9uc2VUbz0iXzBhZmY2MzI1MDkyMWNjZTNlOWVkYmZjNjYwMGYyNjljIiBOb3RPbk9yQWZ0ZXI9IjIwMjQtMTAtMTFUMDg6MTE6MTVaIiBSZWNpcGllbnQ9Imh0dHBzOi8vZGV2Lm9uZWlkLnBhZ29wYS5pdC9zYW1sL2FjcyIvPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6U3ViamVjdENvbmZpcm1hdGlvbj4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOlN1YmplY3Q+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6Q29uZGl0aW9ucyBOb3RCZWZvcmU9IjIwMjQtMTAtMTFUMDg6NDA6MDlaIiBOb3RPbk9yQWZ0ZXI9IjIwMjQtMTAtMTFUMDg6MTE6MTVaIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdWRpZW5jZVJlc3RyaWN0aW9uPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF1ZGllbmNlPgogICAgICAgICAgICAgICAgICAgIGh0dHBzOi8vZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkNvbmRpdGlvbnM+CiAgICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF1dGhuU3RhdGVtZW50IEF1dGhuSW5zdGFudD0iMjAyNC0xMC0xMVQwODo0MDowOVoiIFNlc3Npb25JbmRleD0iXzE0Y2M0Y2U2LTZmMzQtNDJlMy1iOWM3LTIzODYyYjE0NzQxOCI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXV0aG5Db250ZXh0PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPgogICAgICAgICAgICAgICAgICAgIGh0dHBzOi8vd3d3LnNwaWQuZ292Lml0L1NwaWRMMgogICAgICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXV0aG5Db250ZXh0PgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWw6QXV0aG5TdGF0ZW1lbnQ+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6QXR0cmlidXRlU3RhdGVtZW50PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJzcGlkQ29kZSIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDpiYXNpYyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHNhbWw6QXR0cmlidXRlVmFsdWUgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4c2k6dHlwZT0ieHM6c3RyaW5nIj4KICAgICAgICAgICAgICAgICAgICBBR0lELTAwMQogICAgICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJmaXNjYWxOdW1iZXIiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgVElOSVQtR0RBU0RWMDBBMDFINTAxSgogICAgICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L3NhbWw6QXR0cmlidXRlU3RhdGVtZW50PgogICAgICAgIAogICAgCiAgICA8L3NhbWw6QXNzZXJ0aW9uPgogICAgCgo8L3NhbWxwOlJlc3BvbnNlPg==";
  public static final String ISSUE_INSTANT_ASSERTION_BEFORE_REQUEST_INSTANT_SAML_RESPONSE_39 = "";
  public static final String ISSUE_INSTANT_ASSERTION_AFTER_REQUEST_INSTANT_SAML_RESPONSE_40 = "";
  public static final String SUBJECT_ELEMENT_ASSERTION_NOT_SPECIFIED_SAML_RESPONSE_41 = "";
  public static final String SUBJECT_ELEMENT_ASSERTION_MISSING_SAML_RESPONSE_42 = "";
  public static final String SUBJECT_NAME_ID_ASSERTION_NOT_SPECIFIED_SAML_RESPONSE_43 = "";
  public static final String SUBJECT_NAME_ID_ASSERTION_MISSING_SAML_RESPONSE_44 = "";
  public static final String SUBJECT_NAME_ID_ASSERTION_FORMAT_NOT_SPECIFIED_SAML_RESPONSE_45 = "";
  public static final String SUBJECT_NAME_ID_ASSERTION_FORMAT_MISSING_SAML_RESPONSE_46 = "";
  public static final String SUBJECT_NAME_ID_ASSERTION_FORMAT_DIFFERENT_SAML_RESPONSE_47 = "";
  public static final String SUBJECT_NAME_ID_ASSERTION_NAME_QUALIFIER_NOT_SPECIFIED_SAML_RESPONSE_48 = "";
  public static final String SUBJECT_NAME_ID_ASSERTION_NAME_QUALIFIER_MISSING_SAML_RESPONSE_49 = "";
  public static final String SUBJECT_CONFIRMATION_ASSERTION_NOT_SPECIFIED_SAML_RESPONSE_51 = "";
  public static final String SUBJECT_CONFIRMATION_ASSERTION_MISSING_SAML_RESPONSE_52 = "";
  public static final String SUBJECT_CONFIRMATION_ASSERTION_METHOD_NOT_SPECIFIED_SAML_RESPONSE_53 = "";
  public static final String SUBJECT_CONFIRMATION_ASSERTION_METHOD_MISSING_SAML_RESPONSE_54 = "";
  public static final String SUBJECT_CONFIRMATION_ASSERTION_METHOD_DIFFERENT_SAML_RESPONSE_55 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_MISSING_SAML_RESPONSE_56 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_RECIPIENT_NOT_SPECIFIED_SAML_RESPONSE_57 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_RECIPIENT_MISSING_SAML_RESPONSE_58 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_RECIPIENT_DIFFERENT_SAML_RESPONSE_59 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_IN_RESPONSE_TO_NOT_SPECIFIED_SAML_RESPONSE_60 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_IN_RESPONSE_TO_MISSING_SAML_RESPONSE_61 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER_NOT_DEFINED_SAML_RESPONSE_63 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER_MISSING_SAML_RESPONSE_64 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER_BEFORE_RESPONSE_INSTANT_SAML_RESPONSE_66 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfMTYzZTE2OGQtNGQxNS00NmRiLTk5NzgtM2NmZDEzYzUyNmY3IiBJblJlc3BvbnNlVG89Il85NWMyYmE1ZDE4NzJhMDljN2RmNzQwYTg3MTg3YjlkYyIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDEyOjM0OjQyWiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfMTYzZTE2OGQtNGQxNS00NmRiLTk5NzgtM2NmZDEzYzUyNmY3Ij4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICB0WjEvT0lOOHUxLzZidkF6eGZtU1VkMTJPbGU4NEN4alYySTQxejA4cFFZPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgQU5QUDBHVFlUaW0wTWF4UVV1dXhvZDlhWEtad1hjRUwwbnJ5TVFDQklhMTQ4SWl3QjZpeTkwd2hMWTRhcFlnN0RaRWJDSElGVkQ0b2pHeG1IdTVGVU9HZUZzNkNoT2VpZmY4Q0JNcDFmM2t2QkhJdkJ1cTVTeWpSb0xOcGdHZ0F1bVAwaFVTTDliSVd0dEU5b0Q3UjhobUVuK0Fwb2tsV1pieFlsSm9GbnF0TURYVEo5Q3YrWXNWR3AxeG1MMks1VXNGMU1aSkdibWl6aTRWbHRxZEpkTlVWV3B4VXA1dyt2d2U0TXZlelhJbmoyemFYT1pqeGh2MS9qTkJpdXRrNVN4aWVrUS9vYmhEZTkvanBRMGR0RHR6czlPdjFqR2ZSdml0MHZjS3ZObi9tUEIwczFhUmF1RFEvMTYyRmlTUk9Wa1NaUDdaYUFJSGZrMFdENnFkODFBPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKICAgIAogICAgPHNhbWw6QXNzZXJ0aW9uIElEPSJfYzE4ZTI1ODAtNmQ5Zi00MTdiLWEyMDgtZjIzYWJhYTc4YjMyIiBJc3N1ZUluc3RhbnQ9IjIwMjQtMTAtMTFUMTI6MzQ6NDJaIiBWZXJzaW9uPSIyLjAiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij4KICAgICAgICAgICAgaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgIDwvc2FtbDpJc3N1ZXI+CiAgICAgICAgPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgICAgIDxkczpTaWduZWRJbmZvPgogICAgICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICA8ZHM6UmVmZXJlbmNlIFVSST0iI19jMThlMjU4MC02ZDlmLTQxN2ItYTIwOC1mMjNhYmFhNzhiMzIiPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICAgICAgPGRzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICBaRGNtN2hqUTlCc3o5bnpoLzd3dkRWbnk0SnNZREZURm5zWDJ5b1RCc2c4PQogICAgICAgICAgICAgICAgICAgIDwvZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICA8L2RzOlJlZmVyZW5jZT4KICAgICAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgICAgICA8ZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgICAgICBTaFRzOStoZDlvVnN2ZUoyMWhzU3k0bC92WGlkNXpaK1d1R1ZvRUlaYVA2ZXdhdDNkWndSdVpnV1dzNkFBV3V6NU5IMTMxbG5DR01RaVN5Wm84YzRWeHJHTU5oUTAzZzB6aHp2YTBVK2s3alVqN210Q0g0a3VBelQwekVDc1VUcitmMjJvWkRveUFYc200NzFTUVhNTDVIMWR2S2dNNkV3QTNWVHQrUHAyaHVGOG0xcW5PckIzNCtrZzdleFlEOWJUZlVLY3p1SnlBMUJVZFVMUkFWK3A0RGkvM3l5WkJ5WnpVZ3p5dXc1Z2FPN2prTTJRK01VWXoyUThqNkxndGxNd0h3Q0hnMjB1ZmNteUdWZnF1djBhWENSYjVDQitPaEVZWlpRL1RyR0U1MllzVXo3dm94RGFsZmI4WGV3OTZKSEUyTDVPU3hRRDNBSG1QU0x1c2xSSFE9PQogICAgICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgICAgICA8ZHM6S2V5SW5mbz4KICAgICAgICAgICAgICAgIDxkczpYNTA5RGF0YT4KICAgICAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgICAgICBNSUlFR0RDQ0F3Q2dBd0lCQWdJSkFPcllqOW9MRUpDd01BMEdDU3FHU0liM0RRRUJDd1VBTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQWVGdzB4T1RBME1URXhNREF5TURoYUZ3MHlOVEF6TURneE1EQXlNRGhhTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs4a0pWbyt1Z1JyYmJ2OXhoWEN1VnJxaTRCNy9NUXpRYzYyb2N3bEZGdWpKTmQ0bTFtWGtVSEZiZ3Z3aFJrUXFvMkRBbUZlSGl3Q2tKVDNLMWVlWElGaE5GRnJvRXpHUHpPTnlla0xwak52bVlJczFDRnZpckdPajBia0VpR2FLRXMrL3VtekdqeEloeTVKUWxxWEU5NnkxK0l6cDJRaEppbURLMC9LTmlqOEkxYnp4c2VQMFlnYzRTRnZlS1MrN1FPK1ByTHpXa2xFV0dNczRETTVaYzNWUks3ZzRMV1BXWmhLZEltQzFyblMrL2xFbUhTdkhpc2RWcC9ESnRiU3Jad1NZVFJ2VFR6NUlaRFNxNGtBenJEZnBqMTZoN2IzdDNuRkdjOFVvWTJSbzR0UlozYWhKMnIzYjc5eUs2QzVwaFk3Q0FBTnVXM2dEZGhWamlCTllzMENBd0VBQWFPQnlqQ0J4ekFkQmdOVkhRNEVGZ1FVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N3d2daY0dBMVVkSXdTQmp6Q0JqSUFVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N5aGFhUm5NR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZElJSkFPcllqOW9MRUpDd01Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpORnFYZy9WM2FpbUpLVW1VYXFtUUVFb1NjM3F2WEZJVHZUNWY1Ykt3OXlrL05WaFI2d25kTCt6LzI0aDFPZFJxczc2YmxnSDhrMTE2cVdOa2tEdHQwQWxTalFPeDVxdkZZaDFVdmlPak5kUkk0V2tZT05Tdyt2dWF2Y3grZkI2TzVKREhObU1oTXlTS1RubVJxVGt5aGpyY2g3emFGSVdVU1Y3aHNCdXhwcW1yV0RvTFdkWGJWM2VGSDNtSU5BNUFvSVkvbTBiWnR6WjdZTmdpRld6eFFnZWtweGQwdmNUc2VNbkNjWG5zQWxjdGRpcjBGb0NaenR4TXVaamxCandMVHRNNlJ5My80OExNTThaK2x3N05NY2lLTExUR1F5VThYbUtLU1NPaDBkR2g1THJsdDVHeElJSmtIODFDMFlpbVdlYno4NDY0UVBMM1JiTG5US2crYz0KICAgICAgICAgICAgICAgICAgICA8L2RzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgICAgIDwvZHM6S2V5SW5mbz4KICAgICAgICA8L2RzOlNpZ25hdHVyZT4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpTdWJqZWN0PgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIgTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdCI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBfMmQ3YjAzYTUtOTI4OS00NGQ1LWI0NGYtYTg3NzMzYjE0NTM0CiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6TmFtZUlEPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBJblJlc3BvbnNlVG89Il85NWMyYmE1ZDE4NzJhMDljN2RmNzQwYTg3MTg3YjlkYyIgTm90T25PckFmdGVyPSIyMDAwLTAxLTAxVDAwOjAwOjAwWiIgUmVjaXBpZW50PSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiLz4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOlN1YmplY3RDb25maXJtYXRpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpTdWJqZWN0PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTEwLTExVDEyOjM0OjQyWiIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDEyOjE4OjE0WiI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgICAgICBodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQKICAgICAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpDb25kaXRpb25zPgogICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpBdXRoblN0YXRlbWVudCBBdXRobkluc3RhbnQ9IjIwMjQtMTAtMTFUMTI6MzQ6NDJaIiBTZXNzaW9uSW5kZXg9Il82YjgyYWUwZC03NGQ1LTRjZWYtYTI0Mi1kMmQ2MzM1OTY0ZjIiPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgICAgICBodHRwczovL3d3dy5zcGlkLmdvdi5pdC9TcGlkTDIKICAgICAgICAgICAgICAgIDwvc2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0ic3BpZENvZGUiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgQUdJRC0wMDEKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPgogICAgICAgICAgICAgICAgICAgIFRJTklULUdEQVNEVjAwQTAxSDUwMUoKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAKICAgIAogICAgPC9zYW1sOkFzc2VydGlvbj4KICAgIAoKPC9zYW1scDpSZXNwb25zZT4=";
  public static final String ISSUER_ASSERTION_NOT_SPECIFIED_SAML_RESPONSE_67 = "";
  public static final String ISSUER_ASSERTION_MISSING_SAML_RESPONSE_68 = "";
  public static final String ISSUER_ASSERTION_DIFFERENT_SAML_RESPONSE_69 = "";
  public static final String ISSUER_ASSERTION_FORMAT_ATTRIBUTE_NOT_SPECIFIED_SAML_RESPONSE_70 = "";
  public static final String ISSUER_ASSERTION_FORMAT_ATTRIBUTE_MISSING_SAML_RESPONSE_71 = "";
  public static final String ISSUER_ASSERTION_FORMAT_ATTRIBUTE_DIFFERENT_SAML_RESPONSE_72 = "";
  public static final String CONDITIONS_ELEMENT_NOT_SPECIFIED_SAML_RESPONSE_73 = "";
  public static final String CONDITIONS_ELEMENT_MISSING_SAML_RESPONSE_74 = "";
  public static final String CONDITIONS_ELEMENT_NOT_BEFORE_NOT_SPECIFIED_SAML_RESPONSE_75 = "";
  public static final String CONDITIONS_ELEMENT_NOT_BEFORE_MISSING_SAML_RESPONSE_76 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfNTgxNzNmNGYtOWI1Ny00MjZjLTk2MzItNzQzM2E2NGYxMWY2IiBJblJlc3BvbnNlVG89Il82NWMyZDA2MDBjODA3ODlhOGU4ZjhiNjE5ZGZjMWRhZCIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTE1VDA3OjE5OjM3WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfNTgxNzNmNGYtOWI1Ny00MjZjLTk2MzItNzQzM2E2NGYxMWY2Ij4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBOVkt5MjcrNHcxbDAyV1hGRyt4WGdZcEY4WS81L2RQdWVzK0kwWVRHQVMwPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgcWhjSUZmdEdDMElhdm1QR1NxbGkwb1pERnNHMGNwdnNXRGdzOVQ0aDM1OGg3ZlMzYVZNVlVUbk5SckxTVXpoaWZ0byt6TTFtbXZHdU4yWjgzWHkybVhSajBhTzhQL2JHN1VwUWkxTDVHeC8wVWs1SGF0TURITklzc0JDaVQ1NVJWUUZoVStpeVRGT0wyR3A0b09JbkVlUVB5TVcvOXJoSjZVYXZ6bWI0MUJrMlAzYWFmUjYwR05maFpSSlN6L2s3SFhyN0NKVFpsTHZBNjhoTm5EU2pCa3R3akhiZDJLbjUraWZaZW94aTJmYlMyKy9OMm5kVjg1aDR1UzhpaWJjbEpGWGdmYVlFQndIclEvdzBBZlhqQUdld0xXTStyNUZiMHpiSks4RGVuNncvY1JOTGFmeDB4NnRGVlZnT0dEUjJnRis3TGVGNFBXd012NnlLNkZ4cGpRPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKICAgIAogICAgPHNhbWw6QXNzZXJ0aW9uIElEPSJfOGZjNzZhMDktYjAwMC00NDliLTk4N2MtNWM1ZjJiY2E1NDY5IiBJc3N1ZUluc3RhbnQ9IjIwMjQtMTAtMTVUMDc6MTk6MzdaIiBWZXJzaW9uPSIyLjAiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij4KICAgICAgICAgICAgaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgIDwvc2FtbDpJc3N1ZXI+CiAgICAgICAgPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgICAgIDxkczpTaWduZWRJbmZvPgogICAgICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICA8ZHM6UmVmZXJlbmNlIFVSST0iI184ZmM3NmEwOS1iMDAwLTQ0OWItOTg3Yy01YzVmMmJjYTU0NjkiPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICAgICAgPGRzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICA1b3hhV3FQSGNQaEZnMDF2R0o3dFFqemp6NlJjMHRiNDZsek1DTmJMWTdrPQogICAgICAgICAgICAgICAgICAgIDwvZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICA8L2RzOlJlZmVyZW5jZT4KICAgICAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgICAgICA8ZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgICAgICBSOUVCcm45WEZNaTY5M3BGcmNYdlhiZk1kY3MyS2hTVjNBelZsSHcrSnJFOWRLK3NHZnFZeEVMVHB4cnFvSDZqR2pVdUYwOXU4TjlGUGk5S3NaMDF4SXdVZHo2cDVkWnJDdEpWQW0zeHQxbWtVMWwxWGV5T1RZc3dWb1RnSFlCeUpucEk3ck9UamN0eEZVN3UvY1lEZDE3RldXcTFvNithRGIvRWZLckFnc1VZZW5CZ1lBZjJhTVd0bDdzNEJQSFBKbzlSK2VvMHdGTUduRmMyb2EyZEtlTUtITzh1Um1ndUR1L3dZdDIzaDZXV3FJLzRvMk1Lem8rNGVSajFLNzV3TjNvTE9WSUxxVmtONTJ3ZUVyWkpZQzJ1VHpMcTdWYmJ1dFBQSHBtUHIzckw5Z2NCVzNWSnZYQTgwWW1zazUzcnc5K29LSTNjYjZzUndmS2V1SXhiYWc9PQogICAgICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgICAgICA8ZHM6S2V5SW5mbz4KICAgICAgICAgICAgICAgIDxkczpYNTA5RGF0YT4KICAgICAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgICAgICBNSUlFR0RDQ0F3Q2dBd0lCQWdJSkFPcllqOW9MRUpDd01BMEdDU3FHU0liM0RRRUJDd1VBTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQWVGdzB4T1RBME1URXhNREF5TURoYUZ3MHlOVEF6TURneE1EQXlNRGhhTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs4a0pWbyt1Z1JyYmJ2OXhoWEN1VnJxaTRCNy9NUXpRYzYyb2N3bEZGdWpKTmQ0bTFtWGtVSEZiZ3Z3aFJrUXFvMkRBbUZlSGl3Q2tKVDNLMWVlWElGaE5GRnJvRXpHUHpPTnlla0xwak52bVlJczFDRnZpckdPajBia0VpR2FLRXMrL3VtekdqeEloeTVKUWxxWEU5NnkxK0l6cDJRaEppbURLMC9LTmlqOEkxYnp4c2VQMFlnYzRTRnZlS1MrN1FPK1ByTHpXa2xFV0dNczRETTVaYzNWUks3ZzRMV1BXWmhLZEltQzFyblMrL2xFbUhTdkhpc2RWcC9ESnRiU3Jad1NZVFJ2VFR6NUlaRFNxNGtBenJEZnBqMTZoN2IzdDNuRkdjOFVvWTJSbzR0UlozYWhKMnIzYjc5eUs2QzVwaFk3Q0FBTnVXM2dEZGhWamlCTllzMENBd0VBQWFPQnlqQ0J4ekFkQmdOVkhRNEVGZ1FVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N3d2daY0dBMVVkSXdTQmp6Q0JqSUFVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N5aGFhUm5NR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZElJSkFPcllqOW9MRUpDd01Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpORnFYZy9WM2FpbUpLVW1VYXFtUUVFb1NjM3F2WEZJVHZUNWY1Ykt3OXlrL05WaFI2d25kTCt6LzI0aDFPZFJxczc2YmxnSDhrMTE2cVdOa2tEdHQwQWxTalFPeDVxdkZZaDFVdmlPak5kUkk0V2tZT05Tdyt2dWF2Y3grZkI2TzVKREhObU1oTXlTS1RubVJxVGt5aGpyY2g3emFGSVdVU1Y3aHNCdXhwcW1yV0RvTFdkWGJWM2VGSDNtSU5BNUFvSVkvbTBiWnR6WjdZTmdpRld6eFFnZWtweGQwdmNUc2VNbkNjWG5zQWxjdGRpcjBGb0NaenR4TXVaamxCandMVHRNNlJ5My80OExNTThaK2x3N05NY2lLTExUR1F5VThYbUtLU1NPaDBkR2g1THJsdDVHeElJSmtIODFDMFlpbVdlYno4NDY0UVBMM1JiTG5US2crYz0KICAgICAgICAgICAgICAgICAgICA8L2RzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgICAgIDwvZHM6S2V5SW5mbz4KICAgICAgICA8L2RzOlNpZ25hdHVyZT4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpTdWJqZWN0PgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIgTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdCI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBfODMzZWE2YjMtM2Q1NS00YmNiLTg3NDUtYmUwYzVkMTczNjJlCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6TmFtZUlEPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBJblJlc3BvbnNlVG89Il82NWMyZDA2MDBjODA3ODlhOGU4ZjhiNjE5ZGZjMWRhZCIgTm90T25PckFmdGVyPSIyMDI0LTEwLTE1VDA3OjIyOjIyWiIgUmVjaXBpZW50PSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiLz4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOlN1YmplY3RDb25maXJtYXRpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpTdWJqZWN0PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgTm90T25PckFmdGVyPSIyMDI0LTEwLTE1VDA3OjIyOjIyWiI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgICAgICBodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQKICAgICAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpDb25kaXRpb25zPgogICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpBdXRoblN0YXRlbWVudCBBdXRobkluc3RhbnQ9IjIwMjQtMTAtMTVUMDc6MTk6MzdaIiBTZXNzaW9uSW5kZXg9Il9jMzk0MGRkMy03ZWY2LTQ1OGQtYTdkMi0xZGUxYWFjYTMzMWMiPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgICAgICBodHRwczovL3d3dy5zcGlkLmdvdi5pdC9TcGlkTDIKICAgICAgICAgICAgICAgIDwvc2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0ic3BpZENvZGUiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgQUdJRC0wMDEKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPgogICAgICAgICAgICAgICAgICAgIFRJTklULUdEQVNEVjAwQTAxSDUwMUoKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAKICAgIAogICAgPC9zYW1sOkFzc2VydGlvbj4KICAgIAoKPC9zYW1scDpSZXNwb25zZT4=";
  public static final String CONDITIONS_ELEMENT_NOT_BEFORE_AFTER_RESPONSE_SAML_RESPONSE_78 = "";
  public static final String CONDITIONS_ELEMENT_NOT_ON_OR_AFTER_NOT_SPECIFIED_SAML_RESPONSE_79 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfYTY0MDIwOGMtODdhNi00NzYzLThlOWItYTMwMThjMTQ4Y2M4IiBJblJlc3BvbnNlVG89Il8wYzk1M2IxYzJiYWUzODI1ZWU1ZTQwZWYzMWEwYWFlOSIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTE1VDA3OjIyOjM3WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfYTY0MDIwOGMtODdhNi00NzYzLThlOWItYTMwMThjMTQ4Y2M4Ij4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBvdVo1WWtDQTZldENSckV1VG56bUUzZ0xJTys4MHZURFBQSm9kTzdWYkJ3PQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgVTZ4bHVOQ2poSklJcDUrbDN1T3dPK0d1aUo3Qm5xYWJyWitwMk5aTW41eGNsRjRTcnRHK3dvTnN6NHFBS2lPa2ExQmxONy9tak1xQTk3NVI1YzBhVndUcG9oUm1xTWNONVE2OWlKRnptL2YzSW9BamtXWjR0RC9iNVBpeFB6MHk3TklPbFFZL1NwMk50NGplMm1yMWh6ZFZBRUZBNE03dmx0cHozTVhtUkZDNFlLWW5GeU9UWW83ZnVRSE1ybTd5Y01jWHZMY2VWK21OM1QzWWZUZitXMzZQMVBDMlJ6QzJQQUZtVDNtekkxSjJHU3czWXJKT3VZSDd6bnZHUiszMmJOSmQwaVlLSWNacG5RZWVET3ExMzhMNGxFQXdBalppVkdETzN6ZE1GamkwQnZHSmRzQ0Fyc3VKQzVNS3dXNFhCRkl3TTMrTndObXJiQmhKS08zSG1nPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKICAgIAogICAgPHNhbWw6QXNzZXJ0aW9uIElEPSJfZDk3ODg0MTMtNzU0NC00M2Y4LThhNzctZmFkMzQxOTI3NTczIiBJc3N1ZUluc3RhbnQ9IjIwMjQtMTAtMTVUMDc6MjI6MzdaIiBWZXJzaW9uPSIyLjAiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij4KICAgICAgICAgICAgaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgIDwvc2FtbDpJc3N1ZXI+CiAgICAgICAgPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgICAgIDxkczpTaWduZWRJbmZvPgogICAgICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICA8ZHM6UmVmZXJlbmNlIFVSST0iI19kOTc4ODQxMy03NTQ0LTQzZjgtOGE3Ny1mYWQzNDE5Mjc1NzMiPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICAgICAgPGRzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICBmbjIxMjJQN0dzSTRQTlVobGJvQmVIUUxJcjc4WkRFbjBmQ0w1TndFV0pJPQogICAgICAgICAgICAgICAgICAgIDwvZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICA8L2RzOlJlZmVyZW5jZT4KICAgICAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgICAgICA8ZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgICAgICBkek9zMzZ4ZEhjMXhNdjJvcXFwa3U3ZlFwT0prbEpPZmZCWjJHWTI5UmNsRHpkWkN1cHNLangzcjhhVXJHWk42VkZFVGdmK1p2czNKSGxRdFJLUTZZUWFXRjNJYk5TdWJhWWNzQ0MxZGpudEMvcmdOYjg3Sjg2dDRJcHJXb2JUT2NWSkx1UFp3K0xxSDVPV0xMM0JrQU1PUTE5ZTBza3RhVzV1dEx4aHQrTTFVTTBaRWY5SHNZcHZmMUt3MlIvRnpEbThqRDYvRndWVUNMTEphRkM0TE40eURFZzN4Ti9RaGd5a1lrMWdHZ3pJbzhTeWlZQjBySHBieTd1VUgxYzkybW11a2RHR3VZbDdmRmR3R3k0akUvZHBNcWEyeDQrN2RROU14RXlzazE2WWdmcVhhYThPeEZGblBXMVdiUVg1bnVxNVRub2Znc3BPMlFacFh1TythZUE9PQogICAgICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgICAgICA8ZHM6S2V5SW5mbz4KICAgICAgICAgICAgICAgIDxkczpYNTA5RGF0YT4KICAgICAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgICAgICBNSUlFR0RDQ0F3Q2dBd0lCQWdJSkFPcllqOW9MRUpDd01BMEdDU3FHU0liM0RRRUJDd1VBTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQWVGdzB4T1RBME1URXhNREF5TURoYUZ3MHlOVEF6TURneE1EQXlNRGhhTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs4a0pWbyt1Z1JyYmJ2OXhoWEN1VnJxaTRCNy9NUXpRYzYyb2N3bEZGdWpKTmQ0bTFtWGtVSEZiZ3Z3aFJrUXFvMkRBbUZlSGl3Q2tKVDNLMWVlWElGaE5GRnJvRXpHUHpPTnlla0xwak52bVlJczFDRnZpckdPajBia0VpR2FLRXMrL3VtekdqeEloeTVKUWxxWEU5NnkxK0l6cDJRaEppbURLMC9LTmlqOEkxYnp4c2VQMFlnYzRTRnZlS1MrN1FPK1ByTHpXa2xFV0dNczRETTVaYzNWUks3ZzRMV1BXWmhLZEltQzFyblMrL2xFbUhTdkhpc2RWcC9ESnRiU3Jad1NZVFJ2VFR6NUlaRFNxNGtBenJEZnBqMTZoN2IzdDNuRkdjOFVvWTJSbzR0UlozYWhKMnIzYjc5eUs2QzVwaFk3Q0FBTnVXM2dEZGhWamlCTllzMENBd0VBQWFPQnlqQ0J4ekFkQmdOVkhRNEVGZ1FVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N3d2daY0dBMVVkSXdTQmp6Q0JqSUFVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N5aGFhUm5NR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZElJSkFPcllqOW9MRUpDd01Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpORnFYZy9WM2FpbUpLVW1VYXFtUUVFb1NjM3F2WEZJVHZUNWY1Ykt3OXlrL05WaFI2d25kTCt6LzI0aDFPZFJxczc2YmxnSDhrMTE2cVdOa2tEdHQwQWxTalFPeDVxdkZZaDFVdmlPak5kUkk0V2tZT05Tdyt2dWF2Y3grZkI2TzVKREhObU1oTXlTS1RubVJxVGt5aGpyY2g3emFGSVdVU1Y3aHNCdXhwcW1yV0RvTFdkWGJWM2VGSDNtSU5BNUFvSVkvbTBiWnR6WjdZTmdpRld6eFFnZWtweGQwdmNUc2VNbkNjWG5zQWxjdGRpcjBGb0NaenR4TXVaamxCandMVHRNNlJ5My80OExNTThaK2x3N05NY2lLTExUR1F5VThYbUtLU1NPaDBkR2g1THJsdDVHeElJSmtIODFDMFlpbVdlYno4NDY0UVBMM1JiTG5US2crYz0KICAgICAgICAgICAgICAgICAgICA8L2RzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgICAgIDwvZHM6S2V5SW5mbz4KICAgICAgICA8L2RzOlNpZ25hdHVyZT4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpTdWJqZWN0PgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIgTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdCI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBfYzAxY2ZiODYtZDFjNC00NjU1LWJjMmItMWU2NGU0ZGExYjA0CiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6TmFtZUlEPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBJblJlc3BvbnNlVG89Il8wYzk1M2IxYzJiYWUzODI1ZWU1ZTQwZWYzMWEwYWFlOSIgTm90T25PckFmdGVyPSIyMDI0LTEwLTE1VDA3OjI2OjE3WiIgUmVjaXBpZW50PSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiLz4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOlN1YmplY3RDb25maXJtYXRpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpTdWJqZWN0PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTEwLTE1VDA3OjIyOjM3WiIgTm90T25PckFmdGVyPSIiPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2U+CiAgICAgICAgICAgICAgICAgICAgaHR0cHM6Ly9kZXYub25laWQucGFnb3BhLml0CiAgICAgICAgICAgICAgICA8L3NhbWw6QXVkaWVuY2U+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZVJlc3RyaWN0aW9uPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWw6Q29uZGl0aW9ucz4KICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6QXV0aG5TdGF0ZW1lbnQgQXV0aG5JbnN0YW50PSIyMDI0LTEwLTE1VDA3OjIyOjM3WiIgU2Vzc2lvbkluZGV4PSJfMGQ3NWU2MTUtNjg3Mi00NjJiLTk3MzYtZWQ2Yjg0NDcwYTkwIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHQ+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHNhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWY+CiAgICAgICAgICAgICAgICAgICAgaHR0cHM6Ly93d3cuc3BpZC5nb3YuaXQvU3BpZEwyCiAgICAgICAgICAgICAgICA8L3NhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpBdXRobkNvbnRleHQ+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpBdXRoblN0YXRlbWVudD4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXR0cmlidXRlIE5hbWU9InNwaWRDb2RlIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPgogICAgICAgICAgICAgICAgICAgIEFHSUQtMDAxCiAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlVmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXR0cmlidXRlIE5hbWU9ImZpc2NhbE51bWJlciIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDpiYXNpYyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHNhbWw6QXR0cmlidXRlVmFsdWUgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4c2k6dHlwZT0ieHM6c3RyaW5nIj4KICAgICAgICAgICAgICAgICAgICBUSU5JVC1HREFTRFYwMEEwMUg1MDFKCiAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlVmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+CiAgICAgICAgCiAgICAKICAgIDwvc2FtbDpBc3NlcnRpb24+CiAgICAKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String NOT_ON_OR_AFTER_MISSING_SAML_RESPONSE_80 = "";
  public static final String NOT_ON_OR_AFTER_BEFORE_RESPONSE_RECEPTION_SAML_RESPONSE_82 = "";
  public static final String ASSERTION_UNSPECIFIED_AUDIENCE_RESTRICTION_CONDITION_SAML_RESPONSE_83 = "";
  public static final String ASSERTION_MISSING_AUDIENCE_RESTRICTION_CONDITION_SAML_RESPONSE_84 = "";
  public static final String AUDIENCE_UNSPECIFIED_SAML_RESPONSE_85 = "";
  public static final String AUDIENCE_MISSING_SAML_RESPONSE_86 = "";
  public static final String AUDIENCE_DIFFERENT_THAN_ENTITY_ID_OF_SP_SAML_RESPONSE_87 = "";
  public static final String AUTH_STATEMENT_UNSPECIFIED_SAML_RESPONSE_88 = "";
  public static final String AUTH_STATEMENT_MISSING_SAML_RESPONSE_89 = "";
  public static final String AUTH_CONTEXT_UNSPECIFIED_SAML_RESPONSE_SAML_RESPONSE_90 = "";
  public static final String AUTH_CONTEXT_MISSING_SAML_RESPONSE_SAML_RESPONSE_91 = "";
  public static final String AUTH_CONTEXT_CLASS_REF_UNSPECIFIED_SAML_RESPONSE_92 = "";
  public static final String AUTH_CONTEXT_CLASS_REF_MISSING_SAML_RESPONSE_93 = "";
  public static final String AUTH_CONTEXT_CLASS_REF_WITH_L1_VALUE_SAML_RESPONSE_94 = "";
  public static final String AUTH_CONTEXT_CLASS_REF_WITH_L2_VALUE_SAML_RESPONSE_95 = "";
  public static final String AUTH_CONTEXT_CLASS_REF_WITH_L3_VALUE_SAML_RESPONSE_96 = "";
  public static final String AUTH_CONTEXT_CLASS_REF_WITH_UNEXPECTED_VALUE_SAML_RESPONSE_97 = "";
  public static final String ATTRIBUTE_STATEMENT_PRESENT_BUT_WITH_SUBELEMENT_ATTRIBUTE_MISSING_SAML_RESPONSE_98 = "";
  public static final String ATTRIBUTE_STATEMENT_PRESENT_BUT_WITH_SUBELEMENT_ATTRIBUTE_UNSPECIFIED_SAML_RESPONSE_99 = "";
  public static final String SENT_ATTRIBUTE_SET_DIFFERENT_THAN_REQUESTED_SAML_RESPONSE_103 = "";
  public static final String REPEATED_WRONG_CREDENTIALS_SUBMITTED_SAML_RESPONSE_104 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfMjdlYWE4ZDgtOGM4MC00ZmQ1LWI3MDMtZmU4YTk1NGQzOTBhIiBJblJlc3BvbnNlVG89Il9mYmQ2ZDc3MGVjYmI2NTAxNWVlYzExN2JhMDg0MTQxZiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTE1VDA4OjA0OjMzWiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfMjdlYWE4ZDgtOGM4MC00ZmQ1LWI3MDMtZmU4YTk1NGQzOTBhIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBxUlRtaHJCQXNjSHIySHdqU3pQU2E5aVdFQkxzOUl1UEV1YVVrRzlsNmxZPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgaHRoV2x0bEozNnBaUTlTZVUxeGl5ek5qRzEzellwOXBuZzIxV1kyamxWWHlyZzNreWQycndBS1pXS3UzMk9jcGRYRUhYaUdGZEtBQXhsOEVMVjZZZkphUXpvaFI5QWpOajUrQnQwaFpOOW94QTNJM3lzTUhIMGx0L01GbVZzUnlCaExINnBLcGtBbElvUS90Ykdad0R4NXU0R2JQeHhHZGdRWlBwbnNOMWVKaU9PWjNYMWgzYndWNDNlRlhxaGxOMVhjWkVUam5JNEVYOWlEak9Ma2pXMU50T1FiTTMwRTBYUE1PSmtpbmVsUGxFTmZZUmxrLzV0TlRyYVgvcTVIdlJyWVpkOVFZRkNFOXozUTdwTUNYcjcwNHVHV1VRNndUUnZlc2lTekd1UHRvV2J6MGZLTk1aWThLMVl3SVozUHVSbEZPSDZiblZXM09QWWI0M3RKTFdBPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjE5CiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String USER_WITHOUT_COMPATIBLE_CREDENTIALS_SAML_RESPONSE_105 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfMjBhMTk1YmUtZGU4NC00MDlhLTk0NjEtZmE5ODM1ZjIyY2ZhIiBJblJlc3BvbnNlVG89Il9mYmQ2ZDc3MGVjYmI2NTAxNWVlYzExN2JhMDg0MTQxZiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTE1VDA4OjA0OjUwWiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfMjBhMTk1YmUtZGU4NC00MDlhLTk0NjEtZmE5ODM1ZjIyY2ZhIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBEclQ1QzBhYlhMZGYrV1JXaitxUDVHSko3SExMMWREbXlxeDVFQmJaandrPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgaWVHbFdFOFRxVGpJOUIxbDJWNXdVbUdOeVhsVVJETjJ0TFlTcEVLL1NyQ1lTNGt4OVBhMmpkUDlkR202UjdrRHZpYUQ2dmNjZHFEN2JjV1lMNUo4ekV1TmpnZlhscC9PRXhzMVEzdU5rNE0zOWxwbmlOUUsyQ0dYRUFYUVpmT3lHUmdjWkI3WVAyUGNRYlJRaHJRNWkyQXlRc054VHZTK2p6WFlYaVhMaGM2T1NwN1VsSzBOVU9hK1FGc0IwK0x5Y2JGbkhuWWcwNGx4clI4UlZiMnNhK3BzdW9UQUxNblZBRk5sRWU1MDZpaVl0eEE5NGxGME5rcTEyNmxPRm1TUlhjZkRNTTVoRnlsd0xXc2pVN2s5YXFKRThrTkQzNnVMK1g5Wi9CMHpJcUR5TEtxTnRaTDhOSjY5RDgzdXl0ZFIrY0xSOHdpZGhZbEhxL1NHZFVaa0VRPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjIwCiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String TIMEOUT_SAML_RESPONSE_106 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfNWVmMGQ2OGItNWIxZS00NDEwLTkxODYtMjYwNzI2MTc2ZWNhIiBJblJlc3BvbnNlVG89Il9mYmQ2ZDc3MGVjYmI2NTAxNWVlYzExN2JhMDg0MTQxZiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTE1VDA4OjA1OjA2WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfNWVmMGQ2OGItNWIxZS00NDEwLTkxODYtMjYwNzI2MTc2ZWNhIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICArYlpvUHQ3N3laRVhuNlR6M0dNZllUd2pyUjJLSFNTNUMwVUMxSDVLQTRRPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgVmRPcHlHQjM3bk1JeHpjWVRJZzB6aUx0L3V2TFFLS2tqTGRQbTYrQ3V1ZG5rVEtsSHFtUEhRVW9BZkt3azlzazk0cFRocEx4Z3hYZDE1cXY2L0Q2V09qMDNlYU9qUTFoR0Yxclp1dUtIQmNaMW5wUjJEZDZ5elo2T0Z0ZnFXUUoxMGFWZ0pHVHZrOFRGb1pVeFRDbVdpOFV2MDlkVFFDYVFyenhTYmxBT2hZYjlpTWswQml0cHFmdVFXcllBTFVmQkZydENxOXB1WjBXaERxdDhEUThaTzd0YXZ6QlFieXNoaVVNMjBScFRrbGZCeU0xSXg3TDRqd2E2b2hxQVZ6SWhablpqVW1iSGszQUhlT2lmdy9TV2ZkUGNYbCtDYTBOU01UVGQwVzZnWExBSXJWai93L0gxMHJmcUJvbHpod0tJMVVkSGhOQ09seDVqUXp2eEowV1d3PT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjIxCiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String CONSENT_NEGATED_SAML_RESPONSE_107 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfODJmYzFhZTEtNjAxNC00MTc5LWJhOWMtNjcxNGM4NmY3MDNkIiBJblJlc3BvbnNlVG89Il9mYmQ2ZDc3MGVjYmI2NTAxNWVlYzExN2JhMDg0MTQxZiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTE1VDA4OjA1OjI4WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfODJmYzFhZTEtNjAxNC00MTc5LWJhOWMtNjcxNGM4NmY3MDNkIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBBYnEwQlhaUC9lanAxY1p3bHd3WGtWZlpZQWFlcitLUVVhOGZmczg3YVpBPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgV0o4YnFIU1hSdjN6WUtEeWxqV3NvemI1Z0dmcmZaK0NlcDVOTzRmQXQza0FVM3NNUE1YdFhZcTk5T3l5dWhVckFRTFlEbE1qajdVTjNnZHh1UUU1bW1zTXhBN2lQa1UyaVMwWVhBLzNacG5YalFUSGljQjR2R2lJeWl2VXZ2Wk5GeVo2TFlvcEFPUE12TnhRTHdYMndha1pkWG4wYWphbG95V0NyQitxV2VnMjZjUTQvaTEvNVNwR2JIQXh6RndGbjhVdzJNMkhXbnBlU1VNTEYzUER0bW14cUJpeUpzSVdEd2pGT2FrRlkxbmV1V0pPV3pNbWlRRVVXU3orUEpkK2NnTUN1dWxJSjFuN0wrcFNicWczUjZ5SWdxcUh3OTZLL1pqRllJKzJ5RlErMStDeU0xQVFBUHZsMTVhYWdWQXY5Tm9NQ2lqWS9rbU1PVlBaNlc0cS93PT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjIyCiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String BLOCKED_CREDENTIALS_SAML_RESPONSE_108 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfNDczMzkyY2EtNGE4NC00YjdhLWE1NGItYTQ3MzU0NTEwOTk2IiBJblJlc3BvbnNlVG89Il9mYmQ2ZDc3MGVjYmI2NTAxNWVlYzExN2JhMDg0MTQxZiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTE1VDA4OjA1OjQ0WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfNDczMzkyY2EtNGE4NC00YjdhLWE1NGItYTQ3MzU0NTEwOTk2Ij4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBGRUNnQmlXMW9YWWkramNMblhIWmttZ3d4ellUZW1zVkpBT0lyWG1SdE1jPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgbW9Fei9wVUtIMzlmV3R3N09UY2Y1NytGdmZ3RkJIRFlLb0ZFZEs3RFFPUWZYSFZ6Sm9SVXpaNmE2WGRJSXpsNTBJK2hhQWt0RHNaVjV3d2JJVllVdWZIS0FGV1pqNGxUUFFnbG1oeWJzU3A4SFZqNjkzMXdCVFI4Z01CK2lIcyt4ZWU3MEx1aVpDV3FFQ3lTeE1YKy9ZWVkwWUdsR1VOVk1ybHhLbEVWMXB3c2JoTGh5Rlc0Vm5iZU1JUFJ5NmR4dDNsb0NtdnBCVGxYZmNUbXBhYjd3K2VLbDBtejhyUTNGdk5xOWpOYUZwL0pxVWNFS3dZOTYzbTJYTlNaT3Y5bzlQdDFQZlB6cWdZVUJRODI4TjB5cVJTMGhtVlR5NUFvcGpuTEFqRmlMNWYvaDF2MmhzenBVNzU4cUhqQWNyaEtPQTVGbzZwTVdQZTlOcXUrQ2ViNnFBPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjIzCiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String ATTRIBUTES_WITHOUT_NAME_FORMAT_SAML_RESPONSE_109 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfNGRiYTZiMTgtMTA5Mi00Y2E1LWI1NGItOWY0OTQwZTYzNWQ0IiBJblJlc3BvbnNlVG89Il9mYmQ2ZDc3MGVjYmI2NTAxNWVlYzExN2JhMDg0MTQxZiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTE1VDA4OjA1OjU5WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfNGRiYTZiMTgtMTA5Mi00Y2E1LWI1NGItOWY0OTQwZTYzNWQ0Ij4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBLUmw2RFg4OEdTd3I0cy9PZU1OVmZIV1BMQVdqMXdnaVpQenZ0dTlHelJRPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgR2NFMTd0SUUrekpXelN0aE9BREQ4aTQ1OXN3YUxGbit2V3Y3bkhRdS8waEFFR2VnbGNoMHVSKzNKc3BwMnA4TDNyVlpvZGNKblNlSmtlSzZQSzNFeGVJYVdXT29YYWc3czZHdDFlcWEvVW16c3NZTEpzcUkrMERqQmZzUndSUkRLT2VaS3RaOWIwaFN2YVZ6NVpJVUZsdldkQjdzVFYwV1dEZlBtMSszbUJ4NXNqb3FPa2h0dUdDU3pJN0xBZklkYUVDMUp6aUFLenFJc0dFajFESllHVzJYTzFrOWJtWTJBSU1tSVBpcVVaTERCQ2E0d1NWeFVqM2RmZVljUzR3ZkZpVjcwUG93a1NqSnh3REdNWWZQeVl3bnRGQlRLUG5GMGFUc2pJYVEzNm0wSXVyVThuUVd2VTZuaE81dHFNSVBJLzQzLzVSM2lySU9CVXZRSUw3cFV3PT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKICAgIAogICAgPHNhbWw6QXNzZXJ0aW9uIElEPSJfZWYyNmNhMWEtMDZjMC00MzAwLWE5MDYtYzUyZDY5YjViYzE4IiBJc3N1ZUluc3RhbnQ9IjIwMjQtMTAtMTVUMDg6MDU6NTlaIiBWZXJzaW9uPSIyLjAiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij4KICAgICAgICAgICAgaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgIDwvc2FtbDpJc3N1ZXI+CiAgICAgICAgPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgICAgIDxkczpTaWduZWRJbmZvPgogICAgICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICA8ZHM6UmVmZXJlbmNlIFVSST0iI19lZjI2Y2ExYS0wNmMwLTQzMDAtYTkwNi1jNTJkNjliNWJjMTgiPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICAgICAgPGRzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICBjZnpWT3hPMWlJaEtVZWVuM2dZTXBTa2R4bUJRa3QvSzhIOXhwVUdsV0pJPQogICAgICAgICAgICAgICAgICAgIDwvZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICA8L2RzOlJlZmVyZW5jZT4KICAgICAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgICAgICA8ZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgICAgICBMQjM0OWJjRzF2NUMzY2xDdHM2RllreXU0ZU1scisrSTFnR0FrZUdUR013NmxNQW9rVzNJbUFlRmdzU0dqelFtTHFXVXZ0eEZzeW8xR0dqeWJWbEs0N1FSbDltaERPNEpSdW5iYVJDOExZUXlRdXJtUHVCTDJQVldOY1FWNWIvSFhTZ3VvRTdEQU1SbU9HRC84ZituaWlQQWcwWEtYeFFHdDBKTzFDcE9rYk5iV2NFYjV0azZjSzlyNTZ2MHNXODlkbk14K3duZHU3aU9CMmtnT1RSc2dRM08rVmhiQ2xxcklHY1l5OW1icHlCWlVYNENudjB2Zkhmc3lYbUhYbkk5S0FyeUVkV1puWlZMSGY1SFlHdUoxNDJwb0dManltZ2hNbkhoVzJ5aGpnSjQzS3pnY2NPclBRT3lHdk4rNzZFeUZFd01FUzQ0WnlzY21YZjJTYzdLUHc9PQogICAgICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgICAgICA8ZHM6S2V5SW5mbz4KICAgICAgICAgICAgICAgIDxkczpYNTA5RGF0YT4KICAgICAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgICAgICBNSUlFR0RDQ0F3Q2dBd0lCQWdJSkFPcllqOW9MRUpDd01BMEdDU3FHU0liM0RRRUJDd1VBTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQWVGdzB4T1RBME1URXhNREF5TURoYUZ3MHlOVEF6TURneE1EQXlNRGhhTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs4a0pWbyt1Z1JyYmJ2OXhoWEN1VnJxaTRCNy9NUXpRYzYyb2N3bEZGdWpKTmQ0bTFtWGtVSEZiZ3Z3aFJrUXFvMkRBbUZlSGl3Q2tKVDNLMWVlWElGaE5GRnJvRXpHUHpPTnlla0xwak52bVlJczFDRnZpckdPajBia0VpR2FLRXMrL3VtekdqeEloeTVKUWxxWEU5NnkxK0l6cDJRaEppbURLMC9LTmlqOEkxYnp4c2VQMFlnYzRTRnZlS1MrN1FPK1ByTHpXa2xFV0dNczRETTVaYzNWUks3ZzRMV1BXWmhLZEltQzFyblMrL2xFbUhTdkhpc2RWcC9ESnRiU3Jad1NZVFJ2VFR6NUlaRFNxNGtBenJEZnBqMTZoN2IzdDNuRkdjOFVvWTJSbzR0UlozYWhKMnIzYjc5eUs2QzVwaFk3Q0FBTnVXM2dEZGhWamlCTllzMENBd0VBQWFPQnlqQ0J4ekFkQmdOVkhRNEVGZ1FVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N3d2daY0dBMVVkSXdTQmp6Q0JqSUFVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N5aGFhUm5NR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZElJSkFPcllqOW9MRUpDd01Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpORnFYZy9WM2FpbUpLVW1VYXFtUUVFb1NjM3F2WEZJVHZUNWY1Ykt3OXlrL05WaFI2d25kTCt6LzI0aDFPZFJxczc2YmxnSDhrMTE2cVdOa2tEdHQwQWxTalFPeDVxdkZZaDFVdmlPak5kUkk0V2tZT05Tdyt2dWF2Y3grZkI2TzVKREhObU1oTXlTS1RubVJxVGt5aGpyY2g3emFGSVdVU1Y3aHNCdXhwcW1yV0RvTFdkWGJWM2VGSDNtSU5BNUFvSVkvbTBiWnR6WjdZTmdpRld6eFFnZWtweGQwdmNUc2VNbkNjWG5zQWxjdGRpcjBGb0NaenR4TXVaamxCandMVHRNNlJ5My80OExNTThaK2x3N05NY2lLTExUR1F5VThYbUtLU1NPaDBkR2g1THJsdDVHeElJSmtIODFDMFlpbVdlYno4NDY0UVBMM1JiTG5US2crYz0KICAgICAgICAgICAgICAgICAgICA8L2RzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgICAgIDwvZHM6S2V5SW5mbz4KICAgICAgICA8L2RzOlNpZ25hdHVyZT4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpTdWJqZWN0PgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIgTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdCI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBfZWE3NTY0NjUtOTM0MS00MGRiLWJmODctNGY5MjFlNWQxMDI0CiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6TmFtZUlEPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBJblJlc3BvbnNlVG89Il9mYmQ2ZDc3MGVjYmI2NTAxNWVlYzExN2JhMDg0MTQxZiIgTm90T25PckFmdGVyPSIyMDI0LTEwLTE1VDA4OjA4OjM4WiIgUmVjaXBpZW50PSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiLz4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOlN1YmplY3RDb25maXJtYXRpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpTdWJqZWN0PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTEwLTE1VDA4OjA1OjU5WiIgTm90T25PckFmdGVyPSIyMDI0LTEwLTE1VDA4OjA4OjM4WiI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgICAgICBodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQKICAgICAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpDb25kaXRpb25zPgogICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpBdXRoblN0YXRlbWVudCBBdXRobkluc3RhbnQ9IjIwMjQtMTAtMTVUMDg6MDU6NTlaIiBTZXNzaW9uSW5kZXg9Il9hOTAzY2E1NS0wY2EwLTRjMjktOGYzZi0zNGEzMzk1MzZlYjQiPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgICAgICBodHRwczovL3d3dy5zcGlkLmdvdi5pdC9TcGlkTDIKICAgICAgICAgICAgICAgIDwvc2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0ic3BpZENvZGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgQUdJRC0wMDEKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPgogICAgICAgICAgICAgICAgICAgIFRJTklULUdEQVNEVjAwQTAxSDUwMUoKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAKICAgIAogICAgPC9zYW1sOkFzc2VydGlvbj4KICAgIAoKPC9zYW1scDpSZXNwb25zZT4=";
  public static final String ISSUE_INSTANT_WITH_MILLISECONDS_SAML_RESPONSE_110 = "";
  public static final String PROCESS_CANCELED_BY_USER_SAML_RESPONSE_111 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfNzViNmE4NjgtYjFjYS00ZTc4LThiMDUtZWJmYTlmZTNkODZjIiBJblJlc3BvbnNlVG89Il9mYmQ2ZDc3MGVjYmI2NTAxNWVlYzExN2JhMDg0MTQxZiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTE1VDA4OjA2OjQyWiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfNzViNmE4NjgtYjFjYS00ZTc4LThiMDUtZWJmYTlmZTNkODZjIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICB4Nit2RkQzNktVSWFQU0ZVMkRHYStrb3NFb0x6MGRZUFVBbGJRS1ZjVVNVPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgVTdaMElNZ3RJUVVIK0RsbGhqT3g2SXdEYnUySWlpNVRhc0srTnZrMVRFV0ZPSDh0WnB1ZHNRYzRBLzhWM0VGbjVRZGpHaGxXdTdqUXBqMnZBbW5IUUN1bXhiWUpmZjhWSW1uTW5Ib3dRdUdLdWs0NEUySjRoMW1lVG5GNkV6L3o1eDJGMkhKOUJkajFwTzh4enJwMTJaN0xBWkJOMEhxdWtVcjNUT0cyeTJKL0ZmeFdRdWdkbHVQWEdML25JOEZIc3A1RXB2NzJOeW5jTi9mc2hvNHJZL1MwMHE0Mm1uNDVIS09MQnNmNzM2aW1GNnBuNjRhUm9tK2ZkRmNhSys0a2grVi8vMHRzQVFxNnUreklIRldEN2loMWNRRzRMYU0wenMzcFVMY0VOZWs3b3IrVnBJNXhla0dCMWFMeldOcWlaNXJ6aGdEczY4QnhBTzk2TWE3ZStRPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjI1CiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";

  //CIE
  public static final String CIE_VALID_SAMLRESPONSE = "";
  public static final String CIE_EXTRA_EIDAS_ATTRIBUTE_SAMLRESPONSE = "";
  public static final String CIE_EXTRA_NOT_EIDAS_ATTRIBUTE_SAMLRESPONSE = "";
  public static final String CIE_EXTRA_INVALID_ATTRIBUTE_SAMLRESPONSE = "";
  public static final String CIE_MISSING_ATTRIBUTES_SAMLRESPONSE = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHNhbWwycDpSZXNwb25zZSB4bWxuczpzYW1sMnA9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpwcm90b2NvbCIKICAgICAgICAgICAgICAgICBEZXN0aW5hdGlvbj0iaHR0cHM6Ly9kZXYub25laWQucGFnb3BhLml0L3NhbWwvYWNzIgogICAgICAgICAgICAgICAgIElEPSJfM2ZjOGVmZGYyY2RmNTNmMGY2MjM4Y2EwODg4MDJkZGUiCiAgICAgICAgICAgICAgICAgSW5SZXNwb25zZVRvPSJfMTA2YmMyYTE0MDA4Y2NkMTA0MmQ0NDNiMTJlOWU2Y2UiCiAgICAgICAgICAgICAgICAgSXNzdWVJbnN0YW50PSIyMDI0LTA5LTE3VDEwOjAxOjIwLjg4N1oiIFZlcnNpb249IjIuMCIKICAgICAgICAgICAgICAgICB4bWxuczp4c2Q9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIj4KCiAgICA8c2FtbDI6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5IiB4bWxuczpzYW1sMj0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiI+CiAgICAgICAgaHR0cHM6Ly9wcmVwcm9kdXppb25lLmlkc2VydmVyLnNlcnZpemljaWUuaW50ZXJuby5nb3YuaXQvaWRwL3Byb2ZpbGUvU0FNTDIvUE9TVC9TU08KCiAgICA8L3NhbWwyOklzc3Vlcj4KICAgIDxkczpTaWduYXR1cmUgeG1sbnM6ZHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPgogICAgICAgIDxkczpTaWduZWRJbmZvPgogICAgICAgICAgICA8ZHM6Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICA8ZHM6U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxkc2lnLW1vcmUjcnNhLXNoYTI1NiIvPgogICAgICAgICAgICA8ZHM6UmVmZXJlbmNlIFVSST0iI18zZmM4ZWZkZjJjZGY1M2YwZjYyMzhjYTA4ODgwMmRkZSI+CiAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNlbnZlbG9wZWQtc2lnbmF0dXJlIi8+CiAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxlYzpJbmNsdXNpdmVOYW1lc3BhY2VzIHhtbG5zOmVjPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFByZWZpeExpc3Q9InhzZCIvPgogICAgICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3JtPgogICAgICAgICAgICAgICAgPC9kczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgPGRzOkRpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jI3NoYTI1NiIvPgogICAgICAgICAgICAgICAgPGRzOkRpZ2VzdFZhbHVlPk1WbThlV0RnTlJKQnJPTEJEMzhGWDdqa2JCSk4xdnNMblBiTk5kWGZZeDQ9PC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgYTBQMWQvSTN6b0RBRUd5bGV3Z3JzV21PRTdNSlJKMzNKWmhma2dvYXNnNTNjSllvTmVPSVFVd3I2SmtLaUpMZ1Q5MWNac1dwa1hVaDI2ZWc4V01rUzc0Qy9JOFF1MlFTR2lKUnBOUEdGWHFwcllQWDliYjZCRjlHYUFFaDRLSWJCYTVEcjdDc2txVmlaempVL3JibW1GT2s2Y2ZDa2ZEaXBhelg4eFlsZkRpY2JqeW9NcUVRdkJSTkhHeFp4VDltKzV0UTZ2K1dHQitzYytMbDA4Mk50ZzRHQUZWMDJoVE9zL092V0psRUdNOSsvc2VwK01LQzFER20rVVZQdkRBWEdqVnVDSHltWDNkK1JXaEUrU1Z3VmllQmNWWmNLdGUxbzB1dnNnK0xaLy84TDgzUm1sL21wYjBoSmdJeXlVRWwzemticWNrRzFkVEEzR0VTMWtEb1Z3PT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSURkVENDQWwyZ0F3SUJBZ0lVVTc5WEVmdmV1ZXlDbER0TGtxVWxTUFoybzhvd0RRWUpLb1pJaHZjTkFRRUxCUUF3TFRFck1Da0cKICAgICAgICAgICAgICAgICAgICBBMVVFQXd3aWFXUnpaWEoyWlhJdWMyVnlkbWw2YVdOcFpTNXBiblJsY201dkxtZHZkaTVwZERBZUZ3MHhPREV3TVRrd09ETTFNRFZhCiAgICAgICAgICAgICAgICAgICAgRncwek9ERXdNVGt3T0RNMU1EVmFNQzB4S3pBcEJnTlZCQU1NSW1sa2MyVnlkbVZ5TG5ObGNuWnBlbWxqYVdVdWFXNTBaWEp1Ynk1bgogICAgICAgICAgICAgICAgICAgIGIzWXVhWFF3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREhyYWozaU9UQ0lJTFRsT3ppY1NFdUZ0MDMKICAgICAgICAgICAgICAgICAgICBrS3ZRRHFHV1JkNW83czFXN1NQMkV0Y1RtZzN4cm9uL3NickxFTC9lTVVRVi9CaXo2SjRwRUdvRnBNWlFIR3hPVnlwbU83TmM4cGtGCiAgICAgICAgICAgICAgICAgICAgb3Q3eVVUQXByNklrdXk0Y1V0YngwZzVma1FMTmIzdXBJZzBWZzFqU25SWEV2VUN5Z3IvOUVlS0NVT2kvMnB0bU9WU0xhZCtkVDdUaQogICAgICAgICAgICAgICAgICAgIFJzWlR3WTNGdlJXY2xlRGZ5WXdjSU1nejVkTFNOTE1acXd6UVpLMUR6dldlRDZhR3RCS0NZUFJmdGFjSG9FU0QrNmJodWtIWjZ3OTUKICAgICAgICAgICAgICAgICAgICBmb1JNSkxPYUJwa3ArWGZ1Z0ZRaW9ZdnJNMEFCMVlRWjVEQ1FSaGhjOGplandkWStiT0IzZVoxbEpZN09hbm5mdTZYUFcyZmNrbmVsCiAgICAgICAgICAgICAgICAgICAgeVB0N1BHZjIyck5mQWdNQkFBR2pnWXd3Z1lrd0hRWURWUjBPQkJZRUZLM0FoK0RvMy96QjlYalo2Nmk0YmlEcFVFYkFNR2dHQTFVZAogICAgICAgICAgICAgICAgICAgIEVRUmhNRitDSW1sa2MyVnlkbVZ5TG5ObGNuWnBlbWxqYVdVdWFXNTBaWEp1Ynk1bmIzWXVhWFNHT1doMGRIQnpPaTh2YVdSelpYSjIKICAgICAgICAgICAgICAgICAgICBaWEl1YzJWeWRtbDZhV05wWlM1cGJuUmxjbTV2TG1kdmRpNXBkQzlwWkhBdmMyaHBZbUp2YkdWMGFEQU5CZ2txaGtpRzl3MEJBUXNGCiAgICAgICAgICAgICAgICAgICAgQUFPQ0FRRUFWdHBuL3MrbFlWZjQycEF0ZGdKbkdUYVNJeThLeEhlWm9iS05ZTkZFWS9YVGFaRXQ5UWVWNWVmVU1CVlZoeEtUVEhOMAogICAgICAgICAgICAgICAgICAgIDA0NkRSOTZXRllYczRQSjlGcHlxNkhteTNrL29VZG1ISjFjMmJ3V0Yvblo4MkN3T08wODFZZzBHQmNmUEVtS0xVR09CSzhUNTVuY1cKICAgICAgICAgICAgICAgICAgICArUlNaYWR2V1R5aFR0UWhMVXRMS2NXeXpLQjVhUzNrRUU1TFN6UjhzdzNvd2xuOVA0MU16K1F0TDNXZU5FU1JIVzBxb1FrRm90WVhYCiAgICAgICAgICAgICAgICAgICAgVzZSdmg2OStHeXpKTHh2cTJxZDdEMXFvSmdPTXJhcnNoQktLUGsrQUJhTFlvRWYvY3J1NGUwUkRJcDJtRDBqa0dPR0RrbjlYVWwrMwogICAgICAgICAgICAgICAgICAgIGRkQUxxL29zVGtpNkNFYXdraGlaRW82QUJFQWpFV05rSDlXMy9aenZKbldvNlE9PQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICA8c2FtbDJwOlN0YXR1cz4KICAgICAgICA8c2FtbDJwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1sMnA6U3RhdHVzPgogICAgPHNhbWwyOkFzc2VydGlvbiB4bWxuczpzYW1sMj0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiIKICAgICAgICAgICAgICAgICAgICAgSUQ9Il9kOTkwMzgzNDFkMmRlOWY1N2Q4MDZmYTRlOWVjYmY2MyIgSXNzdWVJbnN0YW50PSIyMDI0LTA5LTE3VDEwOjAxOjIwLjg4N1oiCiAgICAgICAgICAgICAgICAgICAgIFZlcnNpb249IjIuMCIgeG1sbnM6eHNkPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSI+CiAgICAgICAgPHNhbWwyOklzc3VlciBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OmVudGl0eSI+CiAgICAgICAgICAgIGh0dHBzOi8vcHJlcHJvZHV6aW9uZS5pZHNlcnZlci5zZXJ2aXppY2llLmludGVybm8uZ292Lml0L2lkcC9wcm9maWxlL1NBTUwyL1BPU1QvU1NPCiAgICAgICAgPC9zYW1sMjpJc3N1ZXI+CiAgICAgICAgPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgICAgIDxkczpTaWduZWRJbmZvPgogICAgICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICA8ZHM6UmVmZXJlbmNlIFVSST0iI19kOTkwMzgzNDFkMmRlOWY1N2Q4MDZmYTRlOWVjYmY2MyI+CiAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybXM+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNlbnZlbG9wZWQtc2lnbmF0dXJlIi8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGVjOkluY2x1c2l2ZU5hbWVzcGFjZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeG1sbnM6ZWM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUHJlZml4TGlzdD0ieHNkIi8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3JtPgogICAgICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICAgICAgPGRzOkRpZ2VzdFZhbHVlPlhDOXZqZXFjVlQyY1JEaVkzNFFnTUp6VXRvTFVYT2k0ekNTdCtYWENPbGs9PC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgIDwvZHM6UmVmZXJlbmNlPgogICAgICAgICAgICA8L2RzOlNpZ25lZEluZm8+CiAgICAgICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgICAgIFhWVEZkM3dKTkovQ3ExdE5aYVc4aFg0dm1nMjBmcndmekZlcUdNMGVlZkE0OEVaanVJb2doT1RkUEFrRmxOV0o3cHBKS2RMbHlON3NYSVQ5SmE1bVJ2Wit2T01IbjlCU0p4Z1lqOC9GUDUzQ1VneWtZSEtqZ1djSnFHQkc4Y2EzaUcwVjBUYXlaVzRPeFBaVW1wRHdOOUJDQk9SWUIxblpiNDJUa2MvVnk4N3c0WHVCZzEyVUNuSmlNT3FLVEc4V2N4bVVQNFlpdWJiSzFibDB6blNud1R3WU9PZHQ0SnZpT2ZFQWxIQk9peUFMSWhLVFBuWG5hbUJPS00wbWRkYTlHTXF6SGR2enZnWDZHRHMrVk5VcURkcXZncEY4RUMxZ0xZOUlGM1JZa2Z0YUdjUy9BdVNONHRKbUUrT1hyS3RCYjdQNTgxUncxeDVJQ09qNjVTdW5BZz09CiAgICAgICAgICAgIDwvZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICAgICAgPGRzOlg1MDlEYXRhPgogICAgICAgICAgICAgICAgICAgIDxkczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgICAgICAgICAgICAgIE1JSURkVENDQWwyZ0F3SUJBZ0lVVTc5WEVmdmV1ZXlDbER0TGtxVWxTUFoybzhvd0RRWUpLb1pJaHZjTkFRRUxCUUF3TFRFck1Da0cKICAgICAgICAgICAgICAgICAgICAgICAgQTFVRUF3d2lhV1J6WlhKMlpYSXVjMlZ5ZG1sNmFXTnBaUzVwYm5SbGNtNXZMbWR2ZGk1cGREQWVGdzB4T0RFd01Ua3dPRE0xTURWYQogICAgICAgICAgICAgICAgICAgICAgICBGdzB6T0RFd01Ua3dPRE0xTURWYU1DMHhLekFwQmdOVkJBTU1JbWxrYzJWeWRtVnlMbk5sY25acGVtbGphV1V1YVc1MFpYSnVieTVuCiAgICAgICAgICAgICAgICAgICAgICAgIGIzWXVhWFF3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREhyYWozaU9UQ0lJTFRsT3ppY1NFdUZ0MDMKICAgICAgICAgICAgICAgICAgICAgICAga0t2UURxR1dSZDVvN3MxVzdTUDJFdGNUbWczeHJvbi9zYnJMRUwvZU1VUVYvQml6Nko0cEVHb0ZwTVpRSEd4T1Z5cG1PN05jOHBrRgogICAgICAgICAgICAgICAgICAgICAgICBvdDd5VVRBcHI2SWt1eTRjVXRieDBnNWZrUUxOYjN1cElnMFZnMWpTblJYRXZVQ3lnci85RWVLQ1VPaS8ycHRtT1ZTTGFkK2RUN1RpCiAgICAgICAgICAgICAgICAgICAgICAgIFJzWlR3WTNGdlJXY2xlRGZ5WXdjSU1nejVkTFNOTE1acXd6UVpLMUR6dldlRDZhR3RCS0NZUFJmdGFjSG9FU0QrNmJodWtIWjZ3OTUKICAgICAgICAgICAgICAgICAgICAgICAgZm9STUpMT2FCcGtwK1hmdWdGUWlvWXZyTTBBQjFZUVo1RENRUmhoYzhqZWp3ZFkrYk9CM2VaMWxKWTdPYW5uZnU2WFBXMmZja25lbAogICAgICAgICAgICAgICAgICAgICAgICB5UHQ3UEdmMjJyTmZBZ01CQUFHamdZd3dnWWt3SFFZRFZSME9CQllFRkszQWgrRG8zL3pCOVhqWjY2aTRiaURwVUViQU1HZ0dBMVVkCiAgICAgICAgICAgICAgICAgICAgICAgIEVRUmhNRitDSW1sa2MyVnlkbVZ5TG5ObGNuWnBlbWxqYVdVdWFXNTBaWEp1Ynk1bmIzWXVhWFNHT1doMGRIQnpPaTh2YVdSelpYSjIKICAgICAgICAgICAgICAgICAgICAgICAgWlhJdWMyVnlkbWw2YVdOcFpTNXBiblJsY201dkxtZHZkaTVwZEM5cFpIQXZjMmhwWW1KdmJHVjBhREFOQmdrcWhraUc5dzBCQVFzRgogICAgICAgICAgICAgICAgICAgICAgICBBQU9DQVFFQVZ0cG4vcytsWVZmNDJwQXRkZ0puR1RhU0l5OEt4SGVab2JLTllORkVZL1hUYVpFdDlRZVY1ZWZVTUJWVmh4S1RUSE4wCiAgICAgICAgICAgICAgICAgICAgICAgIDA0NkRSOTZXRllYczRQSjlGcHlxNkhteTNrL29VZG1ISjFjMmJ3V0Yvblo4MkN3T08wODFZZzBHQmNmUEVtS0xVR09CSzhUNTVuY1cKICAgICAgICAgICAgICAgICAgICAgICAgK1JTWmFkdldUeWhUdFFoTFV0TEtjV3l6S0I1YVMza0VFNUxTelI4c3czb3dsbjlQNDFNeitRdEwzV2VORVNSSFcwcW9Ra0ZvdFlYWAogICAgICAgICAgICAgICAgICAgICAgICBXNlJ2aDY5K0d5ekpMeHZxMnFkN0QxcW9KZ09NcmFyc2hCS0tQaytBQmFMWW9FZi9jcnU0ZTBSRElwMm1EMGprR09HRGtuOVhVbCszCiAgICAgICAgICAgICAgICAgICAgICAgIGRkQUxxL29zVGtpNkNFYXdraGlaRW82QUJFQWpFV05rSDlXMy9aenZKbldvNlE9PQogICAgICAgICAgICAgICAgICAgIDwvZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgPC9kczpYNTA5RGF0YT4KICAgICAgICAgICAgPC9kczpLZXlJbmZvPgogICAgICAgIDwvZHM6U2lnbmF0dXJlPgogICAgICAgIDxzYW1sMjpTdWJqZWN0PgogICAgICAgICAgICA8c2FtbDI6TmFtZUlEIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6dHJhbnNpZW50IgogICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWVRdWFsaWZpZXI9Imh0dHBzOi8vcHJlcHJvZHV6aW9uZS5pZHNlcnZlci5zZXJ2aXppY2llLmludGVybm8uZ292Lml0L2lkcC9wcm9maWxlL1NBTUwyL1BPU1QvU1NPIgogICAgICAgICAgICAgICAgICAgICAgICAgIFNQTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly9kZXYub25laWQucGFnb3BhLml0IgogICAgICAgICAgICAgICAgICAgICAgICAgIHhtbG5zOnNhbWwyPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIj4KICAgICAgICAgICAgICAgIEFBZHpaV055WlhReDJsMFd0aWIzNUdiQ3JORFZOVCtWZjFDZEVSbHdFc2JUZnVaK0I5ZXhoM0hpWEduQ0hKSEx6Q3E2VGIvdkdYSmFOL29sOXBZSEFhN2w3Y3NwRTFxTkplb2QrL2xjNTRFVWczQWU5OVNmNHczR3JyNURlRXhRY3kxdXF4OHVvc3JMSFlHTG9MSis5b3FVMWFhSkcvTEFZVFFGRVkwdS9Hb29uVkk9CiAgICAgICAgICAgIDwvc2FtbDI6TmFtZUlEPgogICAgICAgICAgICA8c2FtbDI6U3ViamVjdENvbmZpcm1hdGlvbiBNZXRob2Q9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpjbTpiZWFyZXIiPgogICAgICAgICAgICAgICAgPHNhbWwyOlN1YmplY3RDb25maXJtYXRpb25EYXRhIEFkZHJlc3M9Ijg0LjIyMS4xNDguMTk0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEluUmVzcG9uc2VUbz0iXzEwNmJjMmExNDAwOGNjZDEwNDJkNDQzYjEyZTllNmNlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5vdE9uT3JBZnRlcj0iMjAyNC0wOS0xN1QxMDowNjoyMC45MTdaIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlY2lwaWVudD0iaHR0cHM6Ly9kZXYub25laWQucGFnb3BhLml0L3NhbWwvYWNzIi8+CiAgICAgICAgICAgIDwvc2FtbDI6U3ViamVjdENvbmZpcm1hdGlvbj4KICAgICAgICA8L3NhbWwyOlN1YmplY3Q+CiAgICAgICAgPHNhbWwyOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTA5LTE3VDEwOjAxOjIwLjg4N1oiCiAgICAgICAgICAgICAgICAgICAgICAgICAgTm90T25PckFmdGVyPSIyMDI0LTA5LTE3VDEwOjAyOjIwLjg4N1oiPgogICAgICAgICAgICA8c2FtbDI6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgICAgIDxzYW1sMjpBdWRpZW5jZT5odHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQ8L3NhbWwyOkF1ZGllbmNlPgogICAgICAgICAgICA8L3NhbWwyOkF1ZGllbmNlUmVzdHJpY3Rpb24+CiAgICAgICAgPC9zYW1sMjpDb25kaXRpb25zPgogICAgICAgIDxzYW1sMjpBdXRoblN0YXRlbWVudCBBdXRobkluc3RhbnQ9IjIwMjQtMDktMTdUMTA6MDE6MTguNTg2WiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2Vzc2lvbkluZGV4PSJfMmRhOGVlOGEyNWNkOWRmMWM4NDAzMWNkNGNmMjAyOWEiPgogICAgICAgICAgICA8c2FtbDI6U3ViamVjdExvY2FsaXR5IEFkZHJlc3M9Ijg0LjIyMS4xNDguMTk0Ii8+CiAgICAgICAgICAgIDxzYW1sMjpBdXRobkNvbnRleHQ+CiAgICAgICAgICAgICAgICA8c2FtbDI6QXV0aG5Db250ZXh0Q2xhc3NSZWY+aHR0cHM6Ly93d3cuc3BpZC5nb3YuaXQvU3BpZEwzCiAgICAgICAgICAgICAgICA8L3NhbWwyOkF1dGhuQ29udGV4dENsYXNzUmVmPgogICAgICAgICAgICA8L3NhbWwyOkF1dGhuQ29udGV4dD4KICAgICAgICA8L3NhbWwyOkF1dGhuU3RhdGVtZW50PgogICAgICAgIDxzYW1sMjpBdHRyaWJ1dGVTdGF0ZW1lbnQ+CiAgICAgICAgICAgIDxzYW1sMjpBdHRyaWJ1dGUgRnJpZW5kbHlOYW1lPSJDb2RpY2UgRmlzY2FsZSIgTmFtZT0iZmlzY2FsTnVtYmVyIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPgogICAgICAgICAgICAgICAgPHNhbWwyOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeHNpOnR5cGU9InhzZDpzdHJpbmciPlRJTklULUZMQ05UUlBPUzc4OUYKICAgICAgICAgICAgICAgIDwvc2FtbDI6QXR0cmlidXRlVmFsdWU+CiAgICAgICAgICAgIDwvc2FtbDI6QXR0cmlidXRlPgogICAgICAgIDwvc2FtbDI6QXR0cmlidXRlU3RhdGVtZW50PgogICAgPC9zYW1sMjpBc3NlcnRpb24+Cjwvc2FtbDJwOlJlc3BvbnNlPg==";
  public static final String CIE_EMPTY_ATTRIBUTE_STATEMENT_SAMLRESPONSE = "";
  public static final String CIE_MISSING_ATTRIBUTE_STATEMENT_SAMLRESPONSE = "";


}
