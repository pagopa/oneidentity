package it.pagopa.oneid.model;

public abstract class Base64SAMLResponses {

  public static final String CORRECT_SAML_RESPONSE_01 = "";
  public static final String UNSIGNED_SAML_RESPONSE_02 = "PHNhbWxwOlJlc3BvbnNlDQogICAgRGVzdGluYXRpb249Imh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9zYW1sL2FjcyINCiAgICBJRD0iXzA0NzU4NzNhLWU3OTYtNDc1ZS05MjhlLWVhODcyMmJlNGJlYyINCiAgICBJblJlc3BvbnNlVG89Il81MjJkZmE2MTUwYjQyYzJkZDA0ZWE3NDZjYmEzYWQ5YyIgDQogICAgSXNzdWVJbnN0YW50PSIyMDI0LTA3LTE3VDIwOjQ5OjI0WiINCiAgICBWZXJzaW9uPSIyLjAiIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iDQogICAgeG1sbnM6c2FtbHA9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpwcm90b2NvbCI+DQogICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij5odHRwczovL2xvY2FsaG9zdDo4NDQzPC9zYW1sOklzc3Vlcj4NCg0KICAgIDxzYW1scDpTdGF0dXM+PHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPjwvc2FtbHA6U3RhdHVzPg0KICAgIDxzYW1sOkFzc2VydGlvbiBJRD0iXzU1MGM1ZTAwLWZiYzMtNDhmYy05NjZjLWVjNzgyMmIxY2VmOCIgSXNzdWVJbnN0YW50PSIyMDI0LTA3LTE3VDIwOjQ5OjI0WiINCiAgICAgICAgVmVyc2lvbj0iMi4wIiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiDQogICAgICAgIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KICAgICAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPmh0dHBzOi8vbG9jYWxob3N0Ojg0NDM8L3NhbWw6SXNzdWVyPg0KICAgICAgICA8c2FtbDpTdWJqZWN0Pg0KICAgICAgICAgICAgPHNhbWw6TmFtZUlEIA0KICAgICAgICAgICAgICAgIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6dHJhbnNpZW50Ig0KICAgICAgICAgICAgICAgIE5hbWVRdWFsaWZpZXI9Imh0dHBzOi8vbG9jYWxob3N0Ojg0NDMiPg0KICAgICAgICAgICAgICAgICAgICBfYWI1Y2UyODQtODhiZi00ZDUyLWFmMGItMDAzNDBjZDZmODFlDQogICAgICAgICAgICA8L3NhbWw6TmFtZUlEPg0KICAgICAgICAgICAgPHNhbWw6U3ViamVjdENvbmZpcm1hdGlvbiBNZXRob2Q9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpjbTpiZWFyZXIiPg0KICAgICAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb25EYXRhIA0KICAgICAgICAgICAgICAgICAgICBJblJlc3BvbnNlVG89Il81MjJkZmE2MTUwYjQyYzJkZDA0ZWE3NDZjYmEzYWQ5YyINCiAgICAgICAgICAgICAgICAgICAgTm90T25PckFmdGVyPSIyMDI0LTA3LTE3VDIwOjUyOjMwWiINCiAgICAgICAgICAgICAgICAgICAgUmVjaXBpZW50PSJodHRwOi8vbG9jYWxob3N0OjgwODAvc2FtbC9hY3MiIC8+DQogICAgICAgICAgICA8L3NhbWw6U3ViamVjdENvbmZpcm1hdGlvbj4NCiAgICAgICAgPC9zYW1sOlN1YmplY3Q+DQogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgDQogICAgICAgICAgICBOb3RCZWZvcmU9IjIwMjQtMDctMTdUMjA6NDk6MjRaIiANCiAgICAgICAgICAgIE5vdE9uT3JBZnRlcj0iMjAyNC0wNy0xN1QyMDo1MjozMFoiID4NCiAgICAgICAgICAgIDxzYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+DQogICAgICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2U+aHR0cDovL2xvY2FsaG9zdDo4MDgwPC9zYW1sOkF1ZGllbmNlPg0KICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+DQogICAgICAgIDwvc2FtbDpDb25kaXRpb25zPiANCiAgICAgICAgPHNhbWw6QXV0aG5TdGF0ZW1lbnQgDQogICAgICAgICAgICBBdXRobkluc3RhbnQ9IjIwMjQtMDctMTdUMjA6NDk6MjRaIg0KICAgICAgICAgICAgU2Vzc2lvbkluZGV4PSJfN2Q5MmY3NmQtNTZiNy00ZGIzLTg1MzEtMTc1YWM5NjVmZjRhIiA+DQogICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHQ+DQogICAgICAgICAgICAgICAgPHNhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWY+aHR0cHM6Ly93d3cuc3BpZC5nb3YuaXQvU3BpZEwyPC9zYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPg0KICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4NCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50Pg0KICAgICAgICA8c2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJkYXRlT2ZCaXJ0aCIgIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNhbWw6QXR0cmlidXRlVmFsdWUgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpkYXRlIj4yMDAwLTAxLTAxPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIiAgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDpiYXNpYyI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+VElOSVQtR0RBU0RWMDBBMDFINTAxSjwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlU3RhdGVtZW50Pg0KICAgIDwvc2FtbDpBc3NlcnRpb24+DQo8L3NhbWxwOlJlc3BvbnNlPg0K";
  public static final String UNSIGNED_ASSERTION_SAML_RESPONSE_03 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwOi8vbG9jYWxob3N0OjgwODAvc2FtbC9hY3MiIElEPSJfZTI0NjkwZGItNTViYS00NmM2LWE5ZDQtMmFkYWUyM2U0YWMxIiBJblJlc3BvbnNlVG89Il81MjJkZmE2MTUwYjQyYzJkZDA0ZWE3NDZjYmEzYWQ5YyIgSXNzdWVJbnN0YW50PSIyMDI0LTA3LTE3VDIwOjUwOjQ0WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4NCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPmh0dHBzOi8vbG9jYWxob3N0Ojg0NDM8L3NhbWw6SXNzdWVyPjxkczpTaWduYXR1cmUgeG1sbnM6ZHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPjxkczpTaWduZWRJbmZvPjxkczpDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+PGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz48ZHM6UmVmZXJlbmNlIFVSST0iI19lMjQ2OTBkYi01NWJhLTQ2YzYtYTlkNC0yYWRhZTIzZTRhYzEiPjxkczpUcmFuc2Zvcm1zPjxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPjxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz48L2RzOlRyYW5zZm9ybXM+PGRzOkRpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jI3NoYTI1NiIvPjxkczpEaWdlc3RWYWx1ZT4xRVpGZ2Y3SVcxNTdhbVJvVHkySjloaldFTHZHTWJUdjE2QTd0SGsrUmd3PTwvZHM6RGlnZXN0VmFsdWU+PC9kczpSZWZlcmVuY2U+PC9kczpTaWduZWRJbmZvPjxkczpTaWduYXR1cmVWYWx1ZT5INVZTV1VrZVN2dHVMeXhrWGRWRnZKZEdlQzNlcXpHVFYwZjJZN2xobzBEbGxDdlpPKzBwQzNRMHJ5OG9Zeno5MTMyeEUrb1VZM2N2bEw5N0NHZEYvM1FvVktFTldVcC84RnBZQklsdzhTS3U3RVF6Zi85aDNsNTRKTUJaUnBnNW5UQ2M5VHdtbkNsZDdyVkZLbTd6MDQrTVI0dkVhNys5RXVmaXBSS0N6YzFWNitWMGtubm9mYWZQNWF4dmJIcllQc1hPcXRjSDVBcWM4ZGs4T0Q1Q3F6ek1PcmozbC9LSEhwTmFIY2JweWEvUWp3TkdhYThYVzBSdXJKdE9MZ2dKeEQxVm8rUzlsWDEyZTJ2NEhla3B5dmJYMFNjWmdoU2I5YkhydWhwMk0zL3ZLQ0VCMkVLY3RhallKcHFOd0NBb28wMXZBMHl3RTJHcUM4VXhhRVJ5QXc9PTwvZHM6U2lnbmF0dXJlVmFsdWU+PGRzOktleUluZm8+PGRzOlg1MDlEYXRhPjxkczpYNTA5Q2VydGlmaWNhdGU+TUlJRUdEQ0NBd0NnQXdJQkFnSUpBT3JZajlvTEVKQ3dNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkREFlRncweE9UQTBNVEV4TURBeU1EaGFGdzB5TlRBek1EZ3hNREF5TURoYU1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLOGtKVm8rdWdScmJidjl4aFhDdVZycWk0QjcvTVF6UWM2Mm9jd2xGRnVqSk5kNG0xbVhrVUhGYmd2d2hSa1FxbzJEQW1GZUhpd0NrSlQzSzFlZVhJRmhORkZyb0V6R1B6T055ZWtMcGpOdm1ZSXMxQ0Z2aXJHT2owYmtFaUdhS0VzKy91bXpHanhJaHk1SlFscVhFOTZ5MStJenAyUWhKaW1ESzAvS05pajhJMWJ6eHNlUDBZZ2M0U0Z2ZUtTKzdRTytQckx6V2tsRVdHTXM0RE01WmMzVlJLN2c0TFdQV1poS2RJbUMxcm5TKy9sRW1IU3ZIaXNkVnAvREp0YlNyWndTWVRSdlRUejVJWkRTcTRrQXpyRGZwajE2aDdiM3QzbkZHYzhVb1kyUm80dFJaM2FoSjJyM2I3OXlLNkM1cGhZN0NBQU51VzNnRGRoVmppQk5ZczBDQXdFQUFhT0J5akNCeHpBZEJnTlZIUTRFRmdRVTMvN2tWMnRiZEZ0cGhiU0E0TEg3K3c4U2tjd3dnWmNHQTFVZEl3U0JqekNCaklBVTMvN2tWMnRiZEZ0cGhiU0E0TEg3K3c4U2tjeWhhYVJuTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGRJSUpBT3JZajlvTEVKQ3dNQXdHQTFVZEV3UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKTkZxWGcvVjNhaW1KS1VtVWFxbVFFRW9TYzNxdlhGSVR2VDVmNWJLdzl5ay9OVmhSNnduZEwrei8yNGgxT2RScXM3NmJsZ0g4azExNnFXTmtrRHR0MEFsU2pRT3g1cXZGWWgxVXZpT2pOZFJJNFdrWU9OU3crdnVhdmN4K2ZCNk81SkRITm1NaE15U0tUbm1ScVRreWhqcmNoN3phRklXVVNWN2hzQnV4cHFtcldEb0xXZFhiVjNlRkgzbUlOQTVBb0lZL20wYlp0elo3WU5naUZXenhRZ2VrcHhkMHZjVHNlTW5DY1huc0FsY3RkaXIwRm9DWnp0eE11WmpsQmp3TFR0TTZSeTMvNDhMTU04WitsdzdOTWNpS0xMVEdReVU4WG1LS1NTT2gwZEdoNUxybHQ1R3hJSUprSDgxQzBZaW1XZWJ6ODQ2NFFQTDNSYkxuVEtnK2M9PC9kczpYNTA5Q2VydGlmaWNhdGU+PC9kczpYNTA5RGF0YT48L2RzOktleUluZm8+PC9kczpTaWduYXR1cmU+DQoNCiAgICA8c2FtbHA6U3RhdHVzPjxzYW1scDpTdGF0dXNDb2RlIFZhbHVlPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6c3RhdHVzOlN1Y2Nlc3MiLz48L3NhbWxwOlN0YXR1cz4NCiAgICA8c2FtbDpBc3NlcnRpb24gSUQ9Il9kMGE1Mzc1ZC0yOTBmLTRjZTAtODFlZC01ZjRiZDcyNWRlMzAiIElzc3VlSW5zdGFudD0iMjAyNC0wNy0xN1QyMDo1MDo0NFoiIFZlcnNpb249IjIuMCIgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4NCiAgICAgICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij5odHRwczovL2xvY2FsaG9zdDo4NDQzPC9zYW1sOklzc3Vlcj4NCiAgICAgICAgPHNhbWw6U3ViamVjdD4NCiAgICAgICAgICAgIDxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIgTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly9sb2NhbGhvc3Q6ODQ0MyI+DQogICAgICAgICAgICAgICAgICAgIF80ZDBhZmM4Zi1iODVmLTQyZTAtYWU5OS01MDZkMzg3ZGI1YzUNCiAgICAgICAgICAgIDwvc2FtbDpOYW1lSUQ+DQogICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uIE1ldGhvZD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmNtOmJlYXJlciI+DQogICAgICAgICAgICAgICAgPHNhbWw6U3ViamVjdENvbmZpcm1hdGlvbkRhdGEgSW5SZXNwb25zZVRvPSJfNTIyZGZhNjE1MGI0MmMyZGQwNGVhNzQ2Y2JhM2FkOWMiIE5vdE9uT3JBZnRlcj0iMjAyNC0wNy0xN1QyMDo1MjozMFoiIFJlY2lwaWVudD0iaHR0cDovL2xvY2FsaG9zdDo4MDgwL3NhbWwvYWNzIi8+DQogICAgICAgICAgICA8L3NhbWw6U3ViamVjdENvbmZpcm1hdGlvbj4NCiAgICAgICAgPC9zYW1sOlN1YmplY3Q+DQogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTA3LTE3VDIwOjUwOjQ0WiIgTm90T25PckFmdGVyPSIyMDI0LTA3LTE3VDIwOjUyOjMwWiI+DQogICAgICAgICAgICA8c2FtbDpBdWRpZW5jZVJlc3RyaWN0aW9uPg0KICAgICAgICAgICAgICAgIDxzYW1sOkF1ZGllbmNlPmh0dHA6Ly9sb2NhbGhvc3Q6ODA4MDwvc2FtbDpBdWRpZW5jZT4NCiAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZVJlc3RyaWN0aW9uPg0KICAgICAgICA8L3NhbWw6Q29uZGl0aW9ucz4gDQogICAgICAgIDxzYW1sOkF1dGhuU3RhdGVtZW50IEF1dGhuSW5zdGFudD0iMjAyNC0wNy0xN1QyMDo1MDo0NFoiIFNlc3Npb25JbmRleD0iXzU3ZmQ1MjgxLWIzMzAtNDgzZS04MmYwLTZkNjkxNzYyNTViNiI+DQogICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHQ+DQogICAgICAgICAgICAgICAgPHNhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWY+aHR0cHM6Ly93d3cuc3BpZC5nb3YuaXQvU3BpZEwyPC9zYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPg0KICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4NCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50Pg0KICAgICAgICA8c2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJkYXRlT2ZCaXJ0aCIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDpiYXNpYyI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpkYXRlIj4yMDAwLTAxLTAxPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+VElOSVQtR0RBU0RWMDBBMDFINTAxSjwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlU3RhdGVtZW50Pg0KICAgIDwvc2FtbDpBc3NlcnRpb24+DQo8L3NhbWxwOlJlc3BvbnNlPg==";
  public static final String INVALID_SIGNATURE_SAML_RESPONSE_04 = "";
  public static final String NOT_SPECIFIED_ID_SAML_RESPONSE_08 = "";
  public static final String NOT_PRESENT_ID_SAML_RESPONSE_09 = "";
  public static final String VERSION_NOT_02_SAML_RESPONSE_10 = "";
  public static final String ISSUE_INSTANT_NOT_SPECIFIED_SAML_RESPONSE_11 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfNjU0ZjE3MTYtYjVlNS00MmRkLThjMzEtNWI4M2U0NDFmMDJiIiBJblJlc3BvbnNlVG89Il82NzFkYWE5MzJlNjdjODY5MDM4OTMwM2YxM2NmN2EzOSIgSXNzdWVJbnN0YW50PSIiIFZlcnNpb249IjIuMCIgeG1sbnM6c2FtbD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiIgeG1sbnM6c2FtbHA9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpwcm90b2NvbCI+CiAgICAKICAgIAogICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij4KICAgICAgICBodHRwczovL3ZhbGlkYXRvci5kZXYub25laWQucGFnb3BhLml0CiAgICA8L3NhbWw6SXNzdWVyPgogICAgPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgPGRzOlNpZ25lZEluZm8+CiAgICAgICAgICAgIDxkczpDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+CiAgICAgICAgICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+CiAgICAgICAgICAgIDxkczpSZWZlcmVuY2UgVVJJPSIjXzY1NGYxNzE2LWI1ZTUtNDJkZC04YzMxLTViODNlNDQxZjAyYiI+CiAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+CiAgICAgICAgICAgICAgICA8L2RzOlRyYW5zZm9ybXM+CiAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICAgICAgNlhYNG9LS2pOaGNoaXpKT2ZsQktieHpnVVNTYmVhRnRwYkkvYk9BZjBFND0KICAgICAgICAgICAgICAgIDwvZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgIDwvZHM6UmVmZXJlbmNlPgogICAgICAgIDwvZHM6U2lnbmVkSW5mbz4KICAgICAgICA8ZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgIFF0aUQ5QTBZdllNbWtOZVdSeEptN0c2bWNRSXpMeVV3cVZ5Qk53eURjTmhMbkh2WjJRUU9oVnlZYzhJNzFEcWpOelFNQXBuRGxLVWhZenRBUVlGZXF4bHMxU2dPK3NDK29qWHhONTBFMlk5czB1MjVpK2ZOMWlqVVhTWFJBYWhja2NyQVpaUDFuUGtJZWRqZ1dPeXlXTWs5c2N3LzJERHAvMHFiY05FOGJuOTJXNU82SE9ibXd1Mlo0QTFGY20zd2s3NWtkSngzV3JYbE5NT2Zud1VLbWUzNTlKS0gzTndUUDQwTVg5alJCWlBCek9nTk13Y2FaVGpzcnMvT2pKcm9KeTZSQlVzWk9pYVZueWVtRnltMUhWZG5JRUpVckVJb1BTQ0pReGo5TjJhem1HQ3d2dCs5c1hibEpYekFuWmtOYVNGN25RcEZuR0xKbVdyWHlKZ2JKQT09CiAgICAgICAgPC9kczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICA8ZHM6S2V5SW5mbz4KICAgICAgICAgICAgPGRzOlg1MDlEYXRhPgogICAgICAgICAgICAgICAgPGRzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgICAgICBNSUlFR0RDQ0F3Q2dBd0lCQWdJSkFPcllqOW9MRUpDd01BMEdDU3FHU0liM0RRRUJDd1VBTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQWVGdzB4T1RBME1URXhNREF5TURoYUZ3MHlOVEF6TURneE1EQXlNRGhhTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs4a0pWbyt1Z1JyYmJ2OXhoWEN1VnJxaTRCNy9NUXpRYzYyb2N3bEZGdWpKTmQ0bTFtWGtVSEZiZ3Z3aFJrUXFvMkRBbUZlSGl3Q2tKVDNLMWVlWElGaE5GRnJvRXpHUHpPTnlla0xwak52bVlJczFDRnZpckdPajBia0VpR2FLRXMrL3VtekdqeEloeTVKUWxxWEU5NnkxK0l6cDJRaEppbURLMC9LTmlqOEkxYnp4c2VQMFlnYzRTRnZlS1MrN1FPK1ByTHpXa2xFV0dNczRETTVaYzNWUks3ZzRMV1BXWmhLZEltQzFyblMrL2xFbUhTdkhpc2RWcC9ESnRiU3Jad1NZVFJ2VFR6NUlaRFNxNGtBenJEZnBqMTZoN2IzdDNuRkdjOFVvWTJSbzR0UlozYWhKMnIzYjc5eUs2QzVwaFk3Q0FBTnVXM2dEZGhWamlCTllzMENBd0VBQWFPQnlqQ0J4ekFkQmdOVkhRNEVGZ1FVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N3d2daY0dBMVVkSXdTQmp6Q0JqSUFVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N5aGFhUm5NR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZElJSkFPcllqOW9MRUpDd01Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpORnFYZy9WM2FpbUpLVW1VYXFtUUVFb1NjM3F2WEZJVHZUNWY1Ykt3OXlrL05WaFI2d25kTCt6LzI0aDFPZFJxczc2YmxnSDhrMTE2cVdOa2tEdHQwQWxTalFPeDVxdkZZaDFVdmlPak5kUkk0V2tZT05Tdyt2dWF2Y3grZkI2TzVKREhObU1oTXlTS1RubVJxVGt5aGpyY2g3emFGSVdVU1Y3aHNCdXhwcW1yV0RvTFdkWGJWM2VGSDNtSU5BNUFvSVkvbTBiWnR6WjdZTmdpRld6eFFnZWtweGQwdmNUc2VNbkNjWG5zQWxjdGRpcjBGb0NaenR4TXVaamxCandMVHRNNlJ5My80OExNTThaK2x3N05NY2lLTExUR1F5VThYbUtLU1NPaDBkR2g1THJsdDVHeElJSmtIODFDMFlpbVdlYno4NDY0UVBMM1JiTG5US2crYz0KICAgICAgICAgICAgICAgIDwvZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICA8L2RzOlg1MDlEYXRhPgogICAgICAgIDwvZHM6S2V5SW5mbz4KICAgIDwvZHM6U2lnbmF0dXJlPgogICAgCgogICAgCiAgICA8c2FtbHA6U3RhdHVzPgogICAgICAgIDxzYW1scDpTdGF0dXNDb2RlIFZhbHVlPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6c3RhdHVzOlN1Y2Nlc3MiLz4KICAgIDwvc2FtbHA6U3RhdHVzPgogICAgCiAgICAKICAgIDxzYW1sOkFzc2VydGlvbiBJRD0iX2NhMTcyNDJhLTRkNmUtNDkzNy1iNWZiLTg2NTlhN2VjZWJjMCIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTEwVDEwOjI2OjM3WiIgVmVyc2lvbj0iMi4wIiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOklzc3VlciBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OmVudGl0eSI+CiAgICAgICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgICAgICA8L3NhbWw6SXNzdWVyPgogICAgICAgIDxkczpTaWduYXR1cmUgeG1sbnM6ZHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPgogICAgICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgICAgIDxkczpDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+CiAgICAgICAgICAgICAgICA8ZHM6U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxkc2lnLW1vcmUjcnNhLXNoYTI1NiIvPgogICAgICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfY2ExNzI0MmEtNGQ2ZS00OTM3LWI1ZmItODY1OWE3ZWNlYmMwIj4KICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNlbnZlbG9wZWQtc2lnbmF0dXJlIi8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgICAgICA8L2RzOlRyYW5zZm9ybXM+CiAgICAgICAgICAgICAgICAgICAgPGRzOkRpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jI3NoYTI1NiIvPgogICAgICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgWjl0MlY1UFIrTkRFV1JoWlQxYTBVelhvNVZ2K0hBcjc4eWpEdXZZOXpEOD0KICAgICAgICAgICAgICAgICAgICA8L2RzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgICAgIDwvZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgICAgICAgICAgVGpyL0E5UW51Yk9EaGpoekJkclY5MG1KUjY4Yzg0SUVIZHAxTXc1OXg5QlZaOXMrSlVwSzBVMGxSaEQxVG5mVnRnb1ZwS1JBcEJrVUpocytYSjFKOWhrNkdwUDFpcGV6QjFYRTMySndYMVlyVkoxTEl1SXFZRW5ZKzEyVGNrcStNdWFNcUtzeWFTWkdFVHdsRXk4dkdXKzU2b2psQTNCbnpQU0JZZU1URUpIWVZEclJjV1I2eHVkSlFNTTVjMCtpckdQS2lEVUE3cHFEZ0p1Z3dwL0cxZkJPdk1rNytXSXorSHMvTmZIOTRINzJpWEV2MmZOWEUrK3FYQnJzNmFoQU5LZVpTSlg1Ty9HQjVpTEo0TVN6MGtMNDBmbnBRUXFNUy9sYktDWlN4V3llVXcxREtkemJYMUFQSk42eEJNRk9vc2R0UU1BOHcybzJuY1NQTmg3dGZ3PT0KICAgICAgICAgICAgPC9kczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgPGRzOktleUluZm8+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICAgICAgPGRzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgTUlJRUdEQ0NBd0NnQXdJQkFnSUpBT3JZajlvTEVKQ3dNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkREFlRncweE9UQTBNVEV4TURBeU1EaGFGdzB5TlRBek1EZ3hNREF5TURoYU1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLOGtKVm8rdWdScmJidjl4aFhDdVZycWk0QjcvTVF6UWM2Mm9jd2xGRnVqSk5kNG0xbVhrVUhGYmd2d2hSa1FxbzJEQW1GZUhpd0NrSlQzSzFlZVhJRmhORkZyb0V6R1B6T055ZWtMcGpOdm1ZSXMxQ0Z2aXJHT2owYmtFaUdhS0VzKy91bXpHanhJaHk1SlFscVhFOTZ5MStJenAyUWhKaW1ESzAvS05pajhJMWJ6eHNlUDBZZ2M0U0Z2ZUtTKzdRTytQckx6V2tsRVdHTXM0RE01WmMzVlJLN2c0TFdQV1poS2RJbUMxcm5TKy9sRW1IU3ZIaXNkVnAvREp0YlNyWndTWVRSdlRUejVJWkRTcTRrQXpyRGZwajE2aDdiM3QzbkZHYzhVb1kyUm80dFJaM2FoSjJyM2I3OXlLNkM1cGhZN0NBQU51VzNnRGRoVmppQk5ZczBDQXdFQUFhT0J5akNCeHpBZEJnTlZIUTRFRmdRVTMvN2tWMnRiZEZ0cGhiU0E0TEg3K3c4U2tjd3dnWmNHQTFVZEl3U0JqekNCaklBVTMvN2tWMnRiZEZ0cGhiU0E0TEg3K3c4U2tjeWhhYVJuTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGRJSUpBT3JZajlvTEVKQ3dNQXdHQTFVZEV3UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKTkZxWGcvVjNhaW1KS1VtVWFxbVFFRW9TYzNxdlhGSVR2VDVmNWJLdzl5ay9OVmhSNnduZEwrei8yNGgxT2RScXM3NmJsZ0g4azExNnFXTmtrRHR0MEFsU2pRT3g1cXZGWWgxVXZpT2pOZFJJNFdrWU9OU3crdnVhdmN4K2ZCNk81SkRITm1NaE15U0tUbm1ScVRreWhqcmNoN3phRklXVVNWN2hzQnV4cHFtcldEb0xXZFhiVjNlRkgzbUlOQTVBb0lZL20wYlp0elo3WU5naUZXenhRZ2VrcHhkMHZjVHNlTW5DY1huc0FsY3RkaXIwRm9DWnp0eE11WmpsQmp3TFR0TTZSeTMvNDhMTU04WitsdzdOTWNpS0xMVEdReVU4WG1LS1NTT2gwZEdoNUxybHQ1R3hJSUprSDgxQzBZaW1XZWJ6ODQ2NFFQTDNSYkxuVEtnK2M9CiAgICAgICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgICAgICA8L2RzOlg1MDlEYXRhPgogICAgICAgICAgICA8L2RzOktleUluZm8+CiAgICAgICAgPC9kczpTaWduYXR1cmU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6U3ViamVjdD4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpOYW1lSUQgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDp0cmFuc2llbnQiIE5hbWVRdWFsaWZpZXI9Imh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgXzYyZWFkMGE5LWM0ZTUtNDhjNy04ZTk2LTY0YzEzNzkxZWFiMwogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOk5hbWVJRD4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uIE1ldGhvZD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmNtOmJlYXJlciI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHNhbWw6U3ViamVjdENvbmZpcm1hdGlvbkRhdGEgSW5SZXNwb25zZVRvPSJfNjcxZGFhOTMyZTY3Yzg2OTAzODkzMDNmMTNjZjdhMzkiIE5vdE9uT3JBZnRlcj0iMjAyNC0xMC0xMFQxMDoyNToxOVoiIFJlY2lwaWVudD0iaHR0cHM6Ly9kZXYub25laWQucGFnb3BhLml0L3NhbWwvYWNzIi8+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWw6U3ViamVjdD4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpDb25kaXRpb25zIE5vdEJlZm9yZT0iMjAyNC0xMC0xMFQxMDoyNjozN1oiIE5vdE9uT3JBZnRlcj0iMjAyNC0xMC0xMFQxMDoyNToxOVoiPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2U+CiAgICAgICAgICAgICAgICAgICAgaHR0cHM6Ly9kZXYub25laWQucGFnb3BhLml0CiAgICAgICAgICAgICAgICA8L3NhbWw6QXVkaWVuY2U+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZVJlc3RyaWN0aW9uPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWw6Q29uZGl0aW9ucz4KICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6QXV0aG5TdGF0ZW1lbnQgQXV0aG5JbnN0YW50PSIyMDI0LTEwLTEwVDEwOjI2OjM3WiIgU2Vzc2lvbkluZGV4PSJfZjIyNGM5YjItNzlhOS00ZTljLWFkNWItMzJlZmY1OGY4ZWFmIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHQ+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHNhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWY+CiAgICAgICAgICAgICAgICAgICAgaHR0cHM6Ly93d3cuc3BpZC5nb3YuaXQvU3BpZEwyCiAgICAgICAgICAgICAgICA8L3NhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpBdXRobkNvbnRleHQ+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpBdXRoblN0YXRlbWVudD4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXR0cmlidXRlIE5hbWU9InNwaWRDb2RlIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPgogICAgICAgICAgICAgICAgICAgIEFHSUQtMDAxCiAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlVmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXR0cmlidXRlIE5hbWU9ImZpc2NhbE51bWJlciIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDpiYXNpYyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHNhbWw6QXR0cmlidXRlVmFsdWUgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4c2k6dHlwZT0ieHM6c3RyaW5nIj4KICAgICAgICAgICAgICAgICAgICBUSU5JVC1HREFTRFYwMEEwMUg1MDFKCiAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlVmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+CiAgICAgICAgCiAgICAKICAgIDwvc2FtbDpBc3NlcnRpb24+CiAgICAKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String ISSUE_INSTANT_MISSING_SAML_RESPONSE_12 = "";
  public static final String ISSUE_INSTANT_UNCORRECT_FORMAT_SAML_RESPONSE_13 = "";
  public static final String ISSUE_INSTANT_BEFORE_REQUEST_SAML_RESPONSE_14 = "";
  public static final String ISSUE_INSTANT_AFTER_REQUEST_SAML_RESPONSE_15 = "";
  public static final String RESPONSE_IN_RESPONSE_TO_NOT_SPECIFIED_SAML_RESPONSE_16 = "";
  public static final String RESPONSE_IN_RESPONSE_TO_MISSING_SAML_RESPONSE_17 = "";
  public static final String IN_RESPONSE_TO_DIFFERENT_FROM_REQUEST_SAML_RESPONSE_18 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfZjA0NThiYjItZjM4YS00Y2IwLThlNDktOTA1MGVkMDFkNjM4IiBJblJlc3BvbnNlVG89ImlucmVzcG9uc2V0b2RpdmVyc29kYWlkcmVxdWVzdCIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDE0OjU3OjEzWiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfZjA0NThiYjItZjM4YS00Y2IwLThlNDktOTA1MGVkMDFkNjM4Ij4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICB1ak9VaERJVGdOdlJiRm82N0pOd3hJRWpVTmRTL2Z1RTdvdjNCYXpNQWpvPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgZ1dBWnBLSDN1czRSRzllWWJ6Y3ZrVmdXWEtaSnEzZVBnOEpBRWcrMHkrcnpMOUxRTXc0WjlkMnJmUzNFbnFWUDBIS0JOOGRqSDNJNG9mUWhPcDhMZklBYmhEbkFheEk3ZU1pUWhVQ0tWU0w0djRKL05GWG9waGovemU3MzJDai9sR0ZNTFRBRi9xb2ZsRUlHWVNNdmtTNXcvb2U1UlVmUEZ6Tm1MLzNKVXhSSGI0SHBNcWhrL1lXT0taU2lRZldUWkhrazI3Rm5RUW1lZjJtSlk0OHVucWlpZVVoMXJ0N3JnUllNRFhDM2hnMFBhcWlod2xZbUJWYzJWSlRLaVFaMFFQQyt6czViWE9oYmJqTFJFZDdTaktsdG54TmpLRWdRT2F0SmJZaGJqY0djcjJIK3puemtLVWlETk9WT0tGaWdtZ2xXbWZZUUlwcW1tWVUyMGg5TGZRPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKICAgIAogICAgPHNhbWw6QXNzZXJ0aW9uIElEPSJfMzhmYzg0NDgtYzY4YS00OGI1LThiNmYtNGVlMTJkNGM1ZGEyIiBJc3N1ZUluc3RhbnQ9IjIwMjQtMTAtMTFUMTQ6NTc6MTNaIiBWZXJzaW9uPSIyLjAiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij4KICAgICAgICAgICAgaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgIDwvc2FtbDpJc3N1ZXI+CiAgICAgICAgPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgICAgIDxkczpTaWduZWRJbmZvPgogICAgICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICA8ZHM6UmVmZXJlbmNlIFVSST0iI18zOGZjODQ0OC1jNjhhLTQ4YjUtOGI2Zi00ZWUxMmQ0YzVkYTIiPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICAgICAgPGRzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICA0ZVRSb3FHejJVWTR5akNkWDlCYXpIL2tpVEVuMFVwQUp1eE9ZblcvWUdZPQogICAgICAgICAgICAgICAgICAgIDwvZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICA8L2RzOlJlZmVyZW5jZT4KICAgICAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgICAgICA8ZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgICAgICBIZHd3MWRFTEJtVmRhcmY2MTlDTklQRnhNUkZ2UWJteVdvUTNhK2ZjeW82cWI3VmNVcE0rOCtBWFNTazFjeUdNbDlnV1pPUEwxWmwyUURkd3gremJyclZnN0VCZzJ6M21XVmd2dEhYcGZrYjlKS2lEdWV4aksybWViUi9kMjZPbVJDYkVvYklhSHo1K0pvblBIcXhxSTB4WktnNXU1cUJGb1o2L0RXMmUzaU9JdGY0Rmg2aENjMGQxblJnUTNnV2FVMHhtWHNtc1l3WUpHNmlCRTBtb3lyNlR5bjRpZ0pYWFoxVy83NU1zSnpFTWdtZEFhWnJIMnNhQno2a1pLRTUwYndld01PMS9ValU5MUt1dldNb3lPVGV2aXFPN3FXa2Q1UWdub2prY2NPMEJyY20rV3hTdDBaeEFibUROekxBVDdHUVpHNkcycGNSOEE1OTRBV3Rndmc9PQogICAgICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgICAgICA8ZHM6S2V5SW5mbz4KICAgICAgICAgICAgICAgIDxkczpYNTA5RGF0YT4KICAgICAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgICAgICBNSUlFR0RDQ0F3Q2dBd0lCQWdJSkFPcllqOW9MRUpDd01BMEdDU3FHU0liM0RRRUJDd1VBTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQWVGdzB4T1RBME1URXhNREF5TURoYUZ3MHlOVEF6TURneE1EQXlNRGhhTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs4a0pWbyt1Z1JyYmJ2OXhoWEN1VnJxaTRCNy9NUXpRYzYyb2N3bEZGdWpKTmQ0bTFtWGtVSEZiZ3Z3aFJrUXFvMkRBbUZlSGl3Q2tKVDNLMWVlWElGaE5GRnJvRXpHUHpPTnlla0xwak52bVlJczFDRnZpckdPajBia0VpR2FLRXMrL3VtekdqeEloeTVKUWxxWEU5NnkxK0l6cDJRaEppbURLMC9LTmlqOEkxYnp4c2VQMFlnYzRTRnZlS1MrN1FPK1ByTHpXa2xFV0dNczRETTVaYzNWUks3ZzRMV1BXWmhLZEltQzFyblMrL2xFbUhTdkhpc2RWcC9ESnRiU3Jad1NZVFJ2VFR6NUlaRFNxNGtBenJEZnBqMTZoN2IzdDNuRkdjOFVvWTJSbzR0UlozYWhKMnIzYjc5eUs2QzVwaFk3Q0FBTnVXM2dEZGhWamlCTllzMENBd0VBQWFPQnlqQ0J4ekFkQmdOVkhRNEVGZ1FVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N3d2daY0dBMVVkSXdTQmp6Q0JqSUFVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N5aGFhUm5NR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZElJSkFPcllqOW9MRUpDd01Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpORnFYZy9WM2FpbUpLVW1VYXFtUUVFb1NjM3F2WEZJVHZUNWY1Ykt3OXlrL05WaFI2d25kTCt6LzI0aDFPZFJxczc2YmxnSDhrMTE2cVdOa2tEdHQwQWxTalFPeDVxdkZZaDFVdmlPak5kUkk0V2tZT05Tdyt2dWF2Y3grZkI2TzVKREhObU1oTXlTS1RubVJxVGt5aGpyY2g3emFGSVdVU1Y3aHNCdXhwcW1yV0RvTFdkWGJWM2VGSDNtSU5BNUFvSVkvbTBiWnR6WjdZTmdpRld6eFFnZWtweGQwdmNUc2VNbkNjWG5zQWxjdGRpcjBGb0NaenR4TXVaamxCandMVHRNNlJ5My80OExNTThaK2x3N05NY2lLTExUR1F5VThYbUtLU1NPaDBkR2g1THJsdDVHeElJSmtIODFDMFlpbVdlYno4NDY0UVBMM1JiTG5US2crYz0KICAgICAgICAgICAgICAgICAgICA8L2RzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgICAgIDwvZHM6S2V5SW5mbz4KICAgICAgICA8L2RzOlNpZ25hdHVyZT4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpTdWJqZWN0PgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIgTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdCI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBfMGMxNTU3ZjgtYTBiNS00ZjIyLThhYzctNzQ0NzczODAwNGUzCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6TmFtZUlEPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBJblJlc3BvbnNlVG89ImlucmVzcG9uc2V0b2RpdmVyc29kYWlkcmVxdWVzdCIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDE1OjAwOjA4WiIgUmVjaXBpZW50PSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiLz4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOlN1YmplY3RDb25maXJtYXRpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpTdWJqZWN0PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTEwLTExVDE0OjU3OjEzWiIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDE1OjAwOjA4WiI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgICAgICBodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQKICAgICAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpDb25kaXRpb25zPgogICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpBdXRoblN0YXRlbWVudCBBdXRobkluc3RhbnQ9IjIwMjQtMTAtMTFUMTQ6NTc6MTNaIiBTZXNzaW9uSW5kZXg9Il83MjdhODU0Ny0yMmRmLTQ0YWQtYTk1Ny1mMjMyMTk4ZjZjMDUiPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgICAgICBodHRwczovL3d3dy5zcGlkLmdvdi5pdC9TcGlkTDIKICAgICAgICAgICAgICAgIDwvc2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0ic3BpZENvZGUiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgQUdJRC0wMDEKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPgogICAgICAgICAgICAgICAgICAgIFRJTklULUdEQVNEVjAwQTAxSDUwMUoKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAKICAgIAogICAgPC9zYW1sOkFzc2VydGlvbj4KICAgIAoKPC9zYW1scDpSZXNwb25zZT4=";
  public static final String DESTINATION_NOT_SPECIFIED_SAML_RESPONSE_19 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSIiIElEPSJfNWYwNmY5MzktOTVjZC00NzdlLWEzM2ItM2M5YTlhZWU2NjQ5IiBJblJlc3BvbnNlVG89Il9iZjE3ZDFiMTYxZTk1ZDE5NDZiYjg2OGE2NTYwYzk4MiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDE0OjU3OjQ5WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfNWYwNmY5MzktOTVjZC00NzdlLWEzM2ItM2M5YTlhZWU2NjQ5Ij4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBvdUtrZ29QZWVSTzNMQiszZTk3cHF1cTZib1lOWS9jbXZWcDIyaCtPZjVNPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgR0JRV1pDTStCYiszeCtKL0VhVWpPTHFGVWVZVk1TQjVOTEFuRmhhZVlna3FhWEdSTFQ5NzdrOFplUndQeDZvUEc0dFhydk02ZEF1Vk9wSTNLVDlsS09xcXRrV3JEQkFJV05vL01XU1VDVWkrcnExc1hPem9KbEpaUTRiUWw2R2tKc1ZOR0VFRW9Da1JmNUdzSnVrdWgyTnlXMW1ha0JaUEU4dGpVRjNiNUVDbXBHb2xwbnAvQkM0TmFVZEpqTDBVYW8rNUlEa3lQcGZGbklGTE53b2tVeUR1TEcrTVBlVlhFbTN6cUhMTFpISThEQUYzTUxuRHovRFhoNy9qS2h4ejZmWUVXYXpCa3BZMXVwT1pXaFFKbWkxcTlaMG5BUGI1S0Rhc2VpOTZjdStUUndVV1JqVHZYVGR5UW15eVFUZG9TaS95dmVpMEFSVzgxV0xsZndOanBnPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKICAgIAogICAgPHNhbWw6QXNzZXJ0aW9uIElEPSJfMjk2NmQyMWEtYWMyYS00M2NmLTg2NWYtNWM0NjU5NjIwNmE1IiBJc3N1ZUluc3RhbnQ9IjIwMjQtMTAtMTFUMTQ6NTc6NDlaIiBWZXJzaW9uPSIyLjAiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij4KICAgICAgICAgICAgaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgIDwvc2FtbDpJc3N1ZXI+CiAgICAgICAgPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgICAgIDxkczpTaWduZWRJbmZvPgogICAgICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICA8ZHM6UmVmZXJlbmNlIFVSST0iI18yOTY2ZDIxYS1hYzJhLTQzY2YtODY1Zi01YzQ2NTk2MjA2YTUiPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICAgICAgPGRzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICB6OVZOMXR2WjJsa2pHRHBZZzlSa01WRG9VdjNVZmhzbG9NdmZBTFY5dGF3PQogICAgICAgICAgICAgICAgICAgIDwvZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICA8L2RzOlJlZmVyZW5jZT4KICAgICAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgICAgICA8ZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgICAgICBZTnhxcE5FQU8xa1pBT3AvaG50Q1YwOWRoazRtakZBZHdCemV2akVJOVY3VVBTcUxTS0p2NTY2Z3FpdWFvdEM0a3JOcjlBYkhiclhYekIzYW9GUUNSYlY0WmVQakdUcCtyTzBNWjhXQXdUQXRxUUVZNk53RE1jS1NkcUxRN2Y0SW1tKzBRZnc4Zm9maHN1azlCVktJTHVtNDNNTTV0MmtoemFpUTNDQW9OYXpLd3JLSW54NlNzMlcvT0RRbUZKT01Xa2xjeGNHWUdHemJLaGErRWlidDhVUWhWU1cxM216d1BBeXhiU0gvb0Q4V3NSWGlBVll1RzIvZXMrazdWYXBpWXRpcnc0MEcxY3ZpZ3VsUVJXM0dVL2RVQkM3eHhCT2F3RUJNQkxZYk96dDFEM1hxdEpYVkVwNVlMbDJsekVUc2tldmo0UHN4eElkSUtXVjlySDFCcEE9PQogICAgICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgICAgICA8ZHM6S2V5SW5mbz4KICAgICAgICAgICAgICAgIDxkczpYNTA5RGF0YT4KICAgICAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgICAgICBNSUlFR0RDQ0F3Q2dBd0lCQWdJSkFPcllqOW9MRUpDd01BMEdDU3FHU0liM0RRRUJDd1VBTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQWVGdzB4T1RBME1URXhNREF5TURoYUZ3MHlOVEF6TURneE1EQXlNRGhhTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs4a0pWbyt1Z1JyYmJ2OXhoWEN1VnJxaTRCNy9NUXpRYzYyb2N3bEZGdWpKTmQ0bTFtWGtVSEZiZ3Z3aFJrUXFvMkRBbUZlSGl3Q2tKVDNLMWVlWElGaE5GRnJvRXpHUHpPTnlla0xwak52bVlJczFDRnZpckdPajBia0VpR2FLRXMrL3VtekdqeEloeTVKUWxxWEU5NnkxK0l6cDJRaEppbURLMC9LTmlqOEkxYnp4c2VQMFlnYzRTRnZlS1MrN1FPK1ByTHpXa2xFV0dNczRETTVaYzNWUks3ZzRMV1BXWmhLZEltQzFyblMrL2xFbUhTdkhpc2RWcC9ESnRiU3Jad1NZVFJ2VFR6NUlaRFNxNGtBenJEZnBqMTZoN2IzdDNuRkdjOFVvWTJSbzR0UlozYWhKMnIzYjc5eUs2QzVwaFk3Q0FBTnVXM2dEZGhWamlCTllzMENBd0VBQWFPQnlqQ0J4ekFkQmdOVkhRNEVGZ1FVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N3d2daY0dBMVVkSXdTQmp6Q0JqSUFVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N5aGFhUm5NR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZElJSkFPcllqOW9MRUpDd01Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpORnFYZy9WM2FpbUpLVW1VYXFtUUVFb1NjM3F2WEZJVHZUNWY1Ykt3OXlrL05WaFI2d25kTCt6LzI0aDFPZFJxczc2YmxnSDhrMTE2cVdOa2tEdHQwQWxTalFPeDVxdkZZaDFVdmlPak5kUkk0V2tZT05Tdyt2dWF2Y3grZkI2TzVKREhObU1oTXlTS1RubVJxVGt5aGpyY2g3emFGSVdVU1Y3aHNCdXhwcW1yV0RvTFdkWGJWM2VGSDNtSU5BNUFvSVkvbTBiWnR6WjdZTmdpRld6eFFnZWtweGQwdmNUc2VNbkNjWG5zQWxjdGRpcjBGb0NaenR4TXVaamxCandMVHRNNlJ5My80OExNTThaK2x3N05NY2lLTExUR1F5VThYbUtLU1NPaDBkR2g1THJsdDVHeElJSmtIODFDMFlpbVdlYno4NDY0UVBMM1JiTG5US2crYz0KICAgICAgICAgICAgICAgICAgICA8L2RzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgICAgIDwvZHM6S2V5SW5mbz4KICAgICAgICA8L2RzOlNpZ25hdHVyZT4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpTdWJqZWN0PgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIgTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdCI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBfODUxMjM0ZmItYmY3ZS00ZDljLWJmMGQtM2ZmNzlkMWU5NGU1CiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6TmFtZUlEPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBJblJlc3BvbnNlVG89Il9iZjE3ZDFiMTYxZTk1ZDE5NDZiYjg2OGE2NTYwYzk4MiIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDE1OjAwOjA4WiIgUmVjaXBpZW50PSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiLz4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOlN1YmplY3RDb25maXJtYXRpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpTdWJqZWN0PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTEwLTExVDE0OjU3OjQ5WiIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDE1OjAwOjA4WiI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgICAgICBodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQKICAgICAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpDb25kaXRpb25zPgogICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpBdXRoblN0YXRlbWVudCBBdXRobkluc3RhbnQ9IjIwMjQtMTAtMTFUMTQ6NTc6NDlaIiBTZXNzaW9uSW5kZXg9Il83ZTgwYWJhNS1kZWFlLTQ3YjctOTVhYy1mNGRlNzMyMTdkMTMiPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgICAgICBodHRwczovL3d3dy5zcGlkLmdvdi5pdC9TcGlkTDIKICAgICAgICAgICAgICAgIDwvc2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0ic3BpZENvZGUiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgQUdJRC0wMDEKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPgogICAgICAgICAgICAgICAgICAgIFRJTklULUdEQVNEVjAwQTAxSDUwMUoKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAKICAgIAogICAgPC9zYW1sOkFzc2VydGlvbj4KICAgIAoKPC9zYW1scDpSZXNwb25zZT4=";
  public static final String MISSING_DESTINATION_SAML_RESPONSE_20 = "";
  public static final String DESTINATION_DIFFERENT_FROM_ACS_SAML_RESPONSE_21 = "";
  public static final String NOT_SPECIFIED_STATUS_SAML_RESPONSE_22 = "";
  public static final String MISSING_STATUS_SAML_RESPONSE_23 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfMDQ1YzU5OTgtOTVhMC00Mjk5LWIyMTItYjlhNDdlYjkwYmFhIiBJblJlc3BvbnNlVG89Il8wYWZmNjMyNTA5MjFjY2UzZTllZGJmYzY2MDBmMjY5YyIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDA4OjEwOjEzWiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfMDQ1YzU5OTgtOTVhMC00Mjk5LWIyMTItYjlhNDdlYjkwYmFhIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAwMDJCUTlJR21sTnpWK2FrZDZvVW4wU2EwQlBUN2VXWnU0dUhRbHZRQzJRPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgYWxMQ0NQSXYrUEJWWmloV3lKV1BaT2pyZWZHS0lxRnhqb200anNKSGpWYTFOd1hycWZSVTNIMkRzWGVLZGtNaktNTm12d3JzOStJZ2l5aTlFYTJQL2oyaUV0ZW9EVktPQW5lZjNtbE0vb2w1OGRSclJETEhOMWNlaTNmRjZPaUV5UURWdzNpazZLc2tHbWdQd1dFMEYrbXV0bDVqUXFtZi9kT3VLRUg2eG9vTFppUEdjZENtWEYyMFQxWHVIKzMvRHo1ckUzY29Jb0RrMG55ZkdNOFpBS1BJNDZxay9ZaTFUOGxoK0NOd3JRUUgyZ2paaHVIc080OWJYWCs1bm1MUXI0VUM3S01JbWdZRVVsMFBVUWV2bDVhUFZ5dFFQU2wxWnpxSXVrc3FZV2xPNGpxY3AzalR4cHJPMWMxUkFua1puVnpLNSs5ZXp1N1lEbDNBRDlnMjJnPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCgogICAgCiAgICA8c2FtbDpBc3NlcnRpb24gSUQ9Il80N2ExN2RkMy0yYjQ4LTQ4MTUtODUwMS1lMjMxMTkwZDk5NDIiIElzc3VlSW5zdGFudD0iMjAyNC0xMC0xMVQwODoxMDoxM1oiIFZlcnNpb249IjIuMCIgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgICAgICBodHRwczovL3ZhbGlkYXRvci5kZXYub25laWQucGFnb3BhLml0CiAgICAgICAgPC9zYW1sOklzc3Vlcj4KICAgICAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICAgICAgPGRzOlNpZ25lZEluZm8+CiAgICAgICAgICAgICAgICA8ZHM6Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpSZWZlcmVuY2UgVVJJPSIjXzQ3YTE3ZGQzLTJiNDgtNDgxNS04NTAxLWUyMzExOTBkOTk0MiI+CiAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybXM+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+CiAgICAgICAgICAgICAgICAgICAgPC9kczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgIHYyRDhnWTMrWFR6ZmpvaWxIQWJUTFZtWlFFbnVtZVR6bks0Y2k0SDByajg9CiAgICAgICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgIDwvZHM6UmVmZXJlbmNlPgogICAgICAgICAgICA8L2RzOlNpZ25lZEluZm8+CiAgICAgICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgICAgIGtqbXh4alpwWkJaR3I4enhJUzE1ZXRlUDUvaGNORjJCN3gvUDdHTUkxZHUvcFdBbGdmME15dGxZUGlkVHdaZ1pseUJXRnJZcjJtVWhaN2wxaHZRYU9IUUhsejFTelFORnhrdXhuNXJCTXduSUVzZ3Mrbkk5MEdIdnVud3UrVy9hTHcyTzF3RTBKakkybVpSU3ljejdDeE1IcGZjMVJSUjliNFJVK2xFQlFoTlRJTUcrMUJhMExnM2NmQ2NqNlNTVlpYdTNvd2FOWktZdGlzS2hEdHR5ejBpNU9GSDdGWXgwWDR3ZExQMmhkcUpYMUdPakF1R1l6K25CSU1FQ2s5aHdkS05mcjlVVUZEWGlwdFA3ZjZ5R1FUN2xEVEZrQ00ycGJ3aW44aFl1My9udGlybjJiOGcwemk5c2R4dnM0NU1YVnNVYS9aaVlmWktuWnhOVUlEcGpsQT09CiAgICAgICAgICAgIDwvZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICAgICAgPGRzOlg1MDlEYXRhPgogICAgICAgICAgICAgICAgICAgIDxkczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgICAgIDwvZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgPC9kczpYNTA5RGF0YT4KICAgICAgICAgICAgPC9kczpLZXlJbmZvPgogICAgICAgIDwvZHM6U2lnbmF0dXJlPgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOlN1YmplY3Q+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6TmFtZUlEIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6dHJhbnNpZW50IiBOYW1lUXVhbGlmaWVyPSJodHRwczovL3ZhbGlkYXRvci5kZXYub25laWQucGFnb3BhLml0Ij4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIF83NTY5MjIwZS1iOTczLTQ5NjUtYWU5NC0yNDQ4YzNmMDMwN2IKICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpOYW1lSUQ+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6U3ViamVjdENvbmZpcm1hdGlvbiBNZXRob2Q9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpjbTpiZWFyZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb25EYXRhIEluUmVzcG9uc2VUbz0iXzBhZmY2MzI1MDkyMWNjZTNlOWVkYmZjNjYwMGYyNjljIiBOb3RPbk9yQWZ0ZXI9IjIwMjQtMTAtMTFUMDg6MTE6MTVaIiBSZWNpcGllbnQ9Imh0dHBzOi8vZGV2Lm9uZWlkLnBhZ29wYS5pdC9zYW1sL2FjcyIvPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6U3ViamVjdENvbmZpcm1hdGlvbj4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOlN1YmplY3Q+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6Q29uZGl0aW9ucyBOb3RCZWZvcmU9IjIwMjQtMTAtMTFUMDg6MTA6MTNaIiBOb3RPbk9yQWZ0ZXI9IjIwMjQtMTAtMTFUMDg6MTE6MTVaIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdWRpZW5jZVJlc3RyaWN0aW9uPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF1ZGllbmNlPgogICAgICAgICAgICAgICAgICAgIGh0dHBzOi8vZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkNvbmRpdGlvbnM+CiAgICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF1dGhuU3RhdGVtZW50IEF1dGhuSW5zdGFudD0iMjAyNC0xMC0xMVQwODoxMDoxM1oiIFNlc3Npb25JbmRleD0iXzcyMWI5MWU1LThhZGUtNGNmZS1iZjgzLTNlZThkZTJhYzE2ZiI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXV0aG5Db250ZXh0PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPgogICAgICAgICAgICAgICAgICAgIGh0dHBzOi8vd3d3LnNwaWQuZ292Lml0L1NwaWRMMgogICAgICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXV0aG5Db250ZXh0PgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWw6QXV0aG5TdGF0ZW1lbnQ+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6QXR0cmlidXRlU3RhdGVtZW50PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJzcGlkQ29kZSIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDpiYXNpYyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHNhbWw6QXR0cmlidXRlVmFsdWUgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4c2k6dHlwZT0ieHM6c3RyaW5nIj4KICAgICAgICAgICAgICAgICAgICBBR0lELTAwMQogICAgICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJmaXNjYWxOdW1iZXIiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgVElOSVQtR0RBU0RWMDBBMDFINTAxSgogICAgICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L3NhbWw6QXR0cmlidXRlU3RhdGVtZW50PgogICAgICAgIAogICAgCiAgICA8L3NhbWw6QXNzZXJ0aW9uPgogICAgCgo8L3NhbWxwOlJlc3BvbnNlPg==";
  public static final String NOT_SPECIFIED_STATUS_CODE_SAML_RESPONSE_24 = "";
  public static final String MISSING_STATUS_CODE_SAML_RESPONSE_25 = "";
  public static final String STATUS_CODE_DIFFERENT_FROM_SUCCESS_SAML_RESPONSE_26 = "";
  public static final String NOT_SPECIFIED_ISSUER_ELEMENT_SAML_RESPONSE_27 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfODUwZmVkZTAtNmE0ZS00YzE3LWJmYTQtZDRkNzkwNDU2N2VlIiBJblJlc3BvbnNlVG89Il8wYWZmNjMyNTA5MjFjY2UzZTllZGJmYzY2MDBmMjY5YyIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDA4OjI0OjQ3WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiLz4KICAgIDxkczpTaWduYXR1cmUgeG1sbnM6ZHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPgogICAgICAgIDxkczpTaWduZWRJbmZvPgogICAgICAgICAgICA8ZHM6Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICA8ZHM6U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxkc2lnLW1vcmUjcnNhLXNoYTI1NiIvPgogICAgICAgICAgICA8ZHM6UmVmZXJlbmNlIFVSST0iI184NTBmZWRlMC02YTRlLTRjMTctYmZhNC1kNGQ3OTA0NTY3ZWUiPgogICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybXM+CiAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNlbnZlbG9wZWQtc2lnbmF0dXJlIi8+CiAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgPC9kczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgPGRzOkRpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jI3NoYTI1NiIvPgogICAgICAgICAgICAgICAgPGRzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICAgICAgICAgIGtTZnBYNzZpMjNCQjNDbHlSTVpPQVQrcFE2N09qd3BpMnRyaGF4RFRxNW89CiAgICAgICAgICAgICAgICA8L2RzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICA8L2RzOlJlZmVyZW5jZT4KICAgICAgICA8L2RzOlNpZ25lZEluZm8+CiAgICAgICAgPGRzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgICAgICBEdmYvOCtYWkF4YWtIQTRpYTlRelJoaEJ2eGxPcDNWSDRIb1lWL0NRQUZXZ0FoNk5DUUpxN1lMRWVKODEySmFXMVFjZlVpa0RFcEY4YUNobXZQTmp4S29NN2dqK0I0WDYwMWZoUlBZeTJvRVhob0dVdGZBZkNRcVpsV3E1aUdZVStvNWsreStUeEd0TFZFS29SRUF5bWNOTThTaUVIVjROcmZpdnlmV0FFcnhlTkQ4VWc5Nno2VGZxSWpMWWt2MzFWT3Bpb0hlUU1YQlpDd0lwZU1tVlVsODlmUWlmcy9ZWE13RTRqdXhQZFFKVDZGV3Y0V2JnNGlZenBDNG9aNlVObCtITVkxNDRBKzcxQTFRSThoV210aWZpYzJXSVYrN1krR3pGR3JySWFEZXBKclhyUnBFZDExa0VLYjdkcFFkR2NwK1VTVXkzejNWN0dvY0V6cGxUaGc9PQogICAgICAgIDwvZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgPGRzOktleUluZm8+CiAgICAgICAgICAgIDxkczpYNTA5RGF0YT4KICAgICAgICAgICAgICAgIDxkczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgICAgICAgICAgTUlJRUdEQ0NBd0NnQXdJQkFnSUpBT3JZajlvTEVKQ3dNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkREFlRncweE9UQTBNVEV4TURBeU1EaGFGdzB5TlRBek1EZ3hNREF5TURoYU1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLOGtKVm8rdWdScmJidjl4aFhDdVZycWk0QjcvTVF6UWM2Mm9jd2xGRnVqSk5kNG0xbVhrVUhGYmd2d2hSa1FxbzJEQW1GZUhpd0NrSlQzSzFlZVhJRmhORkZyb0V6R1B6T055ZWtMcGpOdm1ZSXMxQ0Z2aXJHT2owYmtFaUdhS0VzKy91bXpHanhJaHk1SlFscVhFOTZ5MStJenAyUWhKaW1ESzAvS05pajhJMWJ6eHNlUDBZZ2M0U0Z2ZUtTKzdRTytQckx6V2tsRVdHTXM0RE01WmMzVlJLN2c0TFdQV1poS2RJbUMxcm5TKy9sRW1IU3ZIaXNkVnAvREp0YlNyWndTWVRSdlRUejVJWkRTcTRrQXpyRGZwajE2aDdiM3QzbkZHYzhVb1kyUm80dFJaM2FoSjJyM2I3OXlLNkM1cGhZN0NBQU51VzNnRGRoVmppQk5ZczBDQXdFQUFhT0J5akNCeHpBZEJnTlZIUTRFRmdRVTMvN2tWMnRiZEZ0cGhiU0E0TEg3K3c4U2tjd3dnWmNHQTFVZEl3U0JqekNCaklBVTMvN2tWMnRiZEZ0cGhiU0E0TEg3K3c4U2tjeWhhYVJuTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGRJSUpBT3JZajlvTEVKQ3dNQXdHQTFVZEV3UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKTkZxWGcvVjNhaW1KS1VtVWFxbVFFRW9TYzNxdlhGSVR2VDVmNWJLdzl5ay9OVmhSNnduZEwrei8yNGgxT2RScXM3NmJsZ0g4azExNnFXTmtrRHR0MEFsU2pRT3g1cXZGWWgxVXZpT2pOZFJJNFdrWU9OU3crdnVhdmN4K2ZCNk81SkRITm1NaE15U0tUbm1ScVRreWhqcmNoN3phRklXVVNWN2hzQnV4cHFtcldEb0xXZFhiVjNlRkgzbUlOQTVBb0lZL20wYlp0elo3WU5naUZXenhRZ2VrcHhkMHZjVHNlTW5DY1huc0FsY3RkaXIwRm9DWnp0eE11WmpsQmp3TFR0TTZSeTMvNDhMTU04WitsdzdOTWNpS0xMVEdReVU4WG1LS1NTT2gwZEdoNUxybHQ1R3hJSUprSDgxQzBZaW1XZWJ6ODQ2NFFQTDNSYkxuVEtnK2M9CiAgICAgICAgICAgICAgICA8L2RzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgPC9kczpYNTA5RGF0YT4KICAgICAgICA8L2RzOktleUluZm8+CiAgICA8L2RzOlNpZ25hdHVyZT4KICAgIAoKICAgIAogICAgPHNhbWxwOlN0YXR1cz4KICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpTdWNjZXNzIi8+CiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAogICAgCiAgICA8c2FtbDpBc3NlcnRpb24gSUQ9Il9mZDgxZWQ3MC0xZTc3LTQ2NzAtOWY3Ny1kMjQxZDY5NzExZGMiIElzc3VlSW5zdGFudD0iMjAyNC0xMC0xMVQwODoyNDo0N1oiIFZlcnNpb249IjIuMCIgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgICAgICBodHRwczovL3ZhbGlkYXRvci5kZXYub25laWQucGFnb3BhLml0CiAgICAgICAgPC9zYW1sOklzc3Vlcj4KICAgICAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICAgICAgPGRzOlNpZ25lZEluZm8+CiAgICAgICAgICAgICAgICA8ZHM6Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpSZWZlcmVuY2UgVVJJPSIjX2ZkODFlZDcwLTFlNzctNDY3MC05Zjc3LWQyNDFkNjk3MTFkYyI+CiAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybXM+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+CiAgICAgICAgICAgICAgICAgICAgPC9kczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgIFNpYUhQc1I1eVVlOE9UVW5EVnZmRVlnZXJqQ0p0VFFFM2s5NERVS0F5SHM9CiAgICAgICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgIDwvZHM6UmVmZXJlbmNlPgogICAgICAgICAgICA8L2RzOlNpZ25lZEluZm8+CiAgICAgICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgICAgIG82SzcrQm11Mmw1ZmZmOXd3bGF0dmFzYWljN3pBWElQdmh6QnBidnl6bnErL0ZMUkpHRGhnTzd3TWg5WnZ1bXJHTTZCdFFlNG9ucHhya25tRG5qaElJcGZJZFVicDdPSWxVY1FZbHBQTFVDenp2MVNpMXlJOVJaUHlIWWcrdWh2Qk0rc1dDaGtzTU5tRmI1R05kbWZsQmcrQUxiOFMrZXdrTHFjbkx6b05xTWpJWFlaZy9STUxoUmJxT1lKUzk1czBSbk5kSy9vN20vOU1iZWhUbTNndHh0TVIwaVE5RWNwbzBmTjIybmJ0RUdNb0Mrbkc5Y0NOWm44QTFyQVdFVW5OY1V3eThvKzRjNVNBaHh1V2tlK2pLNTcrL1NNRjZrQm45NWwrUk1ENzllNjlCTUF1alp3aHdERVJIaUJ1akFkTnI1QTcxUjdCWTdFZmFiczlOcythdz09CiAgICAgICAgICAgIDwvZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICAgICAgPGRzOlg1MDlEYXRhPgogICAgICAgICAgICAgICAgICAgIDxkczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgICAgIDwvZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgPC9kczpYNTA5RGF0YT4KICAgICAgICAgICAgPC9kczpLZXlJbmZvPgogICAgICAgIDwvZHM6U2lnbmF0dXJlPgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOlN1YmplY3Q+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6TmFtZUlEIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6dHJhbnNpZW50IiBOYW1lUXVhbGlmaWVyPSJodHRwczovL3ZhbGlkYXRvci5kZXYub25laWQucGFnb3BhLml0Ij4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIF9hNmY5YjU4Ny04OTNhLTRiNzUtOWRhMy01YmI3ZGJkMTI1YzgKICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpOYW1lSUQ+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6U3ViamVjdENvbmZpcm1hdGlvbiBNZXRob2Q9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpjbTpiZWFyZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb25EYXRhIEluUmVzcG9uc2VUbz0iXzBhZmY2MzI1MDkyMWNjZTNlOWVkYmZjNjYwMGYyNjljIiBOb3RPbk9yQWZ0ZXI9IjIwMjQtMTAtMTFUMDg6MTE6MTVaIiBSZWNpcGllbnQ9Imh0dHBzOi8vZGV2Lm9uZWlkLnBhZ29wYS5pdC9zYW1sL2FjcyIvPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6U3ViamVjdENvbmZpcm1hdGlvbj4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOlN1YmplY3Q+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6Q29uZGl0aW9ucyBOb3RCZWZvcmU9IjIwMjQtMTAtMTFUMDg6MjQ6NDdaIiBOb3RPbk9yQWZ0ZXI9IjIwMjQtMTAtMTFUMDg6MTE6MTVaIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdWRpZW5jZVJlc3RyaWN0aW9uPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF1ZGllbmNlPgogICAgICAgICAgICAgICAgICAgIGh0dHBzOi8vZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkNvbmRpdGlvbnM+CiAgICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF1dGhuU3RhdGVtZW50IEF1dGhuSW5zdGFudD0iMjAyNC0xMC0xMVQwODoyNDo0N1oiIFNlc3Npb25JbmRleD0iXzlmNzA0ZDJkLWYwYTgtNGNmYy05NDkwLWE1NWFiZDM0NmIzYSI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXV0aG5Db250ZXh0PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPgogICAgICAgICAgICAgICAgICAgIGh0dHBzOi8vd3d3LnNwaWQuZ292Lml0L1NwaWRMMgogICAgICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXV0aG5Db250ZXh0PgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWw6QXV0aG5TdGF0ZW1lbnQ+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6QXR0cmlidXRlU3RhdGVtZW50PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJzcGlkQ29kZSIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDpiYXNpYyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHNhbWw6QXR0cmlidXRlVmFsdWUgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4c2k6dHlwZT0ieHM6c3RyaW5nIj4KICAgICAgICAgICAgICAgICAgICBBR0lELTAwMQogICAgICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJmaXNjYWxOdW1iZXIiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgVElOSVQtR0RBU0RWMDBBMDFINTAxSgogICAgICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L3NhbWw6QXR0cmlidXRlU3RhdGVtZW50PgogICAgICAgIAogICAgCiAgICA8L3NhbWw6QXNzZXJ0aW9uPgogICAgCgo8L3NhbWxwOlJlc3BvbnNlPg==";
  public static final String MISSING_ISSUER_ELEMENT_SAML_RESPONSE_28 = "";
  public static final String ISSUER_DIFFERENT_FROM_IDP_ENTITY_ID_SAML_RESPONSE_29 = "";
  public static final String DIFFERENT_FORMAT_ATTRIBUTE_SAML_RESPONSE_30 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfMGYwOWM5MjQtZWRhZi00YzM4LTljNjYtZWJhNWFjZDVmMzc5IiBJblJlc3BvbnNlVG89Il8wYWZmNjMyNTA5MjFjY2UzZTllZGJmYzY2MDBmMjY5YyIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDA4OjI2OjM0WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDpkaXZlcnNvZGFlbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfMGYwOWM5MjQtZWRhZi00YzM4LTljNjYtZWJhNWFjZDVmMzc5Ij4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAxRGlyTE53K25DYmN4MmNaYkdSa1Y3L0REMFgwRE5YdGo2OUF5MW93U2dRPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgTmtyM1BQd0R1ZXJLM0k0akdJdFBxRzJhVUI4MEZ0VGU1SnI2Nk5uYk9UOHJSSG4vUXl1RURVazJYaE5SRWRoSWJVakRTT1IxanJ1dlRqdS9QWVcwSjJqdDlRUUpnaU1NNmpqbWVmYjlJdDZVcHNicERTVC9jaHlNVnlTWnNwUk1uNGxPNG9ObXQrak0ydG5Gekt2ZzRMOE9JRGNWV1pYRmFEVk1UcU5HTlpBdDB0aGo5LzZGMk1haGxvUEUwemtqa2I3emlnWDZ5VTdGNWs2SzJBZWNPWDdYQlNDQXBoczd2QXNlREZndUZ4V1UyZlR1Q3lVRTFtZEc4MUU3TUVKQnJuUHg2SjFXTThWT0ZyL0o2Rm9UMDAzaUwxS1o1c25taXRNVjFxc1JoQnhrRFhqUHVIYnFCZlBwamFETHdTNFlpTSt0ay9scnRTdmlXVU5leEFEdmJnPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKICAgIAogICAgPHNhbWw6QXNzZXJ0aW9uIElEPSJfMGFlZDlkNmItNjU5ZC00MzZiLWJjNmYtZjRmNmQyMWQyNDM2IiBJc3N1ZUluc3RhbnQ9IjIwMjQtMTAtMTFUMDg6MjY6MzRaIiBWZXJzaW9uPSIyLjAiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij4KICAgICAgICAgICAgaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgIDwvc2FtbDpJc3N1ZXI+CiAgICAgICAgPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgICAgIDxkczpTaWduZWRJbmZvPgogICAgICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICA8ZHM6UmVmZXJlbmNlIFVSST0iI18wYWVkOWQ2Yi02NTlkLTQzNmItYmM2Zi1mNGY2ZDIxZDI0MzYiPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICAgICAgPGRzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICBmdERIQkIxK3lDbFpGNW00TjVBMGU3a2lUQ09sSkk5aWVMRlR2TE5jYlRBPQogICAgICAgICAgICAgICAgICAgIDwvZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICA8L2RzOlJlZmVyZW5jZT4KICAgICAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgICAgICA8ZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgICAgICBrcmgyaElnWml3WSswbkwzSGY4azJ2dWJZdWN5cXEvUWRzQmppSXovalh2TUJZbGRUNTVmdFFyOVMrbEwvSjZCaytiTlBLcUphMkp4TVR3SktWS3N4MFoyK0VLMjhyM2huemQ0YUJMbWRyRk5ZaDk4dURZQWN4UGV1dkk2OGM4M0xleURHeHNGZVh1ejhWWHkyS3ZrOWtDa1hXWUtQY2kxZ2FaTVMvWjJpdnFxYnlXK3M5bWRyQ0s0RWpBeHFuTnQ4U0RqalpzMFd2WHFCMEtTOGE2Vk5GT1NWRmJreTdsVFFSV2N0enJXejgrOXRiUWplN28wWlZBZFBXVHU0ZTBrQ3RQRTZwSWd5MTV2WGxlR3o0MXdlcXR2ZThZQ2VxdVJDRHc4Y3lrTms0QjFzMitydmY4Z2F5ZklwMkxNZzB2b2w1cEUzU1pjVnlYLzhWQkQrUUEwbUE9PQogICAgICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgICAgICA8ZHM6S2V5SW5mbz4KICAgICAgICAgICAgICAgIDxkczpYNTA5RGF0YT4KICAgICAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgICAgICBNSUlFR0RDQ0F3Q2dBd0lCQWdJSkFPcllqOW9MRUpDd01BMEdDU3FHU0liM0RRRUJDd1VBTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQWVGdzB4T1RBME1URXhNREF5TURoYUZ3MHlOVEF6TURneE1EQXlNRGhhTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs4a0pWbyt1Z1JyYmJ2OXhoWEN1VnJxaTRCNy9NUXpRYzYyb2N3bEZGdWpKTmQ0bTFtWGtVSEZiZ3Z3aFJrUXFvMkRBbUZlSGl3Q2tKVDNLMWVlWElGaE5GRnJvRXpHUHpPTnlla0xwak52bVlJczFDRnZpckdPajBia0VpR2FLRXMrL3VtekdqeEloeTVKUWxxWEU5NnkxK0l6cDJRaEppbURLMC9LTmlqOEkxYnp4c2VQMFlnYzRTRnZlS1MrN1FPK1ByTHpXa2xFV0dNczRETTVaYzNWUks3ZzRMV1BXWmhLZEltQzFyblMrL2xFbUhTdkhpc2RWcC9ESnRiU3Jad1NZVFJ2VFR6NUlaRFNxNGtBenJEZnBqMTZoN2IzdDNuRkdjOFVvWTJSbzR0UlozYWhKMnIzYjc5eUs2QzVwaFk3Q0FBTnVXM2dEZGhWamlCTllzMENBd0VBQWFPQnlqQ0J4ekFkQmdOVkhRNEVGZ1FVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N3d2daY0dBMVVkSXdTQmp6Q0JqSUFVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N5aGFhUm5NR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZElJSkFPcllqOW9MRUpDd01Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpORnFYZy9WM2FpbUpLVW1VYXFtUUVFb1NjM3F2WEZJVHZUNWY1Ykt3OXlrL05WaFI2d25kTCt6LzI0aDFPZFJxczc2YmxnSDhrMTE2cVdOa2tEdHQwQWxTalFPeDVxdkZZaDFVdmlPak5kUkk0V2tZT05Tdyt2dWF2Y3grZkI2TzVKREhObU1oTXlTS1RubVJxVGt5aGpyY2g3emFGSVdVU1Y3aHNCdXhwcW1yV0RvTFdkWGJWM2VGSDNtSU5BNUFvSVkvbTBiWnR6WjdZTmdpRld6eFFnZWtweGQwdmNUc2VNbkNjWG5zQWxjdGRpcjBGb0NaenR4TXVaamxCandMVHRNNlJ5My80OExNTThaK2x3N05NY2lLTExUR1F5VThYbUtLU1NPaDBkR2g1THJsdDVHeElJSmtIODFDMFlpbVdlYno4NDY0UVBMM1JiTG5US2crYz0KICAgICAgICAgICAgICAgICAgICA8L2RzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgICAgIDwvZHM6S2V5SW5mbz4KICAgICAgICA8L2RzOlNpZ25hdHVyZT4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpTdWJqZWN0PgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIgTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdCI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBfOTgyOTg5MWEtYmNlYS00ZDNmLWI1OTktYmU1NmRhNzQwZTQ0CiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6TmFtZUlEPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBJblJlc3BvbnNlVG89Il8wYWZmNjMyNTA5MjFjY2UzZTllZGJmYzY2MDBmMjY5YyIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDA4OjExOjE1WiIgUmVjaXBpZW50PSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiLz4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOlN1YmplY3RDb25maXJtYXRpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpTdWJqZWN0PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTEwLTExVDA4OjI2OjM0WiIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDA4OjExOjE1WiI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgICAgICBodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQKICAgICAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpDb25kaXRpb25zPgogICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpBdXRoblN0YXRlbWVudCBBdXRobkluc3RhbnQ9IjIwMjQtMTAtMTFUMDg6MjY6MzRaIiBTZXNzaW9uSW5kZXg9Il9hODA4ZTJhZC0wOGRiLTRlODYtODhlZC1mZDM4MDkzMzY2Y2IiPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgICAgICBodHRwczovL3d3dy5zcGlkLmdvdi5pdC9TcGlkTDIKICAgICAgICAgICAgICAgIDwvc2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0ic3BpZENvZGUiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgQUdJRC0wMDEKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPgogICAgICAgICAgICAgICAgICAgIFRJTklULUdEQVNEVjAwQTAxSDUwMUoKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAKICAgIAogICAgPC9zYW1sOkFzc2VydGlvbj4KICAgIAoKPC9zYW1scDpSZXNwb25zZT4=";
  public static final String MISSING_FORMAT_ATTRIBUTE_SAML_RESPONSE_31 = "";
  public static final String MISSING_ASSERTION_SAML_RESPONSE_32 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfYWJkNTY1YjAtNzg1YS00MmRhLTk2ZjYtZTM1YjcwNWI2ZWY4IiBJblJlc3BvbnNlVG89Il8wYWZmNjMyNTA5MjFjY2UzZTllZGJmYzY2MDBmMjY5YyIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDA4OjI3OjU0WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfYWJkNTY1YjAtNzg1YS00MmRhLTk2ZjYtZTM1YjcwNWI2ZWY4Ij4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICA0dVRSdC9OeGg3MElTek5RSzB3UDE2QUlnQTVYTm1wM3FVUDV4aXg5WFFVPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgbmhZL3JaaE5JSEtYYTVsVVhjTmtkR2pMRjBodWhqS1M5ay9NQlJMMnUvWEY5eDhKQXR2UEN1bjlZSVpYa1liSFBuUjdOYjhXcEdUdU1VZ2VhQ1R6WlVUMTlIOTFLaEkyc0pPUkV0blNlU1Z1clZVNGpLdE96VTlrdXdTQ1ViWXk3Q0p2a3ZrZm4rbzJBdTVGcUxObjliMENiRkp4Y3FtMUlpdVJuaThlQnBLU01YN1BUSkFsQVdXdHVKS1RTSHpkUGszRDZHSEFWSUhuLzMzRm10RmpCNW1SRFJSQ3JFN043d0FrMnk3RGwvb0R1UlZPdXV1SlRsTDNpTkZQOStZZjlhd2tISkVhOEdxM3B0NTl4REU5QUcwczlpYXl3dmxiQjhxQ3hIRTF2TXYrUXJPWmt1NFpCaTM2L3FsSUY5QXR6OWkwVWt1UENBL1BzY1pPbVUzM2pnPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKIAoKPC9zYW1scDpSZXNwb25zZT4=";
  public static final String NOT_SPECIFIED_ASSERTION_ID_ATTRIBUTE_SAML_RESPONSE_33 = "";
  public static final String MISSING_ASSERTION_ID_ATTRIBUTE_SAML_RESPONSE_34 = "";
  public static final String VERSION_ASSERTION_ATTRIBUTE_DIFFERENT_SAML_RESPONSE_35 = "";
  public static final String ISSUE_INSTANT_ASSERTION_NOT_SPECIFIED_SAML_RESPONSE_36 = "";
  public static final String ISSUE_INSTANT_ASSERTION_MISSING_SAML_RESPONSE_37 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfOGNiYWE5NDAtYjhjNS00NzZkLWE4YTYtM2I1MDQ4NjY1MzQyIiBJblJlc3BvbnNlVG89Il8wYWZmNjMyNTA5MjFjY2UzZTllZGJmYzY2MDBmMjY5YyIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDA4OjM5OjI4WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfOGNiYWE5NDAtYjhjNS00NzZkLWE4YTYtM2I1MDQ4NjY1MzQyIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBkeEZQUS9XUW5UbnQrWUZubHlVckQzZmF0OEoyOUs4UElpUUZVVFZnSGc0PQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgSXNXOGpZNlc5bi9pcGJMTmhreDFEN0N0L1FxM1d3QlVqR2pOZ2hOUkhmWUx3QjNCNXF2TUVwM3J4ZWRkV2tjLzFiRWo3L2FZcWhWQ2pyK25wdDBXdDBzY1FWdU5saTQ1UEE2WVU1MmZNaTV3NzR0MkNnVk9FcERpR3c2eFZsM0RZNnFvclBuZmNmNjFOemJ5MDJacno0em4yajVrcmRTNXhYZ01xR3N6N1J6ZlpaWGNOSmExT0RIbk8wbVVBS1pFT1c0UnAySzBGNFRhZEpFWEozeG9Md3VMeUJzRUNVTGdDblBLVHVxeHhaeUJkeHZJdzIxY29KSFFyUWdHODBCY1ZjNys3UkdyUDlrTDF4dk9CYmNCUDRwZ3lZNXNvcFdsTlFrclRvc3o1aDJheXFjd21xRVMvMmpKNFlCQTNoUG5EdERYL1hwdGM4bmJUNFBFWlZKMjFnPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKICAgIAogICAgPHNhbWw6QXNzZXJ0aW9uIElEPSJfMDc0YmU5ZjItZmQ2MS00ZTEyLTlmMGEtMDhmNDc0ZTNiYzIyIiBWZXJzaW9uPSIyLjAiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij4KICAgICAgICAgICAgaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgIDwvc2FtbDpJc3N1ZXI+CiAgICAgICAgPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgICAgIDxkczpTaWduZWRJbmZvPgogICAgICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICA8ZHM6UmVmZXJlbmNlIFVSST0iI18wNzRiZTlmMi1mZDYxLTRlMTItOWYwYS0wOGY0NzRlM2JjMjIiPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICAgICAgPGRzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICBGUTJ0S3MxOEtDRE1UTDlaQVMvK0ZrWmpkbjFvdFQ0VWNHNEY0YUZUWERVPQogICAgICAgICAgICAgICAgICAgIDwvZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICA8L2RzOlJlZmVyZW5jZT4KICAgICAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgICAgICA8ZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgICAgICBQVzFuTnYyWXl0MVRnbG9MSDVDYnI0OVh2LzRGdllYSnNWNW1rbkpjbDNSZExHbzc5eGNCaEhYVFFpcEV3TXhTSkpVVUViNmlScGNEZkl6MVFhVFdlbjJWV29tUHVOUWpzblhZUlFjS2phMEM4K202Wm8yM2xHTlBQVnRUUDUxcHl3VE93NEZjQm9iNU9YUXdaVnhUYUgzaTNLaFJ2NFBGSVZqMUlZTFRUb1ZQN0g4Nm1YWktKaE9EMXY4d1VFc08wdUtnWUVBVXo2OW93WTg0NTE2dE9lZlRub0pNUmVJNnJTeUlKakg2Tk5WZ1pXMU9nZHJHQXJrZG9MamRNMVNZQVlXdUQwQ1ViVWxIWHI0MjZPdFB4K3hTMTdjeFlyVXRJSHJhVkZIam1qU0lrK1NDZXR1QUMwKzJPU3o4b2JMVklCMWhmVTI2YnI3NmdCTkhRQTI2VHc9PQogICAgICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgICAgICA8ZHM6S2V5SW5mbz4KICAgICAgICAgICAgICAgIDxkczpYNTA5RGF0YT4KICAgICAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgICAgICBNSUlFR0RDQ0F3Q2dBd0lCQWdJSkFPcllqOW9MRUpDd01BMEdDU3FHU0liM0RRRUJDd1VBTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQWVGdzB4T1RBME1URXhNREF5TURoYUZ3MHlOVEF6TURneE1EQXlNRGhhTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs4a0pWbyt1Z1JyYmJ2OXhoWEN1VnJxaTRCNy9NUXpRYzYyb2N3bEZGdWpKTmQ0bTFtWGtVSEZiZ3Z3aFJrUXFvMkRBbUZlSGl3Q2tKVDNLMWVlWElGaE5GRnJvRXpHUHpPTnlla0xwak52bVlJczFDRnZpckdPajBia0VpR2FLRXMrL3VtekdqeEloeTVKUWxxWEU5NnkxK0l6cDJRaEppbURLMC9LTmlqOEkxYnp4c2VQMFlnYzRTRnZlS1MrN1FPK1ByTHpXa2xFV0dNczRETTVaYzNWUks3ZzRMV1BXWmhLZEltQzFyblMrL2xFbUhTdkhpc2RWcC9ESnRiU3Jad1NZVFJ2VFR6NUlaRFNxNGtBenJEZnBqMTZoN2IzdDNuRkdjOFVvWTJSbzR0UlozYWhKMnIzYjc5eUs2QzVwaFk3Q0FBTnVXM2dEZGhWamlCTllzMENBd0VBQWFPQnlqQ0J4ekFkQmdOVkhRNEVGZ1FVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N3d2daY0dBMVVkSXdTQmp6Q0JqSUFVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N5aGFhUm5NR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZElJSkFPcllqOW9MRUpDd01Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpORnFYZy9WM2FpbUpLVW1VYXFtUUVFb1NjM3F2WEZJVHZUNWY1Ykt3OXlrL05WaFI2d25kTCt6LzI0aDFPZFJxczc2YmxnSDhrMTE2cVdOa2tEdHQwQWxTalFPeDVxdkZZaDFVdmlPak5kUkk0V2tZT05Tdyt2dWF2Y3grZkI2TzVKREhObU1oTXlTS1RubVJxVGt5aGpyY2g3emFGSVdVU1Y3aHNCdXhwcW1yV0RvTFdkWGJWM2VGSDNtSU5BNUFvSVkvbTBiWnR6WjdZTmdpRld6eFFnZWtweGQwdmNUc2VNbkNjWG5zQWxjdGRpcjBGb0NaenR4TXVaamxCandMVHRNNlJ5My80OExNTThaK2x3N05NY2lLTExUR1F5VThYbUtLU1NPaDBkR2g1THJsdDVHeElJSmtIODFDMFlpbVdlYno4NDY0UVBMM1JiTG5US2crYz0KICAgICAgICAgICAgICAgICAgICA8L2RzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgICAgIDwvZHM6S2V5SW5mbz4KICAgICAgICA8L2RzOlNpZ25hdHVyZT4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpTdWJqZWN0PgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIgTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdCI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBfNzM1MTFjNWQtNDRhYi00NGRiLWJmN2YtYWUxZDNlMzA5MDRmCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6TmFtZUlEPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBJblJlc3BvbnNlVG89Il8wYWZmNjMyNTA5MjFjY2UzZTllZGJmYzY2MDBmMjY5YyIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDA4OjExOjE1WiIgUmVjaXBpZW50PSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiLz4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOlN1YmplY3RDb25maXJtYXRpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpTdWJqZWN0PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTEwLTExVDA4OjM5OjI4WiIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDA4OjExOjE1WiI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgICAgICBodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQKICAgICAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpDb25kaXRpb25zPgogICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpBdXRoblN0YXRlbWVudCBBdXRobkluc3RhbnQ9IjIwMjQtMTAtMTFUMDg6Mzk6MjhaIiBTZXNzaW9uSW5kZXg9Il81NDcxNTZlMi1iYzJkLTRmY2MtODgwMy1mMjQxM2FjYmY0ZWEiPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgICAgICBodHRwczovL3d3dy5zcGlkLmdvdi5pdC9TcGlkTDIKICAgICAgICAgICAgICAgIDwvc2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0ic3BpZENvZGUiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgQUdJRC0wMDEKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPgogICAgICAgICAgICAgICAgICAgIFRJTklULUdEQVNEVjAwQTAxSDUwMUoKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAKICAgIAogICAgPC9zYW1sOkFzc2VydGlvbj4KICAgIAoKPC9zYW1scDpSZXNwb25zZT4=";
  public static final String ISSUE_INSTANT_ASSERTION_UNCORRECT_FORMAT_SAML_RESPONSE_38 = "";
  public static final String ISSUE_INSTANT_ASSERTION_BEFORE_REQUEST_INSTANT_SAML_RESPONSE_39 = "";
  public static final String ISSUE_INSTANT_ASSERTION_AFTER_REQUEST_INSTANT_SAML_RESPONSE_40 = "";
  public static final String SUBJECT_ELEMENT_ASSERTION_NOT_SPECIFIED_SAML_RESPONSE_41 = "";
  public static final String SUBJECT_ELEMENT_ASSERTION_MISSING_SAML_RESPONSE_42 = "";
  public static final String SUBJECT_NAME_ID_ASSERTION_NOT_SPECIFIED_SAML_RESPONSE_43 = "";
  public static final String SUBJECT_NAME_ID_ASSERTION_MISSING_SAML_RESPONSE_44 = "";
  public static final String SUBJECT_NAME_ID_ASSERTION_FORMAT_NOT_SPECIFIED_SAML_RESPONSE_45 = "";
  public static final String SUBJECT_NAME_ID_ASSERTION_FORMAT_MISSING_SAML_RESPONSE_46 = "";
  public static final String SUBJECT_NAME_ID_ASSERTION_FORMAT_DIFFERENT_SAML_RESPONSE_47 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfMmI4YmEwNzktYTA1OS00Mzg5LWEzMTktYjZhNzI1OWZmNmJjIiBJblJlc3BvbnNlVG89Il85ZjMzN2EwNjhjM2IyYjgwZGIyOGU0Yjg2MTFmODViNCIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDEwOjEyOjI1WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfMmI4YmEwNzktYTA1OS00Mzg5LWEzMTktYjZhNzI1OWZmNmJjIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBZdTcwTDM2dFpyZmJGcWE2VURhTzVYQ3p3YWhOZEVzMGMzRkxOVkdFMkxNPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgWVRzQXduTnYwcFJkZnBOaWYwM1VnN2podnlIZUhRb1BCd0M3ekMvdUVkZlBIbmxBZWl6b01LQXJJY2x2M2hQcFZlVTIzQ09FTDBiZmxsV3NPNUVvRWpTclNVdHQ1aWsxTysySmVYdFg3b3BmbTZyQ0JyanJSVjFsNStqQTJnMTZ6L215d242WWM5Mm5TS1F5aVp4NDJLYWMrYk9qdnNETVdXY0ZuYVZpa2x0cElLbHJNNEZNMmdKLzdQTTA3bTc3UUpQblVzK0pZU2pMQUdndTBEbXE5WHhhU0hITllJQzB1ZDVvQlFlNWZZWHB2SUwvVXArZ1lBM24ydnVHY2Z4U0R1VVh4UVR3UE9seDM3c3hDaVN3dUZsRis2MjhTcUNZYW5ML3d6R3kvc29QTHlJN3RMSWFVZ3Q0UWdGOUtxT2JYMTVSL1ZkbmJZc1YyZkFXam1ER1BRPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKICAgIAogICAgPHNhbWw6QXNzZXJ0aW9uIElEPSJfMTA5N2QzMWUtMjg5My00OWMwLTkzZDYtNmM2YzQ2NGQzNGJjIiBJc3N1ZUluc3RhbnQ9IjIwMjQtMTAtMTFUMTA6MTI6MjVaIiBWZXJzaW9uPSIyLjAiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij4KICAgICAgICAgICAgaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgIDwvc2FtbDpJc3N1ZXI+CiAgICAgICAgPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgICAgIDxkczpTaWduZWRJbmZvPgogICAgICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICA8ZHM6UmVmZXJlbmNlIFVSST0iI18xMDk3ZDMxZS0yODkzLTQ5YzAtOTNkNi02YzZjNDY0ZDM0YmMiPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICAgICAgPGRzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICBKS0F0QWdOem5qbTd1R2JVWU9nVXU4SnRoNWdvN0UyeTUxVU1zdUwyU0xVPQogICAgICAgICAgICAgICAgICAgIDwvZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICA8L2RzOlJlZmVyZW5jZT4KICAgICAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgICAgICA8ZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgICAgICBKbWRJYVNlNGlwdnQzbkN1QUlhaFAzb3lLWmxOalJva2pRMUk2S3hJWGFFcnloMGVWNTg2RzYrdmRWdEJkZDlackZSVERrcUszN2hpMHhwa3FDRVN0NE1PQkpvY2FNZjNMNlFJQ2RzcmdkNXB6cllNdjE2L2Q2clBjUUZlV3NOKzBXd1RJdnU2QU94bk9lM2o0SnY3cERIMVVOSlVQdmJucEhXVzNxK0FYSklrcnB1QzlzNUMzMGxBbXhZNnhzaTNHZWNVOXFqZjJMTDRGNitMOFUrTGxvSUtuR2l5MkQ5RkRIeno2MlFwUjNPbFZKbVpjWkpiRWpQZkxXYWI5RkxQWnlvdUwrNlNUcVFwZ1pzUzBFbWx1RXhqd2o3T2p4aVJzUDVLTFpYa1ZSbnBMR1J6WmtNemNsRFFZY0RhUnF3dE9UeGVtQUFDZzVMZ3N6b05wN2JhZHc9PQogICAgICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgICAgICA8ZHM6S2V5SW5mbz4KICAgICAgICAgICAgICAgIDxkczpYNTA5RGF0YT4KICAgICAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgICAgICBNSUlFR0RDQ0F3Q2dBd0lCQWdJSkFPcllqOW9MRUpDd01BMEdDU3FHU0liM0RRRUJDd1VBTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQWVGdzB4T1RBME1URXhNREF5TURoYUZ3MHlOVEF6TURneE1EQXlNRGhhTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs4a0pWbyt1Z1JyYmJ2OXhoWEN1VnJxaTRCNy9NUXpRYzYyb2N3bEZGdWpKTmQ0bTFtWGtVSEZiZ3Z3aFJrUXFvMkRBbUZlSGl3Q2tKVDNLMWVlWElGaE5GRnJvRXpHUHpPTnlla0xwak52bVlJczFDRnZpckdPajBia0VpR2FLRXMrL3VtekdqeEloeTVKUWxxWEU5NnkxK0l6cDJRaEppbURLMC9LTmlqOEkxYnp4c2VQMFlnYzRTRnZlS1MrN1FPK1ByTHpXa2xFV0dNczRETTVaYzNWUks3ZzRMV1BXWmhLZEltQzFyblMrL2xFbUhTdkhpc2RWcC9ESnRiU3Jad1NZVFJ2VFR6NUlaRFNxNGtBenJEZnBqMTZoN2IzdDNuRkdjOFVvWTJSbzR0UlozYWhKMnIzYjc5eUs2QzVwaFk3Q0FBTnVXM2dEZGhWamlCTllzMENBd0VBQWFPQnlqQ0J4ekFkQmdOVkhRNEVGZ1FVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N3d2daY0dBMVVkSXdTQmp6Q0JqSUFVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N5aGFhUm5NR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZElJSkFPcllqOW9MRUpDd01Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpORnFYZy9WM2FpbUpLVW1VYXFtUUVFb1NjM3F2WEZJVHZUNWY1Ykt3OXlrL05WaFI2d25kTCt6LzI0aDFPZFJxczc2YmxnSDhrMTE2cVdOa2tEdHQwQWxTalFPeDVxdkZZaDFVdmlPak5kUkk0V2tZT05Tdyt2dWF2Y3grZkI2TzVKREhObU1oTXlTS1RubVJxVGt5aGpyY2g3emFGSVdVU1Y3aHNCdXhwcW1yV0RvTFdkWGJWM2VGSDNtSU5BNUFvSVkvbTBiWnR6WjdZTmdpRld6eFFnZWtweGQwdmNUc2VNbkNjWG5zQWxjdGRpcjBGb0NaenR4TXVaamxCandMVHRNNlJ5My80OExNTThaK2x3N05NY2lLTExUR1F5VThYbUtLU1NPaDBkR2g1THJsdDVHeElJSmtIODFDMFlpbVdlYno4NDY0UVBMM1JiTG5US2crYz0KICAgICAgICAgICAgICAgICAgICA8L2RzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgICAgIDwvZHM6S2V5SW5mbz4KICAgICAgICA8L2RzOlNpZ25hdHVyZT4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpTdWJqZWN0PgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OmRpdmVyc29kYXRyYW5zaWVudCIgTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdCI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBfZmNhZTFjZDctYjI1Zi00MzliLTg1MDEtZTEyMjljN2M1OGFhCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6TmFtZUlEPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBJblJlc3BvbnNlVG89Il85ZjMzN2EwNjhjM2IyYjgwZGIyOGU0Yjg2MTFmODViNCIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDEwOjA1OjIwWiIgUmVjaXBpZW50PSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiLz4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOlN1YmplY3RDb25maXJtYXRpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpTdWJqZWN0PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTEwLTExVDEwOjEyOjI1WiIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDEwOjA1OjIwWiI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgICAgICBodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQKICAgICAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpDb25kaXRpb25zPgogICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpBdXRoblN0YXRlbWVudCBBdXRobkluc3RhbnQ9IjIwMjQtMTAtMTFUMTA6MTI6MjVaIiBTZXNzaW9uSW5kZXg9Il9mNDljZTQ3YS0yZGNkLTQ5OWUtOGI2ZC01NWVhODFkZjlhNmMiPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgICAgICBodHRwczovL3d3dy5zcGlkLmdvdi5pdC9TcGlkTDIKICAgICAgICAgICAgICAgIDwvc2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0ic3BpZENvZGUiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgQUdJRC0wMDEKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPgogICAgICAgICAgICAgICAgICAgIFRJTklULUdEQVNEVjAwQTAxSDUwMUoKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAKICAgIAogICAgPC9zYW1sOkFzc2VydGlvbj4KICAgIAoKPC9zYW1scDpSZXNwb25zZT4=";
  public static final String SUBJECT_NAME_ID_ASSERTION_NAME_QUALIFIER_NOT_SPECIFIED_SAML_RESPONSE_48 = "";
  public static final String SUBJECT_NAME_ID_ASSERTION_NAME_QUALIFIER_MISSING_SAML_RESPONSE_49 = "";
  public static final String SUBJECT_CONFIRMATION_ASSERTION_NOT_SPECIFIED_SAML_RESPONSE_51 = "";
  public static final String SUBJECT_CONFIRMATION_ASSERTION_MISSING_SAML_RESPONSE_52 = "";
  public static final String SUBJECT_CONFIRMATION_ASSERTION_METHOD_NOT_SPECIFIED_SAML_RESPONSE_53 = "";
  public static final String SUBJECT_CONFIRMATION_ASSERTION_METHOD_MISSING_SAML_RESPONSE_54 = "";
  public static final String SUBJECT_CONFIRMATION_ASSERTION_METHOD_DIFFERENT_SAML_RESPONSE_55 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_MISSING_SAML_RESPONSE_56 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_RECIPIENT_NOT_SPECIFIED_SAML_RESPONSE_57 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfZTZjM2JhM2ItOGZlNC00NTY0LTgzMjMtNmE1ODA0MDkzOGRmIiBJblJlc3BvbnNlVG89Il85NWMyYmE1ZDE4NzJhMDljN2RmNzQwYTg3MTg3YjlkYyIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDEyOjE2OjIzWiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfZTZjM2JhM2ItOGZlNC00NTY0LTgzMjMtNmE1ODA0MDkzOGRmIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICB5cjduQ09nSG83aCtBVERpNk1jZ2c3dSttb2R0NVhLek0yOVBRR3hmd1pjPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgZ0RaN1ZVN3dRcnJKRGZJT0pvQ2s4OFFXamRkaXBUR2N2Y1FJbTNldUVVdlgxYWUvSGl5cE8xbmZOTUM4KzFtVTdYWU5KNHpOUWpKVzUybGtUTnloN3g0NGI2WDFnb0IvcXZHNHhIN3VBYzErTjIzbXRJZjI4NjRKUEhZZGJ0NWNiNzA5dDExM0tlVVlEblp1SWNXSXgyUVdDOUM0MTk1VEdQKzJCMjFHb3hqVC9PNkdJWWsyWUJtZjhDdjloNUsxNEVTdll1a3FPOTAwWXZTTUNzZ1R4eWJLcGhHYUZUb1JHay9wRUdpR0NWSys4cnZSOW5mRGxjSXBpcE83ckVvVW9YRVgwNnk5Vk0rZnl2VFNkL3Y5RmtDazdJYzVndnBUMmVqN1djaUhtT2NIWlZHM2huV0Q0RjN1cVNXaWJlQytBb0I0cmhtM2VIQUFLQWxzVHBRVnFRPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKICAgIAogICAgPHNhbWw6QXNzZXJ0aW9uIElEPSJfNWFiZGNiZTYtMjY0YS00MjEyLTlmYmUtZTQ1Yjk2MTA0Y2U1IiBJc3N1ZUluc3RhbnQ9IjIwMjQtMTAtMTFUMTI6MTY6MjNaIiBWZXJzaW9uPSIyLjAiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij4KICAgICAgICAgICAgaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgIDwvc2FtbDpJc3N1ZXI+CiAgICAgICAgPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgICAgIDxkczpTaWduZWRJbmZvPgogICAgICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICA8ZHM6UmVmZXJlbmNlIFVSST0iI181YWJkY2JlNi0yNjRhLTQyMTItOWZiZS1lNDViOTYxMDRjZTUiPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICAgICAgPGRzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICBpV0Mvc0dLeGczeXNLTmc4ZDZqMCtyVm1YUEtzWDJ0SVBQTjdtaG1HdjQ4PQogICAgICAgICAgICAgICAgICAgIDwvZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICA8L2RzOlJlZmVyZW5jZT4KICAgICAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgICAgICA8ZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgICAgICBVU0ZpNi95VUQ4elhQcm5oVU9KdUt5VGh3bjIwOFI2YkUvNm1iVHNDTUl1K3pOVmVia2R1M2tnZTFoRHJTUlY5dnVXTVlsZzF5VDRJY3pNdmExcGZIKzhYNVJ4NDdmRHJWMHpWMGJXL2kyMzl3TTRMajg1MlJlcEN5bWh2dmlFQmpONHFJdmpmdVlEZ0NkNGZheEhOUzhkaDk3YSt1dDlobWZkMUE1clZINDlaZlBVZm54VmV3Q2pWa2h1bElmWFRHaGw4dDF2bElUd3p1WWFzQVppRmtYVnBHbnp1RldqbElOdE5RRytsb3VqeVhLWldJdS9VTi9pM283UHN5cVB5a2tReW1SbFRRWjVnSXh1cHBxem9HdGhRN2tSMFpDTFFhMythcGFHNndFMTVJUm10MjB4SnlyWFdkYWgzTzJhQlNZeW1JSUh1aU9rSUUyZC85MWpwbGc9PQogICAgICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgICAgICA8ZHM6S2V5SW5mbz4KICAgICAgICAgICAgICAgIDxkczpYNTA5RGF0YT4KICAgICAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgICAgICBNSUlFR0RDQ0F3Q2dBd0lCQWdJSkFPcllqOW9MRUpDd01BMEdDU3FHU0liM0RRRUJDd1VBTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQWVGdzB4T1RBME1URXhNREF5TURoYUZ3MHlOVEF6TURneE1EQXlNRGhhTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs4a0pWbyt1Z1JyYmJ2OXhoWEN1VnJxaTRCNy9NUXpRYzYyb2N3bEZGdWpKTmQ0bTFtWGtVSEZiZ3Z3aFJrUXFvMkRBbUZlSGl3Q2tKVDNLMWVlWElGaE5GRnJvRXpHUHpPTnlla0xwak52bVlJczFDRnZpckdPajBia0VpR2FLRXMrL3VtekdqeEloeTVKUWxxWEU5NnkxK0l6cDJRaEppbURLMC9LTmlqOEkxYnp4c2VQMFlnYzRTRnZlS1MrN1FPK1ByTHpXa2xFV0dNczRETTVaYzNWUks3ZzRMV1BXWmhLZEltQzFyblMrL2xFbUhTdkhpc2RWcC9ESnRiU3Jad1NZVFJ2VFR6NUlaRFNxNGtBenJEZnBqMTZoN2IzdDNuRkdjOFVvWTJSbzR0UlozYWhKMnIzYjc5eUs2QzVwaFk3Q0FBTnVXM2dEZGhWamlCTllzMENBd0VBQWFPQnlqQ0J4ekFkQmdOVkhRNEVGZ1FVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N3d2daY0dBMVVkSXdTQmp6Q0JqSUFVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N5aGFhUm5NR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZElJSkFPcllqOW9MRUpDd01Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpORnFYZy9WM2FpbUpLVW1VYXFtUUVFb1NjM3F2WEZJVHZUNWY1Ykt3OXlrL05WaFI2d25kTCt6LzI0aDFPZFJxczc2YmxnSDhrMTE2cVdOa2tEdHQwQWxTalFPeDVxdkZZaDFVdmlPak5kUkk0V2tZT05Tdyt2dWF2Y3grZkI2TzVKREhObU1oTXlTS1RubVJxVGt5aGpyY2g3emFGSVdVU1Y3aHNCdXhwcW1yV0RvTFdkWGJWM2VGSDNtSU5BNUFvSVkvbTBiWnR6WjdZTmdpRld6eFFnZWtweGQwdmNUc2VNbkNjWG5zQWxjdGRpcjBGb0NaenR4TXVaamxCandMVHRNNlJ5My80OExNTThaK2x3N05NY2lLTExUR1F5VThYbUtLU1NPaDBkR2g1THJsdDVHeElJSmtIODFDMFlpbVdlYno4NDY0UVBMM1JiTG5US2crYz0KICAgICAgICAgICAgICAgICAgICA8L2RzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgICAgIDwvZHM6S2V5SW5mbz4KICAgICAgICA8L2RzOlNpZ25hdHVyZT4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpTdWJqZWN0PgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIgTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdCI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBfYTFhZDM4ZjEtOTNiZi00NTYwLWI1NDQtMWIwNWI5NmJmNGRiCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6TmFtZUlEPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBJblJlc3BvbnNlVG89Il85NWMyYmE1ZDE4NzJhMDljN2RmNzQwYTg3MTg3YjlkYyIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDEyOjE4OjE0WiIgUmVjaXBpZW50PSIiLz4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOlN1YmplY3RDb25maXJtYXRpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpTdWJqZWN0PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTEwLTExVDEyOjE2OjIzWiIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDEyOjE4OjE0WiI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgICAgICBodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQKICAgICAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpDb25kaXRpb25zPgogICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpBdXRoblN0YXRlbWVudCBBdXRobkluc3RhbnQ9IjIwMjQtMTAtMTFUMTI6MTY6MjNaIiBTZXNzaW9uSW5kZXg9Il84MmRmNzY0MC05NDAxLTQ3NzEtYmU0ZC00ODA4MDg4MWQ4MWYiPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgICAgICBodHRwczovL3d3dy5zcGlkLmdvdi5pdC9TcGlkTDIKICAgICAgICAgICAgICAgIDwvc2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0ic3BpZENvZGUiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgQUdJRC0wMDEKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPgogICAgICAgICAgICAgICAgICAgIFRJTklULUdEQVNEVjAwQTAxSDUwMUoKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAKICAgIAogICAgPC9zYW1sOkFzc2VydGlvbj4KICAgIAoKPC9zYW1scDpSZXNwb25zZT4=";
  public static final String SUBJECT_CONFIRMATION_DATA_RECIPIENT_MISSING_SAML_RESPONSE_58 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_RECIPIENT_DIFFERENT_SAML_RESPONSE_59 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_IN_RESPONSE_TO_NOT_SPECIFIED_SAML_RESPONSE_60 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_IN_RESPONSE_TO_MISSING_SAML_RESPONSE_61 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_IN_RESPONSE_TO_DIFFERENT_SAML_RESPONSE_62 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER_NOT_DEFINED_SAML_RESPONSE_63 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER_MISSING_SAML_RESPONSE_64 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER_UNCORRECT_FORMAT_SAML_RESPONSE_65 = "";
  public static final String SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER_BEFORE_RESPONSE_INSTANT_SAML_RESPONSE_66 = "";
  public static final String ISSUER_ASSERTION_NOT_SPECIFIED_SAML_RESPONSE_67 = "";
  public static final String ISSUER_ASSERTION_MISSING_SAML_RESPONSE_68 = "";
  public static final String ISSUER_ASSERTION_DIFFERENT_SAML_RESPONSE_69 = "";
  public static final String ISSUER_ASSERTION_FORMAT_ATTRIBUTE_NOT_SPECIFIED_SAML_RESPONSE_70 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfNzVlYTcwNDEtNjM1ZS00Nzg4LTk5NzktZTYyZDNhNDMyZTEwIiBJblJlc3BvbnNlVG89Il85NWMyYmE1ZDE4NzJhMDljN2RmNzQwYTg3MTg3YjlkYyIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDEyOjQyOjAzWiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfNzVlYTcwNDEtNjM1ZS00Nzg4LTk5NzktZTYyZDNhNDMyZTEwIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBIWkpxRG16bmovdzVKNHAvb0V1TzBqc2U3ZVN0S3NkbnhwZ3YyVXJITWF3PQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgWWdXSGltU2w1eUN1ZkJ0eFZZSE9icWJ5bmp6azVlQWU0TUE5bVV2L1JaMkdOK3d2dW5CSG15MkFSVGxFNi9QUFdwL3E3YVVWUUJkYVZFc0dqM1NjamxZdmdpeFBYS01GMjRDcHg0MmNVV2VGandVM2pyTGZ5K2pBSEo3Q2FxZGF6Qmw3TnU2QTNWSzlYZVRzZktESndvU1dleHEvRzM2cDZ5TVhhRkZrWnZtd3luK2p3dWlpWTF3YlBoVG92RklPNHRxWlppT1ZVMlFzUURQWmE0bHNZQmNEU3BnZkNRdUNYZ0ExMGNNaVFDZzB4RHhqcjc4cDNEdE1iMGo5OVBZRXNJcFpYdjAzNlRMZU5XYmFOaVUzOXljY0NvM1ptZE5NTVdidy91NDBub0orM3g5ejZRb25EaWZNVmc4SXdyZ1RyWHVVdElLZmM2OWhDa2tzQm9nU3J3PT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKICAgIAogICAgPHNhbWw6QXNzZXJ0aW9uIElEPSJfNzRiNzU2MDItMWM4ZC00MjQ2LWFjY2UtNjMzMTVjMjI5NmRhIiBJc3N1ZUluc3RhbnQ9IjIwMjQtMTAtMTFUMTI6NDI6MDNaIiBWZXJzaW9uPSIyLjAiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0iIj4KICAgICAgICAgICAgaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgIDwvc2FtbDpJc3N1ZXI+CiAgICAgICAgPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgICAgIDxkczpTaWduZWRJbmZvPgogICAgICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICA8ZHM6UmVmZXJlbmNlIFVSST0iI183NGI3NTYwMi0xYzhkLTQyNDYtYWNjZS02MzMxNWMyMjk2ZGEiPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICAgICAgPGRzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICA4RUF4dG9ZaHJEWWxTTWlyT2JBZW5qWW1qVk9uLzZ4VVhhOEIyeW0yQUpNPQogICAgICAgICAgICAgICAgICAgIDwvZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICA8L2RzOlJlZmVyZW5jZT4KICAgICAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgICAgICA8ZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgICAgICBBc0FOWE9HYlJlZmtUc3pTWURpa3N4UEEvb2tuYjJsdXFnbm9JYjdLWDRja0gvUVNCUTJ5c3FWWUNwS1FteTQxOGl2RUdOeDVnZExmaTQ3T1R0RFdybEpzNGJSRHBUWitpZmpuYXd2Q25zUDdJc3lFVzNVckltZzUvNG53aDFBM1A0SVU4SEpzMC9xUFdxQlNxUVpxYkpMN1ovUmdZcU83bURHR3FUTW16Z3ZaNHgrSU5LL2VmMnBmdWxxYU1hQjZHZjJXeVlRUjNsYjUyR3BmR0oyNWJsT2VJOVFTbE1abFJZdk5ET0Q4QjFaVHlYbEVCbHhnT2Q1WG9KTCtlemo1UEN4RWltMnVpSHl1RUpSYURzRFRsWWxYbGhCSmdNU0lGL0hacjV0b3BMNWVWd3hidldRS3Yybm9PWmcvVGpJQldoQXh4V3hmeXVoVExUWXlzTmtzNUE9PQogICAgICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgICAgICA8ZHM6S2V5SW5mbz4KICAgICAgICAgICAgICAgIDxkczpYNTA5RGF0YT4KICAgICAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgICAgICBNSUlFR0RDQ0F3Q2dBd0lCQWdJSkFPcllqOW9MRUpDd01BMEdDU3FHU0liM0RRRUJDd1VBTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQWVGdzB4T1RBME1URXhNREF5TURoYUZ3MHlOVEF6TURneE1EQXlNRGhhTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs4a0pWbyt1Z1JyYmJ2OXhoWEN1VnJxaTRCNy9NUXpRYzYyb2N3bEZGdWpKTmQ0bTFtWGtVSEZiZ3Z3aFJrUXFvMkRBbUZlSGl3Q2tKVDNLMWVlWElGaE5GRnJvRXpHUHpPTnlla0xwak52bVlJczFDRnZpckdPajBia0VpR2FLRXMrL3VtekdqeEloeTVKUWxxWEU5NnkxK0l6cDJRaEppbURLMC9LTmlqOEkxYnp4c2VQMFlnYzRTRnZlS1MrN1FPK1ByTHpXa2xFV0dNczRETTVaYzNWUks3ZzRMV1BXWmhLZEltQzFyblMrL2xFbUhTdkhpc2RWcC9ESnRiU3Jad1NZVFJ2VFR6NUlaRFNxNGtBenJEZnBqMTZoN2IzdDNuRkdjOFVvWTJSbzR0UlozYWhKMnIzYjc5eUs2QzVwaFk3Q0FBTnVXM2dEZGhWamlCTllzMENBd0VBQWFPQnlqQ0J4ekFkQmdOVkhRNEVGZ1FVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N3d2daY0dBMVVkSXdTQmp6Q0JqSUFVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N5aGFhUm5NR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZElJSkFPcllqOW9MRUpDd01Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpORnFYZy9WM2FpbUpLVW1VYXFtUUVFb1NjM3F2WEZJVHZUNWY1Ykt3OXlrL05WaFI2d25kTCt6LzI0aDFPZFJxczc2YmxnSDhrMTE2cVdOa2tEdHQwQWxTalFPeDVxdkZZaDFVdmlPak5kUkk0V2tZT05Tdyt2dWF2Y3grZkI2TzVKREhObU1oTXlTS1RubVJxVGt5aGpyY2g3emFGSVdVU1Y3aHNCdXhwcW1yV0RvTFdkWGJWM2VGSDNtSU5BNUFvSVkvbTBiWnR6WjdZTmdpRld6eFFnZWtweGQwdmNUc2VNbkNjWG5zQWxjdGRpcjBGb0NaenR4TXVaamxCandMVHRNNlJ5My80OExNTThaK2x3N05NY2lLTExUR1F5VThYbUtLU1NPaDBkR2g1THJsdDVHeElJSmtIODFDMFlpbVdlYno4NDY0UVBMM1JiTG5US2crYz0KICAgICAgICAgICAgICAgICAgICA8L2RzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgICAgIDwvZHM6S2V5SW5mbz4KICAgICAgICA8L2RzOlNpZ25hdHVyZT4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpTdWJqZWN0PgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIgTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdCI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBfMWFiOGFiZTMtYTJkMS00YzdlLTg4MjktYmJlOTlmNGE5NjAyCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6TmFtZUlEPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBJblJlc3BvbnNlVG89Il85NWMyYmE1ZDE4NzJhMDljN2RmNzQwYTg3MTg3YjlkYyIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDEyOjE4OjE0WiIgUmVjaXBpZW50PSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiLz4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOlN1YmplY3RDb25maXJtYXRpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpTdWJqZWN0PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTEwLTExVDEyOjQyOjAzWiIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDEyOjE4OjE0WiI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgICAgICBodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQKICAgICAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpDb25kaXRpb25zPgogICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpBdXRoblN0YXRlbWVudCBBdXRobkluc3RhbnQ9IjIwMjQtMTAtMTFUMTI6NDI6MDNaIiBTZXNzaW9uSW5kZXg9Il84MDY3NTEyMS1lYjUyLTRmOTktODBkOC04ZGMxN2UxNDM3Y2MiPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgICAgICBodHRwczovL3d3dy5zcGlkLmdvdi5pdC9TcGlkTDIKICAgICAgICAgICAgICAgIDwvc2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0ic3BpZENvZGUiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgQUdJRC0wMDEKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPgogICAgICAgICAgICAgICAgICAgIFRJTklULUdEQVNEVjAwQTAxSDUwMUoKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAKICAgIAogICAgPC9zYW1sOkFzc2VydGlvbj4KICAgIAoKPC9zYW1scDpSZXNwb25zZT4=";
  public static final String ISSUER_ASSERTION_FORMAT_ATTRIBUTE_MISSING_SAML_RESPONSE_71 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfZjUwYzE3ODMtNDFhNC00ZjVhLTg1NjktYjU5MmZlNjM4Njg5IiBJblJlc3BvbnNlVG89Il85NWMyYmE1ZDE4NzJhMDljN2RmNzQwYTg3MTg3YjlkYyIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDEyOjQzOjA1WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfZjUwYzE3ODMtNDFhNC00ZjVhLTg1NjktYjU5MmZlNjM4Njg5Ij4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBGVGw4RlczOGZkbFNDcEVvVFJlcEtZZXgwUS9DZys1Vld0bmRhOE1GR1VvPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgYU9QV0o4MDRNSTh3NTVHWit2K215bU5SMktjZjhHRzQwdjJqaVZOc1lJQVZTR1k2YW1vR1ZxRHpvZGVoVW0wREtvVWwwQitqYS9hMjdvcnJyUVRWSFdWUisrbjRnM1NDUEFpY1BCUllhdXFpQTNyV3hSNXJXNy9wM2prMlBkTFFjZWxJSFcvNHBzNVVVa1kzRmEvbG1wcnJWVThBc3JvVks4ZWJwb2RwWDFTTDlkV0ROdmdZWTdGd2tPL2hMeVd4ajRNNHluQ21rdWc0a3RUNGpzTC8rV2s0WkJ6b2lrbHNXUE5yUlpJOGwwMk1MTUxsbFRMWGhjWjFsL29LWU5vZGNCQlNQRjc2YSt1YXZWZStkSXN2MThGcThqYWg5ZG1HaWwyb2N1UnBPUTd3eW52NWozdEk3QXgxVTR6L0doQ2hERFNuR0Q5L01vV1hvRU13RDJSSnZ3PT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKICAgIAogICAgPHNhbWw6QXNzZXJ0aW9uIElEPSJfODA1MmIwMzItODM2ZS00MDQ0LWEyMWQtZDQwMjdiZWVhYjY3IiBJc3N1ZUluc3RhbnQ9IjIwMjQtMTAtMTFUMTI6NDM6MDVaIiBWZXJzaW9uPSIyLjAiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6SXNzdWVyPgogICAgICAgICAgICBodHRwczovL3ZhbGlkYXRvci5kZXYub25laWQucGFnb3BhLml0CiAgICAgICAgPC9zYW1sOklzc3Vlcj4KICAgICAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICAgICAgPGRzOlNpZ25lZEluZm8+CiAgICAgICAgICAgICAgICA8ZHM6Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpSZWZlcmVuY2UgVVJJPSIjXzgwNTJiMDMyLTgzNmUtNDA0NC1hMjFkLWQ0MDI3YmVlYWI2NyI+CiAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybXM+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+CiAgICAgICAgICAgICAgICAgICAgPC9kczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgIE9OY25UR0tkREhaYTR3TjZBNVhXVEpVR0RCMldhVjgvbEJISTVHSVh3elU9CiAgICAgICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgIDwvZHM6UmVmZXJlbmNlPgogICAgICAgICAgICA8L2RzOlNpZ25lZEluZm8+CiAgICAgICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgICAgIERYZU4xaDNFYTgrbU5aVkIzZ3lHUkhMS2dyOTJLb2dzUGEySFhBWkRjYUVRU09paDF0MGhYMzgzVmdIWFR1NWFJREJYSjNPRWZIOENuN3pZR3BoOXRXUkkvWHRuSmNwUC8xZzZ5MEhPVStjbjZpVmtORFg0d3VLMUdTNG9sZXBROWxkODU5UEZwNVhKNmNkZ2h5d2pyZE9odUEyOStLSXJXQ25NeVV3SGVUM1B3U0lSZjJwajUwdTBkVGZMdTFJQU9mcFpnRWFseXBXdUdyS2daOS9jb0Q5aUs3cVArRHBMdy8reSt2S2RzTFBKWGhrS2RsWlhDUGVKamNtcFBHbVBrL3U5dmtVWk4zNktFYmFWelc0WHZSa2ZoUE1TbityOWFlVWlwandIZWMxdWVVR1FwU0RvU01rS1hQcWVYYmduRVlNVHlxQTcxMWMyMndmeU54OHIwQT09CiAgICAgICAgICAgIDwvZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICAgICAgPGRzOlg1MDlEYXRhPgogICAgICAgICAgICAgICAgICAgIDxkczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgICAgIDwvZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgPC9kczpYNTA5RGF0YT4KICAgICAgICAgICAgPC9kczpLZXlJbmZvPgogICAgICAgIDwvZHM6U2lnbmF0dXJlPgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOlN1YmplY3Q+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6TmFtZUlEIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6dHJhbnNpZW50IiBOYW1lUXVhbGlmaWVyPSJodHRwczovL3ZhbGlkYXRvci5kZXYub25laWQucGFnb3BhLml0Ij4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIF84YzJlYzkwYi01YjViLTQzMDgtYjJjMS00M2Y0NmQzYzJhOTgKICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpOYW1lSUQ+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6U3ViamVjdENvbmZpcm1hdGlvbiBNZXRob2Q9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpjbTpiZWFyZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb25EYXRhIEluUmVzcG9uc2VUbz0iXzk1YzJiYTVkMTg3MmEwOWM3ZGY3NDBhODcxODdiOWRjIiBOb3RPbk9yQWZ0ZXI9IjIwMjQtMTAtMTFUMTI6MTg6MTRaIiBSZWNpcGllbnQ9Imh0dHBzOi8vZGV2Lm9uZWlkLnBhZ29wYS5pdC9zYW1sL2FjcyIvPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6U3ViamVjdENvbmZpcm1hdGlvbj4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOlN1YmplY3Q+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6Q29uZGl0aW9ucyBOb3RCZWZvcmU9IjIwMjQtMTAtMTFUMTI6NDM6MDVaIiBOb3RPbk9yQWZ0ZXI9IjIwMjQtMTAtMTFUMTI6MTg6MTRaIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdWRpZW5jZVJlc3RyaWN0aW9uPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF1ZGllbmNlPgogICAgICAgICAgICAgICAgICAgIGh0dHBzOi8vZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkNvbmRpdGlvbnM+CiAgICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF1dGhuU3RhdGVtZW50IEF1dGhuSW5zdGFudD0iMjAyNC0xMC0xMVQxMjo0MzowNVoiIFNlc3Npb25JbmRleD0iXzg5ZmNlNzRiLWRmNTYtNGRlNC1hODExLTQ4ODdkZGU3ODc2MSI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXV0aG5Db250ZXh0PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPgogICAgICAgICAgICAgICAgICAgIGh0dHBzOi8vd3d3LnNwaWQuZ292Lml0L1NwaWRMMgogICAgICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXV0aG5Db250ZXh0PgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWw6QXV0aG5TdGF0ZW1lbnQ+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6QXR0cmlidXRlU3RhdGVtZW50PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJzcGlkQ29kZSIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDpiYXNpYyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHNhbWw6QXR0cmlidXRlVmFsdWUgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4c2k6dHlwZT0ieHM6c3RyaW5nIj4KICAgICAgICAgICAgICAgICAgICBBR0lELTAwMQogICAgICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJmaXNjYWxOdW1iZXIiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgVElOSVQtR0RBU0RWMDBBMDFINTAxSgogICAgICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L3NhbWw6QXR0cmlidXRlU3RhdGVtZW50PgogICAgICAgIAogICAgCiAgICA8L3NhbWw6QXNzZXJ0aW9uPgogICAgCgo8L3NhbWxwOlJlc3BvbnNlPg==";
  public static final String ISSUER_ASSERTION_FORMAT_ATTRIBUTE_MISSING_SAML_RESPONSE_72 = "";
  public static final String CONDITIONS_ELEMENT_NOT_SPECIFIED_SAML_RESPONSE_73 = "";
  public static final String CONDITIONS_ELEMENT_MISSING_SAML_RESPONSE_74 = "";
  public static final String CONDITIONS_ELEMENT_NOT_BEFORE_NOT_SPECIFIED_SAML_RESPONSE_75 = "";
  public static final String CONDITIONS_ELEMENT_NOT_BEFORE_MISSING_SAML_RESPONSE_76 = "";
  public static final String CONDITIONS_ELEMENT_NOT_BEFORE_UNCORRECT_FORMAT_SAML_RESPONSE_77 = "";
  public static final String CONDITIONS_ELEMENT_NOT_BEFORE_AFTER_RESPONSE_SAML_RESPONSE_78 = "";
  public static final String CONDITIONS_ELEMENT_NOT_ON_OR_AFTER_NOT_SPECIFIED_SAML_RESPONSE_79 = "";
  public static final String NOT_ON_OR_AFTER_MISSING_SAML_RESPONSE_80 = "";
  public static final String NOT_ON_OR_AFTER_WITH_INCORRECT_FORMAT_SAML_RESPONSE_81 = "";
  public static final String NOT_ON_OR_AFTER_BEFORE_RESPONSE_RECEPTION_SAML_RESPONSE_82 = "";
  public static final String ASSERTION_UNSPECIFIED_SAML_RESPONSE_83 = "";
  public static final String ASSERTION_MISSING_SAML_RESPONSE_84 = "";
  public static final String AUDIENCE_UNSPECIFIED_SAML_RESPONSE_85 = "";
  public static final String AUDIENCE_MISSING_SAML_RESPONSE_86 = "";
  public static final String AUDIENCE_DIFFERENT_THAN_ENTITY_ID_OF_SP_SAML_RESPONSE_87 = "";
  public static final String AUTH_STATEMENT_UNSPECIFIED_SAML_RESPONSE_88 = "";
  public static final String AUTH_STATEMENT_MISSING_SAML_RESPONSE_89 = "";
  public static final String AUTH_CONTEXT_UNSPECIFIED_SAML_RESPONSE_SAML_RESPONSE_90 = "";
  public static final String AUTH_CONTEXT_MISSING_SAML_RESPONSE_SAML_RESPONSE_91 = "";
  public static final String AUTH_CONTEXT_CLASS_REF_UNSPECIFIED_SAML_RESPONSE_92 = "";
  public static final String AUTH_CONTEXT_CLASS_REF_MISSING_SAML_RESPONSE_93 = "";
  public static final String AUTH_CONTEXT_CLASS_REF_WITH_L1_VALUE_SAML_RESPONSE_94 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfNDMwN2NmZmYtNWJkMC00ZTI1LTgwMzYtM2Y3ZGJmMDI1NmUzIiBJblJlc3BvbnNlVG89Il80YWI3NjZlNDhkZTAxZjViNTFjYjE4NmU2NGU2NjcyYiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDE0OjM2OjQzWiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfNDMwN2NmZmYtNWJkMC00ZTI1LTgwMzYtM2Y3ZGJmMDI1NmUzIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBPdHN5eGZ0M0srdDMyN0xGRU83bzZqSUxJY2VFY0x6bkduazZxVWt6TGlFPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAga3VtQm9KS013emY5RHhEaEpRSThQdEM2ckY4VEdPZUtJVmV2eXF1dkQvR1dQajRnQXJiSnc3Mkh6ZjN6bndQTlVVbjJ3c2tBWUpOWEFCMzBuOGJDTmpiblNVZERDWFZPdDI4aDg0ZzgzcTE1UDBWOXNseUZwRHRmUVcwVHdOYy9TbUlHUjV3QzhEdFVwdzVneFp2L2FWaktEaWQxWlVVTTI0dWdmajV0MDdndENJZkJpTkxEajBmV0pLSEJEUVA4cFFlTFlFbmhMb2NGQXd1NVNlbVhZUHd0TXBKYzZRVkJaWCtoN3FvamxzT2tMV2VrQXdmTktHeFhvOHZURlVDQTVIZWxnTEQrYkljQVlyTVRXNWNyck83UUpNSDBRWHFOVE1sNzhQUUQxUDlibmdOaXRPWHZwdC8rRkowKzNlZlBuNVpVOEJBTkNBdmtRRUNBaWM2YkJ3PT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKICAgIAogICAgPHNhbWw6QXNzZXJ0aW9uIElEPSJfYzNlZmNjMGUtOWRiMy00OGY0LTlmZmMtNWQ4MGI0NzM1Njk4IiBJc3N1ZUluc3RhbnQ9IjIwMjQtMTAtMTFUMTQ6MzY6NDNaIiBWZXJzaW9uPSIyLjAiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij4KICAgICAgICAgICAgaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgIDwvc2FtbDpJc3N1ZXI+CiAgICAgICAgPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgICAgIDxkczpTaWduZWRJbmZvPgogICAgICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICA8ZHM6UmVmZXJlbmNlIFVSST0iI19jM2VmY2MwZS05ZGIzLTQ4ZjQtOWZmYy01ZDgwYjQ3MzU2OTgiPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICAgICAgPGRzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICA5UHV2eGV1RjNod2l0UHBFQU5RL0J6d1hMNXI1THQ3TnRtVjJuU3JQaDdvPQogICAgICAgICAgICAgICAgICAgIDwvZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICA8L2RzOlJlZmVyZW5jZT4KICAgICAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgICAgICA8ZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgICAgICBmdlhLVVI3SWoxMU0wZE5LRXJvUG1MVUd0Q2tFa0VISjBrTm0vMnRQZFdDdlVqU2dzM1ZpNEc1d3pYWW4ybGJGMURGejZtL2FiRFhUdmNSR1NoVms1YnJaVkwvb3BwSGdFSGNqWFlUZkI2ZTFpSXNlZDUyV3ZYbEVnWHhPc0F0YXhwTXRmSUZuMlJORm12NjJVYU90eGQ5MFUvM0FhbkFLK202aUFvMjJVUkpNMzZDZnNSRURCK3k5Nk91NnFqMVZ6aEhtb0lMUWxIQkV3aUtSMW9pLzZadHBSVWVkVEZoYjE2cTkwRCtjRW5LMEkxVnBVVmkxTDUxejJhMlhsUlJpcTUydFR0Z0t6MnBZRFZ3ZGx6bVV0eUV0eXE2ODZqcDdia3Q3NTVubUdRWjU2ZjRmOVhEQWNtckN4YWZDdWg3QjdlelBWTHMrZWpxc0x3YkVWZVhaVFE9PQogICAgICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgICAgICA8ZHM6S2V5SW5mbz4KICAgICAgICAgICAgICAgIDxkczpYNTA5RGF0YT4KICAgICAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgICAgICBNSUlFR0RDQ0F3Q2dBd0lCQWdJSkFPcllqOW9MRUpDd01BMEdDU3FHU0liM0RRRUJDd1VBTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQWVGdzB4T1RBME1URXhNREF5TURoYUZ3MHlOVEF6TURneE1EQXlNRGhhTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs4a0pWbyt1Z1JyYmJ2OXhoWEN1VnJxaTRCNy9NUXpRYzYyb2N3bEZGdWpKTmQ0bTFtWGtVSEZiZ3Z3aFJrUXFvMkRBbUZlSGl3Q2tKVDNLMWVlWElGaE5GRnJvRXpHUHpPTnlla0xwak52bVlJczFDRnZpckdPajBia0VpR2FLRXMrL3VtekdqeEloeTVKUWxxWEU5NnkxK0l6cDJRaEppbURLMC9LTmlqOEkxYnp4c2VQMFlnYzRTRnZlS1MrN1FPK1ByTHpXa2xFV0dNczRETTVaYzNWUks3ZzRMV1BXWmhLZEltQzFyblMrL2xFbUhTdkhpc2RWcC9ESnRiU3Jad1NZVFJ2VFR6NUlaRFNxNGtBenJEZnBqMTZoN2IzdDNuRkdjOFVvWTJSbzR0UlozYWhKMnIzYjc5eUs2QzVwaFk3Q0FBTnVXM2dEZGhWamlCTllzMENBd0VBQWFPQnlqQ0J4ekFkQmdOVkhRNEVGZ1FVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N3d2daY0dBMVVkSXdTQmp6Q0JqSUFVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N5aGFhUm5NR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZElJSkFPcllqOW9MRUpDd01Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpORnFYZy9WM2FpbUpLVW1VYXFtUUVFb1NjM3F2WEZJVHZUNWY1Ykt3OXlrL05WaFI2d25kTCt6LzI0aDFPZFJxczc2YmxnSDhrMTE2cVdOa2tEdHQwQWxTalFPeDVxdkZZaDFVdmlPak5kUkk0V2tZT05Tdyt2dWF2Y3grZkI2TzVKREhObU1oTXlTS1RubVJxVGt5aGpyY2g3emFGSVdVU1Y3aHNCdXhwcW1yV0RvTFdkWGJWM2VGSDNtSU5BNUFvSVkvbTBiWnR6WjdZTmdpRld6eFFnZWtweGQwdmNUc2VNbkNjWG5zQWxjdGRpcjBGb0NaenR4TXVaamxCandMVHRNNlJ5My80OExNTThaK2x3N05NY2lLTExUR1F5VThYbUtLU1NPaDBkR2g1THJsdDVHeElJSmtIODFDMFlpbVdlYno4NDY0UVBMM1JiTG5US2crYz0KICAgICAgICAgICAgICAgICAgICA8L2RzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgICAgIDwvZHM6S2V5SW5mbz4KICAgICAgICA8L2RzOlNpZ25hdHVyZT4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpTdWJqZWN0PgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIgTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdCI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBfZmY3MjAxNzItZDk3ZS00NzYyLThkZGEtOTNlMzExYmE2ZGY5CiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6TmFtZUlEPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBJblJlc3BvbnNlVG89Il80YWI3NjZlNDhkZTAxZjViNTFjYjE4NmU2NGU2NjcyYiIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDE0OjE1OjA1WiIgUmVjaXBpZW50PSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiLz4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOlN1YmplY3RDb25maXJtYXRpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpTdWJqZWN0PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTEwLTExVDE0OjM2OjQzWiIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDE0OjE1OjA1WiI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgICAgICBodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQKICAgICAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpDb25kaXRpb25zPgogICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpBdXRoblN0YXRlbWVudCBBdXRobkluc3RhbnQ9IjIwMjQtMTAtMTFUMTQ6MzY6NDNaIiBTZXNzaW9uSW5kZXg9Il82ZDJkMjNjYS0xZTQ4LTQ1NWQtOTE4Zi0wN2RkMjE5ZmI2ZTUiPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgICAgICBodHRwczovL3d3dy5zcGlkLmdvdi5pdC9TcGlkTDEKICAgICAgICAgICAgICAgIDwvc2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0ic3BpZENvZGUiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgQUdJRC0wMDEKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPgogICAgICAgICAgICAgICAgICAgIFRJTklULUdEQVNEVjAwQTAxSDUwMUoKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAKICAgIAogICAgPC9zYW1sOkFzc2VydGlvbj4KICAgIAoKPC9zYW1scDpSZXNwb25zZT4=";
  public static final String AUTH_CONTEXT_CLASS_REF_WITH_L2_VALUE_SAML_RESPONSE_95 = "";
  public static final String AUTH_CONTEXT_CLASS_REF_WITH_L3_VALUE_SAML_RESPONSE_96 = "";
  public static final String AUTH_CONTEXT_CLASS_REF_WITH_UNEXPECTED_VALUE_SAML_RESPONSE_97 = "";
  public static final String ATTRIBUTE_STATEMENT_PRESENT_BUT_WITH_SUBELEMENT_ATTRIBUTE_MISSING_SAML_RESPONSE_98 = "";
  public static final String ATTRIBUTE_STATEMENT_PRESENT_BUT_WITH_SUBELEMENT_ATTRIBUTE_UNSPECIFIED_SAML_RESPONSE_99 = "";
  public static final String DIFFERENT_SIGNATURE_SAML_RESPONSE_100 = "";
  public static final String SENT_ATTRIBUTE_SET_DIFFERENT_THAN_REQUESTED_SAML_RESPONSE_103 = "";
  public static final String REPEATED_WRONG_CREDENTIALS_SUBMITTED_SAML_RESPONSE_104 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfZWZjNTcwNmItNWI3OS00YTZlLWJkMDYtZGExNjZkZjA2MGRlIiBJblJlc3BvbnNlVG89Il80YWI3NjZlNDhkZTAxZjViNTFjYjE4NmU2NGU2NjcyYiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDE0OjE5OjUwWiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfZWZjNTcwNmItNWI3OS00YTZlLWJkMDYtZGExNjZkZjA2MGRlIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBTS25uMFZ5QmRjMVNWSTRZbUtRRTZyNXBBT1JpeE5SOHlnMm9VZUx4Z2wwPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgajV0UTd5Ri9paXA4cDBnWTlQTVl6c29YY3ByWjlnQ3ZUem5qWTFncWQyN013RDBCRXQvdi91YWw2UkllalJDaEhMSGxoYjVLRHh4MVNwWkVxYzFFYm5IakZzZkQ0c09nbEFXNWxEOTRUSC9qVThYSENqL1h6YW5vZGpTaTFEOGhjYlFrNjF4OWxidU1CMXI5WXJtUXhiWXJvNWJTeHF2a1lDYTlwRzFTRW9QbXkwcHRtNTNEcDQxeU9PM0VPVXFuZldrRWZ1SlI1dU1QQkJEQWk1Q01wdGRjZ2ZENWxUT2l0YXZJNlNTTnUvelhWWjRwU3YvVFJxTGxralpQY3FPYVU2WW5BekM3WmM4RVg3bEdCb2MzUUZhZE1kMVh4UVlKSURBaWcxVGJUU09xQkhtd05CbG5NUG9mQnBGZlExbFhac0xyNjdZLzUwRlRMbDQ0UHpxVTVRPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjE5CiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String USER_WITHOUT_COMPATIBLE_CREDENTIALS_SAML_RESPONSE_105 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfODM1NDllNmItYWQ1OS00MTEzLWE1MTItMDBmMmI0Y2U4Y2Q0IiBJblJlc3BvbnNlVG89Il80YWI3NjZlNDhkZTAxZjViNTFjYjE4NmU2NGU2NjcyYiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDE0OjE4OjA3WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfODM1NDllNmItYWQ1OS00MTEzLWE1MTItMDBmMmI0Y2U4Y2Q0Ij4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBPeld3ZWl3b2ZoQURQcE9ISGZLMnNBaUc1MWRKc1BRcDhibis3TmdwZGRZPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgWVFhRnRHRndqTWovOUZWVUJuYWdaWW91MURWRWhmVkM5NVV5M2Fuc0Y0VStESk9DVERENW42S2xoM095MU04YkRPaTRxRDN0dWxIUk9RTXVIWTh0Z0QwTUVXbGJNdWlHN28xM2VXa2tmR0IzK1BVVWJaMytkYTMyVDcwOG9IZkwrSDZGbk53ZzRIcnZ0V2FJSnB1dFZuMEZ5R0JkNmJxaklHY2laR1NsRGhVb2dFTXM3YUZxNW81aTRDOXdoZG80K1pxKzNJQ1VqN1UwUjhaVE9iOFRzYWJVSllhY0t5Tnh2UzRGLzQvRG5TeHI1Y21GRDlGZzJmWW9qbTlXQnI2WlVOQ0VKRTVmZFVPaUd4dWFJM2VjcVh1SFprVVkrdXRSMmYvcDJtVXB6WkEwOHUwVXVJM2QvQkNHMCtvL0ZNSGpJUkFVb1BndFdOUFdHYk90WlRXc2pnPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjIwCiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String TIMEOUT_SAML_RESPONSE_106 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfNTg5OGEyNzEtZWMwMy00MjAxLTk3MTEtNDQ5NTg2ZWJhMmVhIiBJblJlc3BvbnNlVG89Il80YWI3NjZlNDhkZTAxZjViNTFjYjE4NmU2NGU2NjcyYiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDE0OjE1OjU1WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfNTg5OGEyNzEtZWMwMy00MjAxLTk3MTEtNDQ5NTg2ZWJhMmVhIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBId1pIR1B5OWg5NCtNNjJ0NktPTGo4TmxhYUlWbm5RWE9RM2hnNmZNWGFzPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgSURaeWVyZ3hKTDl3U2RJbEt3RklWdlJsRjM2WDJpN2taNGV0OS9PdkR5VzlFZ2dPUnY0MGpDeWpKbVVrZ2c2U0kxY0lqK0F1eU9kYitPVHhnZ3psQUU2dkJ4MWlVK2s1bFpVeGVoa1ExNnJGNnV2VXdSK01lV20xNTNlaS9qOEZTdjhPcDFsOENKTFk0NU1VbVBtcUNIbGtSQlllY1k2YW1VRWtxMEhYTzhHVWN4RmN0dHhaZnpRSmk0eTVSdCtDVmRFSllkbFlLR05YWHVWZEdGNXRaMkY1L05mZ200S0loVW1IZTBCOUJLRkhXMkl6L1pURk5NNVBkK3dmVWNPRnhxK0pqMEF5NHV2d1pDRjk2cGsrc2ZJVWRNanErU1NQZXNFUkV4Q1FhY2VMRUtodUtnS2Ftalk1RVQwUDJWTGZZUTZORFVpSUFXWWtaMG56eGdEYUJ3PT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjIxCiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String CONSENT_NEGATED_SAML_RESPONSE_107 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfMzdiOWJmZWUtMGZhYi00Y2JiLWIzMTAtNjUyNTNjZGFmZjM4IiBJblJlc3BvbnNlVG89Il80YWI3NjZlNDhkZTAxZjViNTFjYjE4NmU2NGU2NjcyYiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDE0OjE0OjU0WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfMzdiOWJmZWUtMGZhYi00Y2JiLWIzMTAtNjUyNTNjZGFmZjM4Ij4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBXM2xacFkydXV6NU1TQ0VuN1RDVm1EaDdqY2ZwSTBuZEo3L0ZHa0MrTkIwPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgRCtpbG16TEhEKzlSaFBxS3kwYU9lOUdqVENtbHRCbUtweWZRZUh5K2hMUnNDVkVUeFlEQkFtQlRWcFFiZHZTcDB3VHhYcEZPVmVJaGJ2c3FEcGdqZ082RTNDRzlsQ0gyNm9za0hJem8zNGtHWFFUWkVvRk5ZUjNhVUdlYkljSGxvb0RCR0ViZjByQVRKZ1JSL2ZFTnhyczVxT3BlVkEreVVWVFZNN09yeFdLb0RnRlA4UTJWQkc4ejFiRVRJY0JoMnkvd0RJQXlwWjhCckRPbStrVVVoSnNsTEsrSkVJd0ZybjV6a0NOa25tZ0c5aC9uZzFPUTIzbHhUcVY4Qyt6QmNoSVV3eVdmTUhFRFVrdmMwOVhSZXh5RFJwUGd2b0s2UUNxRVdTamM0bWxBMkl3MlNQL3NLeGE4Vml4cjFwTnRoc3daZk5YdXltb3FwcFZjUmxlRUtnPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjIyCiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String BLOCKED_CREDENTIALS_SAML_RESPONSE_108 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfMThkYjIxNjAtODFlZS00OGNmLTk5ODQtMDI4N2MyMWQzZTZjIiBJblJlc3BvbnNlVG89Il80YWI3NjZlNDhkZTAxZjViNTFjYjE4NmU2NGU2NjcyYiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDE0OjEzOjU2WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfMThkYjIxNjAtODFlZS00OGNmLTk5ODQtMDI4N2MyMWQzZTZjIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBYYUhQNDlUZzcxd0xOZUFYbE80czJxMzJBNjRxTTl1emZNeEJWSStiTVE4PQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgcVhQRFhHc0JNYkRNTFB3V09zK2ZYUXp1anRBUTdOenZMYXRrR05mVVhZekdKSjZqNWtZYnVMWUdPM3pCL2h5Si9XMlZLOEVrYUFzK0NTTmVzR3BXckprRm15d2pNZmFHY2MzUlR4RXJTdWlWYTg3em4zU3N2NTZhVTRBTG9zaFZxc094VzdFSUp1ZE9ZSUFlK01OaTNSQWNxWFVDREQwM3puTmVWRG1XNkZkYXZHYk1hSnF6MGM0M3BFSzhWOGhETmJZUEdJT3oybzNiNnpBc3o1V1ZlS3ZiVG9ZVjBUcGdYT2wzQmJMdFhWV1FGRWxMRkxRVTlSUXNMT2EwcEFRT1RGUXZLMys3eUF3Qk5DWngzWjVSZ2xmc2htdDV6ZE9SdTJZc09pQzJ5NUNvUll3UUxQK1VNNDQxZWF1WnlDMFdrcVRQMjFHdTFmTHdaMjZlN0Vic0FBPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjIzCiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String ATTRIBUTES_WITHOUT_NAME_FORMAT_SAML_RESPONSE_109 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfZmQzZTY3NmYtZTk3Ny00OGVmLTk4OTktZjMxMzEwMTRhMDA3IiBJblJlc3BvbnNlVG89Il80YWI3NjZlNDhkZTAxZjViNTFjYjE4NmU2NGU2NjcyYiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDE0OjEyOjU1WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfZmQzZTY3NmYtZTk3Ny00OGVmLTk4OTktZjMxMzEwMTRhMDA3Ij4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBKRmZaaWRQZ2xZWWt2R3R4TFRHS1NmQ1RqcktKZVhmRnAxVm04UHBKbTJzPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgR3pzbSs5MjViaFE1blYzNjR3Mlo0UjExbkJKdjJHR2NncDQ1RlNobG5DSXV2bElFMjM3UEdxNXdMZVlWQVRmN0JuaWhVcmxPVVNCZWhtUkg1d0VYZUIzTjBUeGEwYWxJS3NvdTR3Y2xWdWU3MnlJY2JFa0x4MXA1b2JkdVQ5UDVzUGtuS0pBMXo2d1o5NjZsS25EVGtSZjJKdXZtc3pNNThuaFdXczdYekRtaGdnRWNwdFFpL3UxK3ZURE1oREFzNzYvU3RKb0Rzb05Sc0VNanByaGY1NVJmK1k3UGxHMGpLdW5VclQra3BjVWkwb2docURybk9zNlc2R1h2UEQxYXYyVkxlTlZsMjY0c2lPNHRUaUdjOUlQUFZYUzVpNjVMTHZjenBZbWFwZGtzaFQrWU1zNy83TWpUd0x2Vit5TTNPcG11OXVRY0p1OEtkVldIM1NETVV3PT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPgogICAgPC9zYW1scDpTdGF0dXM+CiAgICAKICAgIAogICAgPHNhbWw6QXNzZXJ0aW9uIElEPSJfOWFkOTFiZDctZGQ2Yi00ODY4LWE0OTYtYmMxZGQ3ZDg0OGUyIiBJc3N1ZUluc3RhbnQ9IjIwMjQtMTAtMTFUMTQ6MTI6NTVaIiBWZXJzaW9uPSIyLjAiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij4KICAgICAgICAgICAgaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgIDwvc2FtbDpJc3N1ZXI+CiAgICAgICAgPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgICAgIDxkczpTaWduZWRJbmZvPgogICAgICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICA8ZHM6UmVmZXJlbmNlIFVSST0iI185YWQ5MWJkNy1kZDZiLTQ4NjgtYTQ5Ni1iYzFkZDdkODQ4ZTIiPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICAgICAgPGRzOkRpZ2VzdFZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICBiUjlzZ29peEVmK3pjbVlLMkxuSTRvRWtTVWg4bGV0UEVXWlVoVjZGKzUwPQogICAgICAgICAgICAgICAgICAgIDwvZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICA8L2RzOlJlZmVyZW5jZT4KICAgICAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgICAgICA8ZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgICAgICBIOVFOYWkzSWJtQ0NsdUEwRXZONlRmOXE4LytkbGorOUx3dUYxejQxakgyZHNPL1VrK1ZNamk2SUJWaUQwSXMxMzE1ZTUwckVNT3JVeUJna3N4bkRpMUtxcHUrSHE5UGVKVVFiZmJRSitkWmpBUGgyOS9zWDNFeHdDVDlwblM2bzdGUFFKWW1hdkF3ODZpZTdxOUUzSzU2Vi9ZRVZTN2NSUmNEUloyTWFCTjl5Ni9QOVF3VEJwa3NqcWZpTW02T0JRdzQ5OHkzTDJFSEZ1ZTJXWjk0eHdhb01wLzRCTjhuMzRCYU5MQlVLenBiU1MrNDVKK1lzNzBpeklMUkN4RzNGRWV4ZkVzNnRzNnNKN0hkUTVrUVY2Q3ZYdE1CcTdzdVhoa2xDSVZ6NlRjeUVaSmxGZXIxK3RUNWVvMFB2MXAwMnh0MTZpK0RUR1BQMS9kVjgyZFBEenc9PQogICAgICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgICAgICA8ZHM6S2V5SW5mbz4KICAgICAgICAgICAgICAgIDxkczpYNTA5RGF0YT4KICAgICAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgICAgICBNSUlFR0RDQ0F3Q2dBd0lCQWdJSkFPcllqOW9MRUpDd01BMEdDU3FHU0liM0RRRUJDd1VBTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQWVGdzB4T1RBME1URXhNREF5TURoYUZ3MHlOVEF6TURneE1EQXlNRGhhTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs4a0pWbyt1Z1JyYmJ2OXhoWEN1VnJxaTRCNy9NUXpRYzYyb2N3bEZGdWpKTmQ0bTFtWGtVSEZiZ3Z3aFJrUXFvMkRBbUZlSGl3Q2tKVDNLMWVlWElGaE5GRnJvRXpHUHpPTnlla0xwak52bVlJczFDRnZpckdPajBia0VpR2FLRXMrL3VtekdqeEloeTVKUWxxWEU5NnkxK0l6cDJRaEppbURLMC9LTmlqOEkxYnp4c2VQMFlnYzRTRnZlS1MrN1FPK1ByTHpXa2xFV0dNczRETTVaYzNWUks3ZzRMV1BXWmhLZEltQzFyblMrL2xFbUhTdkhpc2RWcC9ESnRiU3Jad1NZVFJ2VFR6NUlaRFNxNGtBenJEZnBqMTZoN2IzdDNuRkdjOFVvWTJSbzR0UlozYWhKMnIzYjc5eUs2QzVwaFk3Q0FBTnVXM2dEZGhWamlCTllzMENBd0VBQWFPQnlqQ0J4ekFkQmdOVkhRNEVGZ1FVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N3d2daY0dBMVVkSXdTQmp6Q0JqSUFVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N5aGFhUm5NR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZElJSkFPcllqOW9MRUpDd01Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpORnFYZy9WM2FpbUpLVW1VYXFtUUVFb1NjM3F2WEZJVHZUNWY1Ykt3OXlrL05WaFI2d25kTCt6LzI0aDFPZFJxczc2YmxnSDhrMTE2cVdOa2tEdHQwQWxTalFPeDVxdkZZaDFVdmlPak5kUkk0V2tZT05Tdyt2dWF2Y3grZkI2TzVKREhObU1oTXlTS1RubVJxVGt5aGpyY2g3emFGSVdVU1Y3aHNCdXhwcW1yV0RvTFdkWGJWM2VGSDNtSU5BNUFvSVkvbTBiWnR6WjdZTmdpRld6eFFnZWtweGQwdmNUc2VNbkNjWG5zQWxjdGRpcjBGb0NaenR4TXVaamxCandMVHRNNlJ5My80OExNTThaK2x3N05NY2lLTExUR1F5VThYbUtLU1NPaDBkR2g1THJsdDVHeElJSmtIODFDMFlpbVdlYno4NDY0UVBMM1JiTG5US2crYz0KICAgICAgICAgICAgICAgICAgICA8L2RzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgICAgIDwvZHM6S2V5SW5mbz4KICAgICAgICA8L2RzOlNpZ25hdHVyZT4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpTdWJqZWN0PgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIgTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly92YWxpZGF0b3IuZGV2Lm9uZWlkLnBhZ29wYS5pdCI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBfMGM0NGNmYzMtODdlYS00ZGE0LTg4MzQtYTgxN2FkYzJjNDY0CiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6TmFtZUlEPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBJblJlc3BvbnNlVG89Il80YWI3NjZlNDhkZTAxZjViNTFjYjE4NmU2NGU2NjcyYiIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDE0OjE1OjA1WiIgUmVjaXBpZW50PSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiLz4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOlN1YmplY3RDb25maXJtYXRpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpTdWJqZWN0PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTEwLTExVDE0OjEyOjU1WiIgTm90T25PckFmdGVyPSIyMDI0LTEwLTExVDE0OjE1OjA1WiI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgICAgICBodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQKICAgICAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+CiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDwvc2FtbDpDb25kaXRpb25zPgogICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpBdXRoblN0YXRlbWVudCBBdXRobkluc3RhbnQ9IjIwMjQtMTAtMTFUMTQ6MTI6NTVaIiBTZXNzaW9uSW5kZXg9Il8wMjAxNDYzMC05MmM1LTRjNDEtODdlMi1lNWE4M2Q2ZmVmZmMiPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgICAgICBodHRwczovL3d3dy5zcGlkLmdvdi5pdC9TcGlkTDIKICAgICAgICAgICAgICAgIDwvc2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50PgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0ic3BpZENvZGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgQUdJRC0wMDEKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPgogICAgICAgICAgICAgICAgICAgIFRJTklULUdEQVNEVjAwQTAxSDUwMUoKICAgICAgICAgICAgICAgIDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD4KICAgICAgICAKICAgIAogICAgPC9zYW1sOkFzc2VydGlvbj4KICAgIAoKPC9zYW1scDpSZXNwb25zZT4=";
  public static final String ISSUE_INSTANT_WITH_MILLISECONDS_SAML_RESPONSE_110 = "";
  public static final String PROCESS_CANCELED_BY_USER_SAML_RESPONSE_111 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfNjI5ZTFlODQtMmFmNC00M2I0LThjZTEtYzYwYjdlYWVlOTljIiBJblJlc3BvbnNlVG89Il8xY2ViN2ZlMjYyMGVkZWYzNGEzNzRhYjlkMDAyMTVlNyIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDEyOjE2OjI0WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfNjI5ZTFlODQtMmFmNC00M2I0LThjZTEtYzYwYjdlYWVlOTljIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBPKzRGejMyTFFsS0ZJNG1GbFNCMFVmN3VuT1R3ZHhpOEdlOVJUdVJhRS9VPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAga3RHU2todzNTZWxuN0QvZWVyWGM5RDV1VzI3VFNpQVNSSjE2RHhFdCtZOU1JSHl0MGovUnZPbWRzRVdlRXdCOUNFckVzME51aXNTeVllWlpkOUNudVpka1VvN1ErQjJwK3RndXFlWVBzUmRUTVNYRnROYnZSUENmK3cvdG41WmlFRUZNRFNQTmNnNUl1MkducGN3SUN5YjRJdXNJSUswYXQ4aEdqT2k5cUlEZWZzV0RlZmJrbjNWbHp5aHkydFdUZm9Md05lZllVVDZKWEVHUVRUUXgwbDBOZ1p4MFlGZE4xZXh6YnpGTithN01QaGZKcTNUTExVc0JqdGFxWnhURUQ4cC80Si9OZkkrTTNub3Z3aUVSUTBFSXZ3UEJRSFhvMTJDUzVMSjBlUGJpN2NvL29wQ2hhVnZybklLN3Q5M1R0WWNoeGNBU1JmNXNwQ0JMNXNvcGJRPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjI1CiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";

}
