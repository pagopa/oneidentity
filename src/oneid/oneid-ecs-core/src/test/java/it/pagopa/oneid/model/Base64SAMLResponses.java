package it.pagopa.oneid.model;

public abstract class Base64SAMLResponses {

  public static final String CORRECT_SAML_RESPONSE_01 = "";
  public static final String UNSIGNED_SAML_RESPONSE_02 = "PHNhbWxwOlJlc3BvbnNlDQogICAgRGVzdGluYXRpb249Imh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9zYW1sL2FjcyINCiAgICBJRD0iXzA0NzU4NzNhLWU3OTYtNDc1ZS05MjhlLWVhODcyMmJlNGJlYyINCiAgICBJblJlc3BvbnNlVG89Il81MjJkZmE2MTUwYjQyYzJkZDA0ZWE3NDZjYmEzYWQ5YyIgDQogICAgSXNzdWVJbnN0YW50PSIyMDI0LTA3LTE3VDIwOjQ5OjI0WiINCiAgICBWZXJzaW9uPSIyLjAiIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iDQogICAgeG1sbnM6c2FtbHA9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpwcm90b2NvbCI+DQogICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij5odHRwczovL2xvY2FsaG9zdDo4NDQzPC9zYW1sOklzc3Vlcj4NCg0KICAgIDxzYW1scDpTdGF0dXM+PHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPjwvc2FtbHA6U3RhdHVzPg0KICAgIDxzYW1sOkFzc2VydGlvbiBJRD0iXzU1MGM1ZTAwLWZiYzMtNDhmYy05NjZjLWVjNzgyMmIxY2VmOCIgSXNzdWVJbnN0YW50PSIyMDI0LTA3LTE3VDIwOjQ5OjI0WiINCiAgICAgICAgVmVyc2lvbj0iMi4wIiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiDQogICAgICAgIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KICAgICAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPmh0dHBzOi8vbG9jYWxob3N0Ojg0NDM8L3NhbWw6SXNzdWVyPg0KICAgICAgICA8c2FtbDpTdWJqZWN0Pg0KICAgICAgICAgICAgPHNhbWw6TmFtZUlEIA0KICAgICAgICAgICAgICAgIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6dHJhbnNpZW50Ig0KICAgICAgICAgICAgICAgIE5hbWVRdWFsaWZpZXI9Imh0dHBzOi8vbG9jYWxob3N0Ojg0NDMiPg0KICAgICAgICAgICAgICAgICAgICBfYWI1Y2UyODQtODhiZi00ZDUyLWFmMGItMDAzNDBjZDZmODFlDQogICAgICAgICAgICA8L3NhbWw6TmFtZUlEPg0KICAgICAgICAgICAgPHNhbWw6U3ViamVjdENvbmZpcm1hdGlvbiBNZXRob2Q9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpjbTpiZWFyZXIiPg0KICAgICAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb25EYXRhIA0KICAgICAgICAgICAgICAgICAgICBJblJlc3BvbnNlVG89Il81MjJkZmE2MTUwYjQyYzJkZDA0ZWE3NDZjYmEzYWQ5YyINCiAgICAgICAgICAgICAgICAgICAgTm90T25PckFmdGVyPSIyMDI0LTA3LTE3VDIwOjUyOjMwWiINCiAgICAgICAgICAgICAgICAgICAgUmVjaXBpZW50PSJodHRwOi8vbG9jYWxob3N0OjgwODAvc2FtbC9hY3MiIC8+DQogICAgICAgICAgICA8L3NhbWw6U3ViamVjdENvbmZpcm1hdGlvbj4NCiAgICAgICAgPC9zYW1sOlN1YmplY3Q+DQogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgDQogICAgICAgICAgICBOb3RCZWZvcmU9IjIwMjQtMDctMTdUMjA6NDk6MjRaIiANCiAgICAgICAgICAgIE5vdE9uT3JBZnRlcj0iMjAyNC0wNy0xN1QyMDo1MjozMFoiID4NCiAgICAgICAgICAgIDxzYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+DQogICAgICAgICAgICAgICAgPHNhbWw6QXVkaWVuY2U+aHR0cDovL2xvY2FsaG9zdDo4MDgwPC9zYW1sOkF1ZGllbmNlPg0KICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+DQogICAgICAgIDwvc2FtbDpDb25kaXRpb25zPiANCiAgICAgICAgPHNhbWw6QXV0aG5TdGF0ZW1lbnQgDQogICAgICAgICAgICBBdXRobkluc3RhbnQ9IjIwMjQtMDctMTdUMjA6NDk6MjRaIg0KICAgICAgICAgICAgU2Vzc2lvbkluZGV4PSJfN2Q5MmY3NmQtNTZiNy00ZGIzLTg1MzEtMTc1YWM5NjVmZjRhIiA+DQogICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHQ+DQogICAgICAgICAgICAgICAgPHNhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWY+aHR0cHM6Ly93d3cuc3BpZC5nb3YuaXQvU3BpZEwyPC9zYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPg0KICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4NCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50Pg0KICAgICAgICA8c2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJkYXRlT2ZCaXJ0aCIgIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNhbWw6QXR0cmlidXRlVmFsdWUgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpkYXRlIj4yMDAwLTAxLTAxPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIiAgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDpiYXNpYyI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+VElOSVQtR0RBU0RWMDBBMDFINTAxSjwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlU3RhdGVtZW50Pg0KICAgIDwvc2FtbDpBc3NlcnRpb24+DQo8L3NhbWxwOlJlc3BvbnNlPg0K";
  public static final String UNSIGNED_ASSERTION_SAML_RESPONSE_03 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwOi8vbG9jYWxob3N0OjgwODAvc2FtbC9hY3MiIElEPSJfZTI0NjkwZGItNTViYS00NmM2LWE5ZDQtMmFkYWUyM2U0YWMxIiBJblJlc3BvbnNlVG89Il81MjJkZmE2MTUwYjQyYzJkZDA0ZWE3NDZjYmEzYWQ5YyIgSXNzdWVJbnN0YW50PSIyMDI0LTA3LTE3VDIwOjUwOjQ0WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4NCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPmh0dHBzOi8vbG9jYWxob3N0Ojg0NDM8L3NhbWw6SXNzdWVyPjxkczpTaWduYXR1cmUgeG1sbnM6ZHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPjxkczpTaWduZWRJbmZvPjxkczpDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+PGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz48ZHM6UmVmZXJlbmNlIFVSST0iI19lMjQ2OTBkYi01NWJhLTQ2YzYtYTlkNC0yYWRhZTIzZTRhYzEiPjxkczpUcmFuc2Zvcm1zPjxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPjxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz48L2RzOlRyYW5zZm9ybXM+PGRzOkRpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jI3NoYTI1NiIvPjxkczpEaWdlc3RWYWx1ZT4xRVpGZ2Y3SVcxNTdhbVJvVHkySjloaldFTHZHTWJUdjE2QTd0SGsrUmd3PTwvZHM6RGlnZXN0VmFsdWU+PC9kczpSZWZlcmVuY2U+PC9kczpTaWduZWRJbmZvPjxkczpTaWduYXR1cmVWYWx1ZT5INVZTV1VrZVN2dHVMeXhrWGRWRnZKZEdlQzNlcXpHVFYwZjJZN2xobzBEbGxDdlpPKzBwQzNRMHJ5OG9Zeno5MTMyeEUrb1VZM2N2bEw5N0NHZEYvM1FvVktFTldVcC84RnBZQklsdzhTS3U3RVF6Zi85aDNsNTRKTUJaUnBnNW5UQ2M5VHdtbkNsZDdyVkZLbTd6MDQrTVI0dkVhNys5RXVmaXBSS0N6YzFWNitWMGtubm9mYWZQNWF4dmJIcllQc1hPcXRjSDVBcWM4ZGs4T0Q1Q3F6ek1PcmozbC9LSEhwTmFIY2JweWEvUWp3TkdhYThYVzBSdXJKdE9MZ2dKeEQxVm8rUzlsWDEyZTJ2NEhla3B5dmJYMFNjWmdoU2I5YkhydWhwMk0zL3ZLQ0VCMkVLY3RhallKcHFOd0NBb28wMXZBMHl3RTJHcUM4VXhhRVJ5QXc9PTwvZHM6U2lnbmF0dXJlVmFsdWU+PGRzOktleUluZm8+PGRzOlg1MDlEYXRhPjxkczpYNTA5Q2VydGlmaWNhdGU+TUlJRUdEQ0NBd0NnQXdJQkFnSUpBT3JZajlvTEVKQ3dNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkREFlRncweE9UQTBNVEV4TURBeU1EaGFGdzB5TlRBek1EZ3hNREF5TURoYU1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLOGtKVm8rdWdScmJidjl4aFhDdVZycWk0QjcvTVF6UWM2Mm9jd2xGRnVqSk5kNG0xbVhrVUhGYmd2d2hSa1FxbzJEQW1GZUhpd0NrSlQzSzFlZVhJRmhORkZyb0V6R1B6T055ZWtMcGpOdm1ZSXMxQ0Z2aXJHT2owYmtFaUdhS0VzKy91bXpHanhJaHk1SlFscVhFOTZ5MStJenAyUWhKaW1ESzAvS05pajhJMWJ6eHNlUDBZZ2M0U0Z2ZUtTKzdRTytQckx6V2tsRVdHTXM0RE01WmMzVlJLN2c0TFdQV1poS2RJbUMxcm5TKy9sRW1IU3ZIaXNkVnAvREp0YlNyWndTWVRSdlRUejVJWkRTcTRrQXpyRGZwajE2aDdiM3QzbkZHYzhVb1kyUm80dFJaM2FoSjJyM2I3OXlLNkM1cGhZN0NBQU51VzNnRGRoVmppQk5ZczBDQXdFQUFhT0J5akNCeHpBZEJnTlZIUTRFRmdRVTMvN2tWMnRiZEZ0cGhiU0E0TEg3K3c4U2tjd3dnWmNHQTFVZEl3U0JqekNCaklBVTMvN2tWMnRiZEZ0cGhiU0E0TEg3K3c4U2tjeWhhYVJuTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGRJSUpBT3JZajlvTEVKQ3dNQXdHQTFVZEV3UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKTkZxWGcvVjNhaW1KS1VtVWFxbVFFRW9TYzNxdlhGSVR2VDVmNWJLdzl5ay9OVmhSNnduZEwrei8yNGgxT2RScXM3NmJsZ0g4azExNnFXTmtrRHR0MEFsU2pRT3g1cXZGWWgxVXZpT2pOZFJJNFdrWU9OU3crdnVhdmN4K2ZCNk81SkRITm1NaE15U0tUbm1ScVRreWhqcmNoN3phRklXVVNWN2hzQnV4cHFtcldEb0xXZFhiVjNlRkgzbUlOQTVBb0lZL20wYlp0elo3WU5naUZXenhRZ2VrcHhkMHZjVHNlTW5DY1huc0FsY3RkaXIwRm9DWnp0eE11WmpsQmp3TFR0TTZSeTMvNDhMTU04WitsdzdOTWNpS0xMVEdReVU4WG1LS1NTT2gwZEdoNUxybHQ1R3hJSUprSDgxQzBZaW1XZWJ6ODQ2NFFQTDNSYkxuVEtnK2M9PC9kczpYNTA5Q2VydGlmaWNhdGU+PC9kczpYNTA5RGF0YT48L2RzOktleUluZm8+PC9kczpTaWduYXR1cmU+DQoNCiAgICA8c2FtbHA6U3RhdHVzPjxzYW1scDpTdGF0dXNDb2RlIFZhbHVlPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6c3RhdHVzOlN1Y2Nlc3MiLz48L3NhbWxwOlN0YXR1cz4NCiAgICA8c2FtbDpBc3NlcnRpb24gSUQ9Il9kMGE1Mzc1ZC0yOTBmLTRjZTAtODFlZC01ZjRiZDcyNWRlMzAiIElzc3VlSW5zdGFudD0iMjAyNC0wNy0xN1QyMDo1MDo0NFoiIFZlcnNpb249IjIuMCIgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4NCiAgICAgICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij5odHRwczovL2xvY2FsaG9zdDo4NDQzPC9zYW1sOklzc3Vlcj4NCiAgICAgICAgPHNhbWw6U3ViamVjdD4NCiAgICAgICAgICAgIDxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIgTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly9sb2NhbGhvc3Q6ODQ0MyI+DQogICAgICAgICAgICAgICAgICAgIF80ZDBhZmM4Zi1iODVmLTQyZTAtYWU5OS01MDZkMzg3ZGI1YzUNCiAgICAgICAgICAgIDwvc2FtbDpOYW1lSUQ+DQogICAgICAgICAgICA8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uIE1ldGhvZD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmNtOmJlYXJlciI+DQogICAgICAgICAgICAgICAgPHNhbWw6U3ViamVjdENvbmZpcm1hdGlvbkRhdGEgSW5SZXNwb25zZVRvPSJfNTIyZGZhNjE1MGI0MmMyZGQwNGVhNzQ2Y2JhM2FkOWMiIE5vdE9uT3JBZnRlcj0iMjAyNC0wNy0xN1QyMDo1MjozMFoiIFJlY2lwaWVudD0iaHR0cDovL2xvY2FsaG9zdDo4MDgwL3NhbWwvYWNzIi8+DQogICAgICAgICAgICA8L3NhbWw6U3ViamVjdENvbmZpcm1hdGlvbj4NCiAgICAgICAgPC9zYW1sOlN1YmplY3Q+DQogICAgICAgIDxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDI0LTA3LTE3VDIwOjUwOjQ0WiIgTm90T25PckFmdGVyPSIyMDI0LTA3LTE3VDIwOjUyOjMwWiI+DQogICAgICAgICAgICA8c2FtbDpBdWRpZW5jZVJlc3RyaWN0aW9uPg0KICAgICAgICAgICAgICAgIDxzYW1sOkF1ZGllbmNlPmh0dHA6Ly9sb2NhbGhvc3Q6ODA4MDwvc2FtbDpBdWRpZW5jZT4NCiAgICAgICAgICAgIDwvc2FtbDpBdWRpZW5jZVJlc3RyaWN0aW9uPg0KICAgICAgICA8L3NhbWw6Q29uZGl0aW9ucz4gDQogICAgICAgIDxzYW1sOkF1dGhuU3RhdGVtZW50IEF1dGhuSW5zdGFudD0iMjAyNC0wNy0xN1QyMDo1MDo0NFoiIFNlc3Npb25JbmRleD0iXzU3ZmQ1MjgxLWIzMzAtNDgzZS04MmYwLTZkNjkxNzYyNTViNiI+DQogICAgICAgICAgICA8c2FtbDpBdXRobkNvbnRleHQ+DQogICAgICAgICAgICAgICAgPHNhbWw6QXV0aG5Db250ZXh0Q2xhc3NSZWY+aHR0cHM6Ly93d3cuc3BpZC5nb3YuaXQvU3BpZEwyPC9zYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPg0KICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dD4NCiAgICAgICAgPC9zYW1sOkF1dGhuU3RhdGVtZW50Pg0KICAgICAgICA8c2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJkYXRlT2ZCaXJ0aCIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDpiYXNpYyI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpkYXRlIj4yMDAwLTAxLTAxPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2FtbDpBdHRyaWJ1dGUgTmFtZT0iZmlzY2FsTnVtYmVyIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+VElOSVQtR0RBU0RWMDBBMDFINTAxSjwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlU3RhdGVtZW50Pg0KICAgIDwvc2FtbDpBc3NlcnRpb24+DQo8L3NhbWxwOlJlc3BvbnNlPg==";
  public static final String INVALID_SIGNATURE_SAML_RESPONSE_04 = "";


  public static final String NOT_ON_OR_AFTER_MISSING_SAML_RESPONSE_80 = "";
  public static final String NOT_ON_OR_AFTER_WITH_INCORRECT_FORMAT_SAML_RESPONSE_81 = "";
  public static final String NOT_ON_OR_AFTER_BEFORE_RESPONSE_RECEPTION_SAML_RESPONSE_82 = "";
  public static final String ASSERTION_UNSPECIFIED_SAML_RESPONSE_83 = "";
  public static final String ASSERTION_MISSING_SAML_RESPONSE_84 = "";
  public static final String AUDIENCE_UNSPECIFIED_SAML_RESPONSE_85 = "";
  public static final String AUDIENCE_MISSING_SAML_RESPONSE_86 = "";
  public static final String AUDIENCE_DIFFERENT_THAN_ENTITY_ID_OF_SP_SAML_RESPONSE_87 = "";
  public static final String AUTH_STATEMENT_UNSPECIFIED_SAML_RESPONSE_88 = "";
  public static final String AUTH_STATEMENT_MISSING_SAML_RESPONSE_89 = "";
  public static final String AUTH_CONTEXT_UNSPECIFIED_SAML_RESPONSE_SAML_RESPONSE_90 = "";
  public static final String AUTH_CONTEXT_MISSING_SAML_RESPONSE_SAML_RESPONSE_91 = "";
  public static final String AUTH_CONTEXT_CLASS_REF_UNSPECIFIED_SAML_RESPONSE_92 = "";
  public static final String AUTH_CONTEXT_CLASS_REF_MISSING_SAML_RESPONSE_93 = "";
  public static final String AUTH_CONTEXT_CLASS_REF_WITH_L1_VALUE_SAML_RESPONSE_94 = "";
  public static final String AUTH_CONTEXT_CLASS_REF_WITH_L2_VALUE_SAML_RESPONSE_95 = "";
  public static final String AUTH_CONTEXT_CLASS_REF_WITH_L3_VALUE_SAML_RESPONSE_96 = "";
  public static final String AUTH_CONTEXT_CLASS_REF_WITH_UNEXPECTED_VALUE_SAML_RESPONSE_97 = "";
  public static final String ATTRIBUTE_STATEMENT_PRESENT_BUT_WITH_SUBELEMENT_ATTRIBUTE_MISSING_SAML_RESPONSE_98 = "";
  public static final String ATTRIBUTE_STATEMENT_PRESENT_BUT_WITH_SUBELEMENT_ATTRIBUTE_UNSPECIFIED_SAML_RESPONSE_99 = "";
  public static final String DIFFERENT_SIGNATURE_SAML_RESPONSE_100 = "";
  public static final String SENT_ATTRIBUTE_SET_DIFFERENT_THAN_REQUESTED_SAML_RESPONSE_103 = "";
  public static final String REPEATED_WRONG_CREDENTIALS_SUBMITTED_SAML_RESPONSE_104 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfZWZjNTcwNmItNWI3OS00YTZlLWJkMDYtZGExNjZkZjA2MGRlIiBJblJlc3BvbnNlVG89Il80YWI3NjZlNDhkZTAxZjViNTFjYjE4NmU2NGU2NjcyYiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDE0OjE5OjUwWiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfZWZjNTcwNmItNWI3OS00YTZlLWJkMDYtZGExNjZkZjA2MGRlIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBTS25uMFZ5QmRjMVNWSTRZbUtRRTZyNXBBT1JpeE5SOHlnMm9VZUx4Z2wwPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgajV0UTd5Ri9paXA4cDBnWTlQTVl6c29YY3ByWjlnQ3ZUem5qWTFncWQyN013RDBCRXQvdi91YWw2UkllalJDaEhMSGxoYjVLRHh4MVNwWkVxYzFFYm5IakZzZkQ0c09nbEFXNWxEOTRUSC9qVThYSENqL1h6YW5vZGpTaTFEOGhjYlFrNjF4OWxidU1CMXI5WXJtUXhiWXJvNWJTeHF2a1lDYTlwRzFTRW9QbXkwcHRtNTNEcDQxeU9PM0VPVXFuZldrRWZ1SlI1dU1QQkJEQWk1Q01wdGRjZ2ZENWxUT2l0YXZJNlNTTnUvelhWWjRwU3YvVFJxTGxralpQY3FPYVU2WW5BekM3WmM4RVg3bEdCb2MzUUZhZE1kMVh4UVlKSURBaWcxVGJUU09xQkhtd05CbG5NUG9mQnBGZlExbFhac0xyNjdZLzUwRlRMbDQ0UHpxVTVRPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjE5CiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String USER_WITHOUT_COMPATIBLE_CREDENTIALS_SAML_RESPONSE_105 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfODM1NDllNmItYWQ1OS00MTEzLWE1MTItMDBmMmI0Y2U4Y2Q0IiBJblJlc3BvbnNlVG89Il80YWI3NjZlNDhkZTAxZjViNTFjYjE4NmU2NGU2NjcyYiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDE0OjE4OjA3WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfODM1NDllNmItYWQ1OS00MTEzLWE1MTItMDBmMmI0Y2U4Y2Q0Ij4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBPeld3ZWl3b2ZoQURQcE9ISGZLMnNBaUc1MWRKc1BRcDhibis3TmdwZGRZPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgWVFhRnRHRndqTWovOUZWVUJuYWdaWW91MURWRWhmVkM5NVV5M2Fuc0Y0VStESk9DVERENW42S2xoM095MU04YkRPaTRxRDN0dWxIUk9RTXVIWTh0Z0QwTUVXbGJNdWlHN28xM2VXa2tmR0IzK1BVVWJaMytkYTMyVDcwOG9IZkwrSDZGbk53ZzRIcnZ0V2FJSnB1dFZuMEZ5R0JkNmJxaklHY2laR1NsRGhVb2dFTXM3YUZxNW81aTRDOXdoZG80K1pxKzNJQ1VqN1UwUjhaVE9iOFRzYWJVSllhY0t5Tnh2UzRGLzQvRG5TeHI1Y21GRDlGZzJmWW9qbTlXQnI2WlVOQ0VKRTVmZFVPaUd4dWFJM2VjcVh1SFprVVkrdXRSMmYvcDJtVXB6WkEwOHUwVXVJM2QvQkNHMCtvL0ZNSGpJUkFVb1BndFdOUFdHYk90WlRXc2pnPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjIwCiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String TIMEOUT_SAML_RESPONSE_106 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfNTg5OGEyNzEtZWMwMy00MjAxLTk3MTEtNDQ5NTg2ZWJhMmVhIiBJblJlc3BvbnNlVG89Il80YWI3NjZlNDhkZTAxZjViNTFjYjE4NmU2NGU2NjcyYiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDE0OjE1OjU1WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfNTg5OGEyNzEtZWMwMy00MjAxLTk3MTEtNDQ5NTg2ZWJhMmVhIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBId1pIR1B5OWg5NCtNNjJ0NktPTGo4TmxhYUlWbm5RWE9RM2hnNmZNWGFzPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgSURaeWVyZ3hKTDl3U2RJbEt3RklWdlJsRjM2WDJpN2taNGV0OS9PdkR5VzlFZ2dPUnY0MGpDeWpKbVVrZ2c2U0kxY0lqK0F1eU9kYitPVHhnZ3psQUU2dkJ4MWlVK2s1bFpVeGVoa1ExNnJGNnV2VXdSK01lV20xNTNlaS9qOEZTdjhPcDFsOENKTFk0NU1VbVBtcUNIbGtSQlllY1k2YW1VRWtxMEhYTzhHVWN4RmN0dHhaZnpRSmk0eTVSdCtDVmRFSllkbFlLR05YWHVWZEdGNXRaMkY1L05mZ200S0loVW1IZTBCOUJLRkhXMkl6L1pURk5NNVBkK3dmVWNPRnhxK0pqMEF5NHV2d1pDRjk2cGsrc2ZJVWRNanErU1NQZXNFUkV4Q1FhY2VMRUtodUtnS2Ftalk1RVQwUDJWTGZZUTZORFVpSUFXWWtaMG56eGdEYUJ3PT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjIxCiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String CONSENT_NEGATED_SAML_RESPONSE_107 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfMzdiOWJmZWUtMGZhYi00Y2JiLWIzMTAtNjUyNTNjZGFmZjM4IiBJblJlc3BvbnNlVG89Il80YWI3NjZlNDhkZTAxZjViNTFjYjE4NmU2NGU2NjcyYiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDE0OjE0OjU0WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfMzdiOWJmZWUtMGZhYi00Y2JiLWIzMTAtNjUyNTNjZGFmZjM4Ij4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBXM2xacFkydXV6NU1TQ0VuN1RDVm1EaDdqY2ZwSTBuZEo3L0ZHa0MrTkIwPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgRCtpbG16TEhEKzlSaFBxS3kwYU9lOUdqVENtbHRCbUtweWZRZUh5K2hMUnNDVkVUeFlEQkFtQlRWcFFiZHZTcDB3VHhYcEZPVmVJaGJ2c3FEcGdqZ082RTNDRzlsQ0gyNm9za0hJem8zNGtHWFFUWkVvRk5ZUjNhVUdlYkljSGxvb0RCR0ViZjByQVRKZ1JSL2ZFTnhyczVxT3BlVkEreVVWVFZNN09yeFdLb0RnRlA4UTJWQkc4ejFiRVRJY0JoMnkvd0RJQXlwWjhCckRPbStrVVVoSnNsTEsrSkVJd0ZybjV6a0NOa25tZ0c5aC9uZzFPUTIzbHhUcVY4Qyt6QmNoSVV3eVdmTUhFRFVrdmMwOVhSZXh5RFJwUGd2b0s2UUNxRVdTamM0bWxBMkl3MlNQL3NLeGE4Vml4cjFwTnRoc3daZk5YdXltb3FwcFZjUmxlRUtnPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjIyCiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String BLOCKED_CREDENTIALS_SAML_RESPONSE_108 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfMThkYjIxNjAtODFlZS00OGNmLTk5ODQtMDI4N2MyMWQzZTZjIiBJblJlc3BvbnNlVG89Il80YWI3NjZlNDhkZTAxZjViNTFjYjE4NmU2NGU2NjcyYiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDE0OjEzOjU2WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfMThkYjIxNjAtODFlZS00OGNmLTk5ODQtMDI4N2MyMWQzZTZjIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBYYUhQNDlUZzcxd0xOZUFYbE80czJxMzJBNjRxTTl1emZNeEJWSStiTVE4PQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgcVhQRFhHc0JNYkRNTFB3V09zK2ZYUXp1anRBUTdOenZMYXRrR05mVVhZekdKSjZqNWtZYnVMWUdPM3pCL2h5Si9XMlZLOEVrYUFzK0NTTmVzR3BXckprRm15d2pNZmFHY2MzUlR4RXJTdWlWYTg3em4zU3N2NTZhVTRBTG9zaFZxc094VzdFSUp1ZE9ZSUFlK01OaTNSQWNxWFVDREQwM3puTmVWRG1XNkZkYXZHYk1hSnF6MGM0M3BFSzhWOGhETmJZUEdJT3oybzNiNnpBc3o1V1ZlS3ZiVG9ZVjBUcGdYT2wzQmJMdFhWV1FGRWxMRkxRVTlSUXNMT2EwcEFRT1RGUXZLMys3eUF3Qk5DWngzWjVSZ2xmc2htdDV6ZE9SdTJZc09pQzJ5NUNvUll3UUxQK1VNNDQxZWF1WnlDMFdrcVRQMjFHdTFmTHdaMjZlN0Vic0FBPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjIzCiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";
  public static final String ATTRIBUTES_WITHOUT_NAME_FORMAT_SAML_RESPONSE_109 = "";
  public static final String ISSUE_INSTANT_WITH_MILLISECONDS_SAML_RESPONSE_110 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfZTY2Zjg0ZmUtZTZlMy00Y2IxLWI4MTgtMzliNmE0MDQ3MDk4IiBJblJlc3BvbnNlVG89Il80YWI3NjZlNDhkZTAxZjViNTFjYjE4NmU2NGU2NjcyYiIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDE0OjExOjI2LjY5NloiIFZlcnNpb249IjIuMCIgeG1sbnM6c2FtbD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiIgeG1sbnM6c2FtbHA9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpwcm90b2NvbCI+CiAgICAKICAgIAogICAgPHNhbWw6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij4KICAgICAgICBodHRwczovL3ZhbGlkYXRvci5kZXYub25laWQucGFnb3BhLml0CiAgICA8L3NhbWw6SXNzdWVyPgogICAgPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgPGRzOlNpZ25lZEluZm8+CiAgICAgICAgICAgIDxkczpDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+CiAgICAgICAgICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+CiAgICAgICAgICAgIDxkczpSZWZlcmVuY2UgVVJJPSIjX2U2NmY4NGZlLWU2ZTMtNGNiMS1iODE4LTM5YjZhNDA0NzA5OCI+CiAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+CiAgICAgICAgICAgICAgICA8L2RzOlRyYW5zZm9ybXM+CiAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CiAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICAgICAgQVQrMnkrNlBScTJ2Vmt5TnYyOUFBa3ZIOGQreUd2dFFvU3lrVDBQQTdQdz0KICAgICAgICAgICAgICAgIDwvZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgIDwvZHM6UmVmZXJlbmNlPgogICAgICAgIDwvZHM6U2lnbmVkSW5mbz4KICAgICAgICA8ZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgIEwwTWVHVlNxbXIrTkF0WmZOWC9MTGFhcjlOM3FnRDNTNEhrV3JDb1ZYcEVjTzhXekU2Y3lhM0gxU1NvRm9rbXIyK01xL0prZXdVZlpCcVdQTXEwcG9NVVBmYzV2VkYvWlBKbnN2Y3ZtaVMwSEs2bGNxUGg3My9iUm1PUTkzWGF1ZzBncy9wendhNmpGTW1kZms2Tk1rTXVnQjVFV2RRVHFSai90RlgwODN3NjRxZ2g4TE5IdXhMSmhTRUxPeVBtV2gxRk8wUjNDVE5Sblh6OWlEeUpQUXpjNTRmR28rcHl3TTR1L010cTByUE85NktUdWJUclh0cUZ6NkxBcGs2MTdxSnl0bkpOc2JmNXhCZythcEc5MGtMckd1aUFXcGhBNi9jNVhvMnZtT01GMUlnZzlXU0ttMi9FanNpM2ozaFhJWUVqUWdXOVBxU1dJeDBmb05LaHBRQT09CiAgICAgICAgPC9kczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICA8ZHM6S2V5SW5mbz4KICAgICAgICAgICAgPGRzOlg1MDlEYXRhPgogICAgICAgICAgICAgICAgPGRzOlg1MDlDZXJ0aWZpY2F0ZT4KICAgICAgICAgICAgICAgICAgICBNSUlFR0RDQ0F3Q2dBd0lCQWdJSkFPcllqOW9MRUpDd01BMEdDU3FHU0liM0RRRUJDd1VBTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQWVGdzB4T1RBME1URXhNREF5TURoYUZ3MHlOVEF6TURneE1EQXlNRGhhTUdVeEN6QUpCZ05WQkFZVEFrbFVNUTR3REFZRFZRUUlFd1ZKZEdGc2VURU5NQXNHQTFVRUJ4TUVVbTl0WlRFTk1Bc0dBMVVFQ2hNRVFXZEpSREVTTUJBR0ExVUVDeE1KUVdkSlJDQlVSVk5VTVJRd0VnWURWUVFERXd0aFoybGtMbWR2ZGk1cGREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs4a0pWbyt1Z1JyYmJ2OXhoWEN1VnJxaTRCNy9NUXpRYzYyb2N3bEZGdWpKTmQ0bTFtWGtVSEZiZ3Z3aFJrUXFvMkRBbUZlSGl3Q2tKVDNLMWVlWElGaE5GRnJvRXpHUHpPTnlla0xwak52bVlJczFDRnZpckdPajBia0VpR2FLRXMrL3VtekdqeEloeTVKUWxxWEU5NnkxK0l6cDJRaEppbURLMC9LTmlqOEkxYnp4c2VQMFlnYzRTRnZlS1MrN1FPK1ByTHpXa2xFV0dNczRETTVaYzNWUks3ZzRMV1BXWmhLZEltQzFyblMrL2xFbUhTdkhpc2RWcC9ESnRiU3Jad1NZVFJ2VFR6NUlaRFNxNGtBenJEZnBqMTZoN2IzdDNuRkdjOFVvWTJSbzR0UlozYWhKMnIzYjc5eUs2QzVwaFk3Q0FBTnVXM2dEZGhWamlCTllzMENBd0VBQWFPQnlqQ0J4ekFkQmdOVkhRNEVGZ1FVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N3d2daY0dBMVVkSXdTQmp6Q0JqSUFVMy83a1YydGJkRnRwaGJTQTRMSDcrdzhTa2N5aGFhUm5NR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZElJSkFPcllqOW9MRUpDd01Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpORnFYZy9WM2FpbUpLVW1VYXFtUUVFb1NjM3F2WEZJVHZUNWY1Ykt3OXlrL05WaFI2d25kTCt6LzI0aDFPZFJxczc2YmxnSDhrMTE2cVdOa2tEdHQwQWxTalFPeDVxdkZZaDFVdmlPak5kUkk0V2tZT05Tdyt2dWF2Y3grZkI2TzVKREhObU1oTXlTS1RubVJxVGt5aGpyY2g3emFGSVdVU1Y3aHNCdXhwcW1yV0RvTFdkWGJWM2VGSDNtSU5BNUFvSVkvbTBiWnR6WjdZTmdpRld6eFFnZWtweGQwdmNUc2VNbkNjWG5zQWxjdGRpcjBGb0NaenR4TXVaamxCandMVHRNNlJ5My80OExNTThaK2x3N05NY2lLTExUR1F5VThYbUtLU1NPaDBkR2g1THJsdDVHeElJSmtIODFDMFlpbVdlYno4NDY0UVBMM1JiTG5US2crYz0KICAgICAgICAgICAgICAgIDwvZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICA8L2RzOlg1MDlEYXRhPgogICAgICAgIDwvZHM6S2V5SW5mbz4KICAgIDwvZHM6U2lnbmF0dXJlPgogICAgCgogICAgCiAgICA8c2FtbHA6U3RhdHVzPgogICAgICAgIDxzYW1scDpTdGF0dXNDb2RlIFZhbHVlPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6c3RhdHVzOlN1Y2Nlc3MiLz4KICAgIDwvc2FtbHA6U3RhdHVzPgogICAgCiAgICAKICAgIDxzYW1sOkFzc2VydGlvbiBJRD0iX2FkYjM5YWFhLTIzYmYtNDMwZS05MjljLTRjMjMwM2QwYzQzZSIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDE0OjExOjI2LjY5NloiIFZlcnNpb249IjIuMCIgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgICAgICAKICAgICAgICAKICAgICAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgICAgICBodHRwczovL3ZhbGlkYXRvci5kZXYub25laWQucGFnb3BhLml0CiAgICAgICAgPC9zYW1sOklzc3Vlcj4KICAgICAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICAgICAgPGRzOlNpZ25lZEluZm8+CiAgICAgICAgICAgICAgICA8ZHM6Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgogICAgICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpSZWZlcmVuY2UgVVJJPSIjX2FkYjM5YWFhLTIzYmYtNDMwZS05MjljLTRjMjMwM2QwYzQzZSI+CiAgICAgICAgICAgICAgICAgICAgPGRzOlRyYW5zZm9ybXM+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+CiAgICAgICAgICAgICAgICAgICAgPC9kczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgICAgICA8ZHM6RGlnZXN0VmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgIG1IOFIxWXBTcGNVd2hiMWdveGJEVVFwVjRtdXFKRlo0QS9ETThkVWxDbjQ9CiAgICAgICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgIDwvZHM6UmVmZXJlbmNlPgogICAgICAgICAgICA8L2RzOlNpZ25lZEluZm8+CiAgICAgICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAgICAgIFhSeVd3MnJaYjZxaUlKdVdJeVNrNmRhc0JlNE5yUkVKbDVvUHFYZjYzVHZ3TEgxUng0aFRBTXpIK0F1MndCenZpWU1iQkdpb3hyeThYQjJvWGMzOENHYk1nMmJVVWZiMzZkY3FJOS9JZk1rVjRyenJmWllSaEo3bTZ0MVBVRzFmZ3g5WDdoZWdnMjZEZVlSTWM0eDgvOEZiOUxwSExRcUlSNGRNZ2QvSXBmemE1TGFWc3F4VUtvRjRkbDhMUU9QWW5HSnRIVmltQTA0RGdySHNWanJYQXdPSEU3YW41RDhZYkZNRGl0L25DMUVlV29jczJXTStXVGlUdDRvMmFFcXhCU3Rmd0Q0SHUvb21ZMWtqVzVLM3dBeGNaM3pxVkoraE9ScnU4WmlhVG5kK0ZtcXZZeFBRSmJLU3RubHorMUJEQk9mY05MZTdtbVVXU3RlR0RQUmltUT09CiAgICAgICAgICAgIDwvZHM6U2lnbmF0dXJlVmFsdWU+CiAgICAgICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICAgICAgPGRzOlg1MDlEYXRhPgogICAgICAgICAgICAgICAgICAgIDxkczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgICAgIDwvZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgPC9kczpYNTA5RGF0YT4KICAgICAgICAgICAgPC9kczpLZXlJbmZvPgogICAgICAgIDwvZHM6U2lnbmF0dXJlPgogICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOlN1YmplY3Q+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6TmFtZUlEIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6dHJhbnNpZW50IiBOYW1lUXVhbGlmaWVyPSJodHRwczovL3ZhbGlkYXRvci5kZXYub25laWQucGFnb3BhLml0Ij4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIF8wNTBhZDFjMi01ZmY3LTQ3NzAtYmMwNi1hMjI5YmVkMjJhMmMKICAgICAgICAgICAgCiAgICAgICAgICAgIDwvc2FtbDpOYW1lSUQ+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6U3ViamVjdENvbmZpcm1hdGlvbiBNZXRob2Q9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpjbTpiZWFyZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOlN1YmplY3RDb25maXJtYXRpb25EYXRhIEluUmVzcG9uc2VUbz0iXzRhYjc2NmU0OGRlMDFmNWI1MWNiMTg2ZTY0ZTY2NzJiIiBOb3RPbk9yQWZ0ZXI9IjIwMjQtMTAtMTFUMTQ6MTU6MDVaIiBSZWNpcGllbnQ9Imh0dHBzOi8vZGV2Lm9uZWlkLnBhZ29wYS5pdC9zYW1sL2FjcyIvPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6U3ViamVjdENvbmZpcm1hdGlvbj4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOlN1YmplY3Q+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6Q29uZGl0aW9ucyBOb3RCZWZvcmU9IjIwMjQtMTAtMTFUMTQ6MTE6MjZaIiBOb3RPbk9yQWZ0ZXI9IjIwMjQtMTAtMTFUMTQ6MTU6MDVaIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbDpBdWRpZW5jZVJlc3RyaWN0aW9uPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF1ZGllbmNlPgogICAgICAgICAgICAgICAgICAgIGh0dHBzOi8vZGV2Lm9uZWlkLnBhZ29wYS5pdAogICAgICAgICAgICAgICAgPC9zYW1sOkF1ZGllbmNlPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXVkaWVuY2VSZXN0cmljdGlvbj4KICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgPC9zYW1sOkNvbmRpdGlvbnM+CiAgICAgICAgIAogICAgICAgIAogICAgICAgIDxzYW1sOkF1dGhuU3RhdGVtZW50IEF1dGhuSW5zdGFudD0iMjAyNC0xMC0xMVQxNDoxMToyNloiIFNlc3Npb25JbmRleD0iXzMxMjAyZGQ5LWZmZTEtNGNhOS04ZTE3LTBlNzBlYjVkYWRiNCI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgPHNhbWw6QXV0aG5Db250ZXh0PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPgogICAgICAgICAgICAgICAgICAgIGh0dHBzOi8vd3d3LnNwaWQuZ292Lml0L1NwaWRMMgogICAgICAgICAgICAgICAgPC9zYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXV0aG5Db250ZXh0PgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWw6QXV0aG5TdGF0ZW1lbnQ+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWw6QXR0cmlidXRlU3RhdGVtZW50PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJzcGlkQ29kZSIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDpiYXNpYyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHNhbWw6QXR0cmlidXRlVmFsdWUgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4c2k6dHlwZT0ieHM6c3RyaW5nIj4KICAgICAgICAgICAgICAgICAgICBBR0lELTAwMQogICAgICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJmaXNjYWxOdW1iZXIiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+CiAgICAgICAgICAgICAgICAgICAgVElOSVQtR0RBU0RWMDBBMDFINTAxSgogICAgICAgICAgICAgICAgPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L3NhbWw6QXR0cmlidXRlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L3NhbWw6QXR0cmlidXRlU3RhdGVtZW50PgogICAgICAgIAogICAgCiAgICA8L3NhbWw6QXNzZXJ0aW9uPgogICAgCgo8L3NhbWxwOlJlc3BvbnNlPg==";
  public static final String PROCESS_CANCELED_BY_USER_SAML_RESPONSE_111 = "PHNhbWxwOlJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL2Rldi5vbmVpZC5wYWdvcGEuaXQvc2FtbC9hY3MiIElEPSJfNjI5ZTFlODQtMmFmNC00M2I0LThjZTEtYzYwYjdlYWVlOTljIiBJblJlc3BvbnNlVG89Il8xY2ViN2ZlMjYyMGVkZWYzNGEzNzRhYjlkMDAyMTVlNyIgSXNzdWVJbnN0YW50PSIyMDI0LTEwLTExVDEyOjE2OjI0WiIgVmVyc2lvbj0iMi4wIiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIAogICAgCiAgICA8c2FtbDpJc3N1ZXIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPgogICAgICAgIGh0dHBzOi8vdmFsaWRhdG9yLmRldi5vbmVpZC5wYWdvcGEuaXQKICAgIDwvc2FtbDpJc3N1ZXI+CiAgICA8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8ZHM6U2lnbmVkSW5mbz4KICAgICAgICAgICAgPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KICAgICAgICAgICAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfNjI5ZTFlODQtMmFmNC00M2I0LThjZTEtYzYwYjdlYWVlOTljIj4KICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm1zPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPgogICAgICAgICAgICAgICAgICAgIDxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KICAgICAgICAgICAgICAgIDwvZHM6VHJhbnNmb3Jtcz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KICAgICAgICAgICAgICAgIDxkczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgICAgICAgICBPKzRGejMyTFFsS0ZJNG1GbFNCMFVmN3VuT1R3ZHhpOEdlOVJUdVJhRS9VPQogICAgICAgICAgICAgICAgPC9kczpEaWdlc3RWYWx1ZT4KICAgICAgICAgICAgPC9kczpSZWZlcmVuY2U+CiAgICAgICAgPC9kczpTaWduZWRJbmZvPgogICAgICAgIDxkczpTaWduYXR1cmVWYWx1ZT4KICAgICAgICAgICAga3RHU2todzNTZWxuN0QvZWVyWGM5RDV1VzI3VFNpQVNSSjE2RHhFdCtZOU1JSHl0MGovUnZPbWRzRVdlRXdCOUNFckVzME51aXNTeVllWlpkOUNudVpka1VvN1ErQjJwK3RndXFlWVBzUmRUTVNYRnROYnZSUENmK3cvdG41WmlFRUZNRFNQTmNnNUl1MkducGN3SUN5YjRJdXNJSUswYXQ4aEdqT2k5cUlEZWZzV0RlZmJrbjNWbHp5aHkydFdUZm9Md05lZllVVDZKWEVHUVRUUXgwbDBOZ1p4MFlGZE4xZXh6YnpGTithN01QaGZKcTNUTExVc0JqdGFxWnhURUQ4cC80Si9OZkkrTTNub3Z3aUVSUTBFSXZ3UEJRSFhvMTJDUzVMSjBlUGJpN2NvL29wQ2hhVnZybklLN3Q5M1R0WWNoeGNBU1JmNXNwQ0JMNXNvcGJRPT0KICAgICAgICA8L2RzOlNpZ25hdHVyZVZhbHVlPgogICAgICAgIDxkczpLZXlJbmZvPgogICAgICAgICAgICA8ZHM6WDUwOURhdGE+CiAgICAgICAgICAgICAgICA8ZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgICAgICAgICAgICAgIE1JSUVHRENDQXdDZ0F3SUJBZ0lKQU9yWWo5b0xFSkN3TUEwR0NTcUdTSWIzRFFFQkN3VUFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERBZUZ3MHhPVEEwTVRFeE1EQXlNRGhhRncweU5UQXpNRGd4TURBeU1EaGFNR1V4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFTk1Bc0dBMVVFQnhNRVVtOXRaVEVOTUFzR0ExVUVDaE1FUVdkSlJERVNNQkFHQTFVRUN4TUpRV2RKUkNCVVJWTlVNUlF3RWdZRFZRUURFd3RoWjJsa0xtZHZkaTVwZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSzhrSlZvK3VnUnJiYnY5eGhYQ3VWcnFpNEI3L01RelFjNjJvY3dsRkZ1akpOZDRtMW1Ya1VIRmJndndoUmtRcW8yREFtRmVIaXdDa0pUM0sxZWVYSUZoTkZGcm9FekdQek9OeWVrTHBqTnZtWUlzMUNGdmlyR09qMGJrRWlHYUtFcysvdW16R2p4SWh5NUpRbHFYRTk2eTErSXpwMlFoSmltREswL0tOaWo4STFienhzZVAwWWdjNFNGdmVLUys3UU8rUHJMeldrbEVXR01zNERNNVpjM1ZSSzdnNExXUFdaaEtkSW1DMXJuUysvbEVtSFN2SGlzZFZwL0RKdGJTclp3U1lUUnZUVHo1SVpEU3E0a0F6ckRmcGoxNmg3YjN0M25GR2M4VW9ZMlJvNHRSWjNhaEoycjNiNzl5SzZDNXBoWTdDQUFOdVczZ0RkaFZqaUJOWXMwQ0F3RUFBYU9CeWpDQnh6QWRCZ05WSFE0RUZnUVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3d3Z1pjR0ExVWRJd1NCanpDQmpJQVUzLzdrVjJ0YmRGdHBoYlNBNExINyt3OFNrY3loYWFSbk1HVXhDekFKQmdOVkJBWVRBa2xVTVE0d0RBWURWUVFJRXdWSmRHRnNlVEVOTUFzR0ExVUVCeE1FVW05dFpURU5NQXNHQTFVRUNoTUVRV2RKUkRFU01CQUdBMVVFQ3hNSlFXZEpSQ0JVUlZOVU1SUXdFZ1lEVlFRREV3dGhaMmxrTG1kdmRpNXBkSUlKQU9yWWo5b0xFSkN3TUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSk5GcVhnL1YzYWltSktVbVVhcW1RRUVvU2MzcXZYRklUdlQ1ZjViS3c5eWsvTlZoUjZ3bmRMK3ovMjRoMU9kUnFzNzZibGdIOGsxMTZxV05ra0R0dDBBbFNqUU94NXF2RlloMVV2aU9qTmRSSTRXa1lPTlN3K3Z1YXZjeCtmQjZPNUpESE5tTWhNeVNLVG5tUnFUa3loanJjaDd6YUZJV1VTVjdoc0J1eHBxbXJXRG9MV2RYYlYzZUZIM21JTkE1QW9JWS9tMGJadHpaN1lOZ2lGV3p4UWdla3B4ZDB2Y1RzZU1uQ2NYbnNBbGN0ZGlyMEZvQ1p6dHhNdVpqbEJqd0xUdE02UnkzLzQ4TE1NOForbHc3Tk1jaUtMTFRHUXlVOFhtS0tTU09oMGRHaDVMcmx0NUd4SUlKa0g4MUMwWWltV2Viejg0NjRRUEwzUmJMblRLZytjPQogICAgICAgICAgICAgICAgPC9kczpYNTA5Q2VydGlmaWNhdGU+CiAgICAgICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgICAgPC9kczpLZXlJbmZvPgogICAgPC9kczpTaWduYXR1cmU+CiAgICAKCiAgICAKICAgIDxzYW1scDpTdGF0dXM+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6UmVzcG9uZGVyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpBdXRobkZhaWxlZCIvPgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8L3NhbWxwOlN0YXR1c0NvZGU+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgPHNhbWxwOlN0YXR1c01lc3NhZ2U+CiAgICAgICAgICAgIEVycm9yQ29kZSBucjI1CiAgICAgICAgPC9zYW1scDpTdGF0dXNNZXNzYWdlPgogICAgICAgIAogICAgCiAgICA8L3NhbWxwOlN0YXR1cz4KICAgIAoKCjwvc2FtbHA6UmVzcG9uc2U+";
}
