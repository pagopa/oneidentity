package it.pagopa.oneid.common.model.exception.enums;

import lombok.Getter;

@Getter
public enum ErrorCode {

  MARSHALLER_ERROR("MARSHALLER_ERROR", "Empty marshaller"),
  IDP_SSO_ENDPOINT_NOT_FOUND("IDP_SSO_ENDPOINT_NOT_FOUND", "Unable to find the idp-sso endpoint"),
  GENERIC_AUTHN_REQUEST_CREATION("GENERIC_AUTHN_REQUEST_CREATION",
      "Generic AuthnRequest Exception"),
  SAML_UTILS_ERROR("SAML_UTILS_ERROR", "Generic exception inside SAMLUtils"),
  CALLBACK_URI_NOT_FOUND("CALLBACK_URI_NOT_FOUND",
      "Callback URI not found from in Client metadata"),
  CLIENT_NOT_FOUND("CLIENT_NOT_FOUND", "Client not registered"),
  ASSERTION_NOT_FOUND("ASSERTION_NOT_FOUND", "Assertion not found"),
  IDP_NOT_FOUND("IDP_NOT_FOUND", "IDP not found"),
  SESSION_ERROR("SESSION_ERROR", "Error during session handling"),
  SAML_VALIDATION_ERROR("SAML_VALIDATION_ERROR", "Error during SAML Response validation"),
  SIGN_JWT_ERROR("SIGN_JWT_ERROR", "Error signing JWT"),
  OIDC_AUTHORIZATION_EXCEPTION("OIDC_AUTHORIZATION_EXCEPTION", "Error during authorization"),
  SAML_RESPONSE_STATUS_ERROR("SAML_RESPONSE_STATUS_ERROR", "Error found in SAML Response status"),
  GENERIC_HTML_ERROR("GENERIC_HTML_ERROR", "Error during execution"),
  AUTHORIZATION_ERROR("AUTHORIZATION_ERROR", "Authorization error"),
  AUTHORIZATION_ERROR_IDP("AUTHORIZATION_ERROR_IDP", "IDP not selected"),
  AUTHORIZATION_ERROR_STATE("AUTHORIZATION_ERROR_STATE", "State is empty"),
  AUTHORIZATION_ERROR_RESPONSE_TYPE("AUTHORIZATION_ERROR_RESPONSE_TYPE",
      "Response type not selected"),
  INVALID_SCOPE_ERROR("INVALID_SCOPE_ERROR", "Scope not supported"),
  INVALID_RESPONSE_TYPE_ERROR("INVALID_RESPONSE_TYPE", "Response type not valid"),
  UNSUPPORTED_RESPONSE_TYPE_ERROR("UNSUPPORTED_RESPONSE_TYPE_ERROR", "Response type not supported"),
  UNSUPPORTED_GRANT_TYPE_ERROR("UNSUPPORTED_GRANT_TYPE_ERROR", "Grant type not supported"),
  INVALID_GRANT_ERROR("INVALID_GRANT_ERROR", "Invalid grant"),
  INVALID_CLIENT_ERROR("INVALID_CLIENT_ERROR", "Invalid client"),
  ERRORCODE_NR08(FeErrorCode.ERRORCODE_NR08.getFeErrorCode(), ""),
  ERRORCODE_NR09(FeErrorCode.ERRORCODE_NR09.getFeErrorCode(), ""),
  ERRORCODE_NR11(FeErrorCode.ERRORCODE_NR11.getFeErrorCode(), ""),
  ERRORCODE_NR12(FeErrorCode.ERRORCODE_NR12.getFeErrorCode(), ""),
  ERRORCODE_NR13(FeErrorCode.ERRORCODE_NR13.getFeErrorCode(), ""),
  ERRORCODE_NR14(FeErrorCode.ERRORCODE_NR14.getFeErrorCode(), ""),
  ERRORCODE_NR15(FeErrorCode.ERRORCODE_NR15.getFeErrorCode(), ""),
  ERRORCODE_NR16(FeErrorCode.ERRORCODE_NR16.getFeErrorCode(), ""),
  ERRORCODE_NR17(FeErrorCode.ERRORCODE_NR17.getFeErrorCode(), ""),
  ERRORCODE_NR18(FeErrorCode.ERRORCODE_NR18.getFeErrorCode(), ""),
  ERRORCODE_NR19(FeErrorCode.ERRORCODE_NR19.getFeErrorCode(), ""),
  ERRORCODE_NR20(FeErrorCode.ERRORCODE_NR20.getFeErrorCode(), ""),
  ERRORCODE_NR21(FeErrorCode.ERRORCODE_NR21.getFeErrorCode(), ""),
  ERRORCODE_NR22(FeErrorCode.ERRORCODE_NR22.getFeErrorCode(), ""),
  ERRORCODE_NR23(FeErrorCode.ERRORCODE_NR23.getFeErrorCode(), ""),
  ERRORCODE_NR25(FeErrorCode.ERRORCODE_NR25.getFeErrorCode(), ""),
  ERRORCODE_NR30(FeErrorCode.ERRORCODE_NR30.getFeErrorCode(), ""),
  IDP_ERROR_RESPONSE_SIGNATURE_NOT_PRESENT(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Response signature not present"),
  IDP_ERROR_ASSERTION_SIGNATURE_NOT_PRESENT(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Assertion signature not present"),
  IDP_ERROR_SUBJECT_CONFIRMATION_NOT_INITIALIZED(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "SubjectConfirmation not correctly initialized"),
  IDP_ERROR_MULTIPLE_SUBJECT_CONFIRMATIONS(
      FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Multiple SubjectConfirmations, only one is expected"),
  IDP_ERROR_SUBJECT_CONFIRMATION_INVALID_METHOD_ATTRIBUTE(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Invalid method attribute for SubjectConfirmation"),
  IDP_ERROR_SUBJECT_CONFIRMATION_DATA_NOT_FOUND(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "SubjectConfirmationData not found"),
  IDP_ERROR_AUTHN_STATEMENTS_MISSING_OR_EMPTY(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "AuthnStatements element is missing or empty"),
  IDP_ERROR_AUTHN_CONTEXT_MISSING(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "AuthnContext element is missing"),
  IDP_ERROR_AUTHN_CONTEXT_CLASS_REF_MISSING(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "AuthnContextClassRef element is missing"),
  IDP_ERROR_AUTHN_CONTEXT_CLASS_REF_EMPTY(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "AuthnContextClassRef element is missing or empty"),
  IDP_ERROR_AUTHN_CONTEXT_CLASS_REF_NOT_MATCHING_REQUESTED_AUTH_LEVEL(
      FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "AuthnContextClassRef value does not match the requested AuthLevel"),
  IDP_ERROR_INVALID_AUTHN_CONTEXT_CLASS_REF(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Invalid AuthnContextClassRef value"),
  IDP_ERROR_SUBJECT_NOT_INITIALIZED(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Subject not correctly initialized"),
  IDP_ERROR_INVALID_NAME_ID_TYPE(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Invalid Name ID type for Subject"),
  IDP_ERROR_INVALID_NAME_ID_FORMAT(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Invalid NameId format for Subject"),
  IDP_ERROR_INVALID_NAME_QUALIFIER(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Invalid NameQualifier for Subject"),
  IDP_ERROR_RECIPIENT_NOT_FOUND(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(), "Recipient not found"),
  IDP_ERROR_RECIPIENT_MISMATCH(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(), "Recipient mismatch"),
  IDP_ERROR_AUDIENCE_RESTRICTIONS_MISSING_OR_EMPTY(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Audience Restrictions element is missing or empty"),
  IDP_ERROR_MULTIPLE_AUDIENCE_RESTRICTIONS(
      FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Multiple Audience Restrictions, expected one"),
  IDP_ERROR_AUDIENCE_MISSING_OR_EMPTY(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Audience element is missing or empty"),
  IDP_ERROR_MULTIPLE_AUDIENCES(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Multiple Audiences, expected one"),
  IDP_ERROR_AUDIENCE_MISMATCH(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(), "Audience mismatch"),
  IDP_ERROR_ISSUER_NOT_FOUND(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(), "Issuer not found"),
  IDP_ERROR_ISSUER_VALUE_BLANK(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(), "Issuer value is blank"),
  IDP_ERROR_ISSUER_MISMATCH(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(), "Issuer mismatch"),
  IDP_ERROR_ISSUER_INVALID_FORMAT(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Invalid format attribute for Issuer element"),
  IDP_ERROR_MISSING_CONDITIONS(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Conditions element is missing"),
  IDP_ERROR_NOT_ON_OR_AFTER_NOT_FOUND(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "NotOnOrAfter not found"),
  IDP_ERROR_NOT_BEFORE_NOT_FOUND(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(), "NotBefore not found"),
  IDP_ERROR_NOT_BEFORE_IN_THE_FUTURE(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "NotBefore is in the future"),
  IDP_ERROR_NOT_ON_OR_AFTER_EXPIRED(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "NotOnOrAfter expired"),
  IDP_ERROR_ASSERTION_ID_MISSING(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Assertion ID is missing"),
  IDP_ERROR_ATTRIBUTE_STATEMENT_NOT_PRESENT(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "AttributeStatement element is missing or empty"),
  IDP_ERROR_MULTIPLE_ATTRIBUTE_STATEMENTS(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Multiple AttributeStatements, expected one"),
  IDP_ERROR_ATTRIBUTES_NOT_PRESENT(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Attributes element is missing or empty"),
  IDP_ERROR_ATTRIBUTES_NOT_OBTAINED_FROM_SAML_ASSERTION(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Attributes not obtained from SAML assertion"),
  IDP_ERROR_ATTRIBUTES_NOT_MATCHING(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Obtained attributes do not match requested attributes"),
  IDP_ERROR_ATTRIBUTES_NOT_MATCHING_FOR_CIE(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Obtained attributes do not match requested attributes for CIE"),
  IDP_ERROR_ASSERTION_NOT_FOUND(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(), "Assertion not found"),
  IDP_ERROR_MULTIPLE_ASSERTIONS(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Multiple Assertions, only one is expected"),
  OI_ERROR_IDP_NOT_FOUND(FeErrorCode.FE_OI_ERROR.getFeErrorCode(), "IDP not found"),
  OI_ERROR_VALIDATE_SIGNATURE_ERROR(FeErrorCode.FE_OI_ERROR.getFeErrorCode(),
      "Error validating signature"),
  IDP_ERROR_RESPONSE_INVALID_SIGNATURE(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Response invalid signature"),
  IDP_ERROR_ASSERTION_INVALID_SIGNATURE(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Assertion invalid signature"),
  IDP_ERROR_INVALID_SAML_VERSION(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(), "Invalid SAML version"),
  IDP_ERROR_IN_RESPONSE_TO_MISSING(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "In Response To parameter not valid"),
  IDP_ERROR_NOT_VALID_RESPONSE_ID(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Response ID not valid"),
  IDP_ERROR_ISSUE_INSTANT_MISSING(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Issue instant is missing"),
  IDP_ERROR_ISSUE_INSTANT_AFTER_REQUEST(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Issue instant after request"),
  IDP_ERROR_ISSUE_INSTANT_IN_THE_FUTURE(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Issue instant in the future"),
  IDP_ERROR_DESTINATION_NOT_FOUND(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(),
      "Destination not found"),
  IDP_ERROR_DESTINATION_MISMATCH(FeErrorCode.FE_IDP_ERROR.getFeErrorCode(), "Destination mismatch"),
  CLIENT_UTILS_ERROR("CLIENT_UTILS_ERROR", "Error during Client credentials initialization"),
  CLIENT_REGISTRATION_SERVICE_ERROR("CLIENT_REGISTRATION_SERVICE_ERROR",
      "Error during ClientRegistrationService method");


  private final String errorCode;
  private final String errorMessage;

  ErrorCode(String errorCode, String errorMessage) {
    this.errorCode = errorCode;
    this.errorMessage = errorMessage;
  }
}
